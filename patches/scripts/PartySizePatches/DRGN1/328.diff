--- original
+++ modified
@@ -28,7 +28,7 @@
 mov 0x20, var[128 + stor[8]][5]
 mov 0x0, var[128 + stor[8]][6]
 mov 0x0, var[128 + stor[8]][7]
-add 0x81, stor[8]
+add var[45][136], stor[8]
 mov 0x0, var[45][stor[8]]
 mov var[45][0], stor[8]
 jmp_cmp !=, 0x0, stor[8], inl[:LABEL_2]
@@ -282,7 +282,7 @@
 LABEL_11:
 mov var[32][stor[11]], stor[10]
 call 371, stor[10], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp !&, 0x80, var[45][stor[9]], inl[:LABEL_12]
 and 0xff7f, var[45][stor[9]]
 or 0x10000, var[45][stor[9]]
@@ -295,7 +295,7 @@
 LABEL_14:
 mov var[32][stor[11]], stor[28]
 call 371, stor[28], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 gosub inl[:LABEL_94]
 incr stor[11]
 jmp_cmp <, stor[11], var[33], inl[:LABEL_14]
@@ -1080,7 +1080,7 @@
 shr 0x1, stor[9]
 LABEL_66:
 call 371, stor[30], stor[10], 0x0
-add 0xbd, stor[10]
+add var[45][196], stor[10]
 mov var[45][stor[10]], stor[10]
 jmp_cmp !&, 0x2, stor[10], inl[:LABEL_67]
 jmp_cmp &, 0x4, stor[10], inl[:LABEL_67]
@@ -1088,7 +1088,7 @@
 LABEL_67:
 jmp_cmp >=, 0x0, stor[9], inl[:LABEL_69]
 call 371, stor[30], stor[10], 0x0
-add 0xbd, stor[10]
+add var[45][196], stor[10]
 jmp_cmp !&, 0x1, var[45][stor[10]], inl[:LABEL_69]
 call 177, stor[30], CURRENT_HP, stor[10]
 call 177, stor[30], MAX_HP, stor[11]
@@ -1638,7 +1638,7 @@
 call 169, stor[0], STATUS, stor[8]
 jmp_cmp !&, 0x10, stor[8], inl[:LABEL_74]
 call 371, stor[0], stor[8], 0x0
-add 0x81, stor[8]
+add var[45][136], stor[8]
 or 0xf00, var[45][stor[8]]
 LABEL_74:
 return
@@ -1692,7 +1692,7 @@
 call 169, stor[0], GUARD, stor[8]
 jmp_cmp !=, 0x0, stor[8], inl[:LABEL_79]
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 call 169, stor[0], STATUS, stor[8]
 and 0xff, stor[8]
 jmp_cmp ==, 0x0, stor[8], inl[:LABEL_82]
@@ -1793,7 +1793,7 @@
 gosub inl[:LABEL_85]
 jmp_cmp >, 0x0, stor[8], inl[:LABEL_93]
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp &, 0x80, var[45][stor[9]], inl[:LABEL_91]
 or 0x80, var[45][stor[9]]
 call 600, stor[18]
@@ -2194,14 +2194,14 @@
 return
 LABEL_120:
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp !&, 0x80, var[45][stor[9]], inl[:LABEL_121]
 or 0x40, var[45][stor[9]]
 LABEL_121:
 return
 LABEL_122:
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 mov 0x0, var[45][stor[9]]
 call 169, stor[0], STATUS, stor[8]
 and 0xffffff00, stor[8]
@@ -2299,21 +2299,38 @@
 return
 ENTRYPOINT_0:
+mov var[35], stor[3]
+add 0x2, stor[3]
+jmp_cmp ==, stor[3], var[37], inl[:SKIP_ADD_BOMBS]
+LOOP_ADD_BOMBS:
+mov var[35], stor[3]
+add 0x2, stor[3]
+call 360, 0x0, 0x2, stor[5]
+mov 0xffffffff, stor[5]
+jmp_cmp !=, stor[3], var[37], inl[:LOOP_ADD_BOMBS]
+SKIP_ADD_BOMBS:
+mov 0xffffffff, stor[4]
+mov 0xffffffff, stor[3]
 gosub inl[:LABEL_0]
 call 524, stor[0], 0x0
 call 173, stor[0], 0x1
 or 0x200, stor[7]
 call 138, stor[0], 0x0
 LABEL_127:
 wait_cmp &, 0x8, stor[7]
 gosub inl[:LABEL_3]
 jmp_cmp !=, 0x0, stor[8], inl[:LABEL_129]
 call 371, stor[0], stor[8], 0x1
 mov stor[8], stor[18]
 sub 0x2, stor[18]
+mov stor[18], stor[19]
+LOOP:
+jmp_cmp <, stor[19], 0x3, inl[:SKIP_CORRECT_BOMBS_ADDED_BY_SCRIPT]
+sub 0x3, stor[19]
+SKIP_CORRECT_BOMBS_ADDED_BY_SCRIPT:
+jmp_cmp >, stor[19], 0x2, inl[:LOOP]
 mov var[34][stor[18]], stor[28]
 mov stor[28], var[45][251]
-gosub_table stor[18], inl[:LABEL_131]
-gosub_table stor[18], inl[:LABEL_130]
+gosub_table stor[19], inl[:LABEL_131]
+gosub_table stor[19], inl[:LABEL_130]
 jmp_cmp <, 0x2, stor[8], inl[:LABEL_128]
 gosub inl[:LABEL_49]
 jmp inl[:LABEL_129]