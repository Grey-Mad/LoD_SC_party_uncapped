--- original
+++ modified
@@ -245,7 +245,7 @@
 shr 0x1, stor[9]
 LABEL_15:
 call 371, stor[30], stor[10], 0x0
-add 0xbd, stor[10]
+add var[45][196], stor[10]
 mov var[45][stor[10]], stor[10]
 jmp_cmp !&, 0x2, stor[10], inl[:LABEL_16]
 jmp_cmp &, 0x4, stor[10], inl[:LABEL_16]
@@ -253,7 +253,7 @@
 LABEL_16:
 jmp_cmp >=, 0x0, stor[9], inl[:LABEL_18]
 call 371, stor[30], stor[10], 0x0
-add 0xbd, stor[10]
+add var[45][196], stor[10]
 jmp_cmp !&, 0x1, var[45][stor[10]], inl[:LABEL_18]
 call 177, stor[30], CURRENT_HP, stor[10]
 call 177, stor[30], MAX_HP, stor[11]
@@ -412,7 +412,7 @@
 call 169, stor[0], STATUS, stor[8]
 jmp_cmp !&, 0x10, stor[8], inl[:LABEL_23]
 call 371, stor[0], stor[8], 0x0
-add 0x81, stor[8]
+add var[45][136], stor[8]
 or 0xf00, var[45][stor[8]]
 LABEL_23:
 return
@@ -1427,7 +1427,7 @@
 LABEL_41:
 mov var[32][stor[11]], stor[10]
 call 371, stor[10], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp !&, 0x80, var[45][stor[9]], inl[:LABEL_42]
 and 0xff7f, var[45][stor[9]]
 or 0x10000, var[45][stor[9]]
@@ -1440,7 +1440,7 @@
 LABEL_44:
 mov var[32][stor[11]], stor[28]
 call 371, stor[28], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 gosub inl[:LABEL_106]
 incr stor[11]
 jmp_cmp <, stor[11], var[33], inl[:LABEL_44]
@@ -2157,7 +2157,7 @@
 mov 0x0, stor[31]
 mov 0x0, stor[16]
 call 371, stor[32], stor[8], 0x0
-add 0xbd, stor[8]
+add var[45][196], stor[8]
 jmp_cmp &, 0x2, var[45][stor[8]], inl[:LABEL_73]
 call 169, stor[0], STATUS, stor[8]
 jmp_cmp &, 0x10, stor[8], inl[:LABEL_73]
@@ -3367,7 +3367,7 @@
 call 169, stor[0], GUARD, stor[8]
 jmp_cmp !=, 0x0, stor[8], inl[:LABEL_91]
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 call 169, stor[0], STATUS, stor[8]
 and 0xff, stor[8]
 jmp_cmp ==, 0x0, stor[8], inl[:LABEL_94]
@@ -3468,7 +3468,7 @@
 gosub inl[:LABEL_97]
 jmp_cmp >, 0x0, stor[8], inl[:LABEL_105]
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp &, 0x80, var[45][stor[9]], inl[:LABEL_103]
 or 0x80, var[45][stor[9]]
 call 600, stor[18]
@@ -3869,14 +3869,14 @@
 return
 LABEL_132:
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp !&, 0x80, var[45][stor[9]], inl[:LABEL_133]
 or 0x40, var[45][stor[9]]
 LABEL_133:
 return
 LABEL_134:
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 mov 0x0, var[45][stor[9]]
 call 169, stor[0], STATUS, stor[8]
 and 0xffffff00, stor[8]
@@ -4373,7 +4373,7 @@
 gosub inl[:LABEL_146]
 or 0x20, stor[stor[stor[0], 28], 7]
 mov 0x9, var[45][243]
-call 498, 0xc3, stor[8]
+call 498, id[lod:burn_out], reg[0]
 return
 JMP_70d4_7:
 data 0x13
@@ -4446,56 +4446,22 @@
 wait stor[23]
 return
 LABEL_160:
-call 600, stor[8]
-mov stor[8], var[45][208]
-call 600, stor[9]
-mov stor[9], var[45][209]
-mov 0x0, stor[10]
+mov 0, stor[10]
 LABEL_161:
-mov 0xffffffff, stor[stor[8], 8 + stor[10]]
+call 497, null, reg[stor[10]]
+jmp_cmp ==, null, reg[stor[10]], inl[:LABEL_162]
 incr stor[10]
-jmp_cmp >, 0x18, stor[10], inl[:LABEL_161]
-mov 0x0, stor[10]
+jmp_cmp >, 100, stor[10], inl[:LABEL_161]
 LABEL_162:
-mov 0xffffffff, stor[stor[9], 8 + stor[10]]
-incr stor[10]
-jmp_cmp >, 0x18, stor[10], inl[:LABEL_162]
-mov 0x0, stor[10]
-LABEL_163:
-call 497, 0xffffffff, stor[11]
-jmp_cmp ==, 0xffffffff, stor[11], inl[:LABEL_165]
-mov stor[11], stor[stor[8], 8 + stor[10]]
-incr stor[10]
-jmp_cmp >, 0x18, stor[10], inl[:LABEL_163]
-mov 0x0, stor[10]
-LABEL_164:
-call 497, 0xffffffff, stor[11]
-jmp_cmp ==, 0xffffffff, stor[11], inl[:LABEL_165]
-mov stor[11], stor[stor[9], 8 + stor[10]]
-incr stor[10]
-jmp_cmp >, 0x18, stor[10], inl[:LABEL_164]
-LABEL_165:
 return
 LABEL_166:
-mov var[45][208], stor[8]
-mov var[45][209], stor[9]
 mov 0x0, stor[10]
 LABEL_167:
-mov stor[stor[8], 8 + stor[10]], stor[11]
-jmp_cmp ==, 0xffffffff, stor[11], inl[:LABEL_169]
-call 498, stor[11], stor[11]
+jmp_cmp ==, null, reg[stor[10]], inl[:LABEL_169]
+call 498, reg[stor[10]], reg[stor[10]]
 incr stor[10]
-jmp_cmp >, 0x18, stor[10], inl[:LABEL_167]
-mov 0x0, stor[10]
-LABEL_168:
-mov stor[stor[9], 8 + stor[10]], stor[11]
-jmp_cmp ==, 0xffffffff, stor[11], inl[:LABEL_169]
-call 498, stor[11], stor[11]
-incr stor[10]
-jmp_cmp >, 0x18, stor[10], inl[:LABEL_168]
+jmp_cmp >, 100, stor[10], inl[:LABEL_167]
 LABEL_169:
-deallocate_other stor[8]
-deallocate_other stor[9]
 return
 LABEL_170:
 mov 0x1, stor[17]
