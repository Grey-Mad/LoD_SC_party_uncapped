--- original
+++ modified
@@ -27,7 +27,7 @@
 mov 0x20, var[128 + stor[8]][5]
 mov 0x0, var[128 + stor[8]][6]
 mov 0x0, var[128 + stor[8]][7]
-add 0x81, stor[8]
+add var[45][136], stor[8]
 mov 0x0, var[45][stor[8]]
 mov var[45][0], stor[8]
 jmp_cmp !=, 0x0, stor[8], inl[:LABEL_2]
@@ -374,7 +374,7 @@
 LABEL_28:
 mov var[32][stor[11]], stor[10]
 call 371, stor[10], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp !&, 0x80, var[45][stor[9]], inl[:LABEL_29]
 and 0xff7f, var[45][stor[9]]
 or 0x10000, var[45][stor[9]]
@@ -387,7 +387,7 @@
 LABEL_31:
 mov var[32][stor[11]], stor[28]
 call 371, stor[28], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 gosub inl[:LABEL_133]
 incr stor[11]
 jmp_cmp <, stor[11], var[33], inl[:LABEL_31]
@@ -602,7 +602,7 @@
 mov 0x0, stor[31]
 mov 0x0, stor[16]
 call 371, stor[32], stor[8], 0x0
-add 0xbd, stor[8]
+add var[45][196], stor[8]
 jmp_cmp &, 0x2, var[45][stor[8]], inl[:LABEL_53]
 call 169, stor[0], STATUS, stor[8]
 jmp_cmp &, 0x10, stor[8], inl[:LABEL_53]
@@ -1466,7 +1466,7 @@
 shr 0x1, stor[9]
 LABEL_100:
 call 371, stor[30], stor[10], 0x0
-add 0xbd, stor[10]
+add var[45][196], stor[10]
 mov var[45][stor[10]], stor[10]
 jmp_cmp !&, 0x2, stor[10], inl[:LABEL_101]
 jmp_cmp &, 0x4, stor[10], inl[:LABEL_101]
@@ -1474,7 +1474,7 @@
 LABEL_101:
 jmp_cmp >=, 0x0, stor[9], inl[:LABEL_103]
 call 371, stor[30], stor[10], 0x0
-add 0xbd, stor[10]
+add var[45][196], stor[10]
 jmp_cmp !&, 0x1, var[45][stor[10]], inl[:LABEL_103]
 call 177, stor[30], CURRENT_HP, stor[10]
 call 177, stor[30], MAX_HP, stor[11]
@@ -2010,7 +2010,7 @@
 call 169, stor[0], STATUS, stor[8]
 jmp_cmp !&, 0x10, stor[8], inl[:LABEL_111]
 call 371, stor[0], stor[8], 0x0
-add 0x81, stor[8]
+add var[45][136], stor[8]
 or 0xf00, var[45][stor[8]]
 LABEL_111:
 return
@@ -2058,7 +2058,7 @@
 call 169, stor[0], GUARD, stor[8]
 jmp_cmp !=, 0x0, stor[8], inl[:LABEL_118]
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 call 169, stor[0], STATUS, stor[8]
 and 0xff, stor[8]
 jmp_cmp ==, 0x0, stor[8], inl[:LABEL_121]
@@ -2159,7 +2159,7 @@
 gosub inl[:LABEL_124]
 jmp_cmp >, 0x0, stor[8], inl[:LABEL_132]
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp &, 0x80, var[45][stor[9]], inl[:LABEL_130]
 or 0x80, var[45][stor[9]]
 call 600, stor[18]
@@ -2560,14 +2560,14 @@
 return
 LABEL_159:
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp !&, 0x80, var[45][stor[9]], inl[:LABEL_160]
 or 0x40, var[45][stor[9]]
 LABEL_160:
 return
 LABEL_161:
 call 371, stor[0], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 mov 0x0, var[45][stor[9]]
 call 169, stor[0], STATUS, stor[8]
 and 0xffffff00, stor[8]
@@ -2598,7 +2598,7 @@
 LABEL_163:
 mov var[32][stor[8]], stor[10]
 call 371, stor[10], stor[9], 0x0
-add 0x81, stor[9]
+add var[45][136], stor[9]
 jmp_cmp !&, 0x80, var[45][stor[9]], inl[:LABEL_164]
 and 0xffffff7f, var[45][stor[9]]
 or 0x10000, var[45][stor[9]]
@@ -2960,16 +2960,16 @@
 mov var[34][0], stor[27]
 call 138, stor[27], 0x0
 mov var[34][1], stor[27]
+jmp_cmp ==, stor[27], 0xffffffff, inl[:SKIP_SET_BENT_INVIS_0]
 call 138, stor[27], 0x0
+SKIP_SET_BENT_INVIS_0:
 mov var[34][2], stor[27]
+jmp_cmp ==, stor[27], 0xffffffff, inl[:SKIP_SET_BENT_INVIS_1]
 call 138, stor[27], 0x0
+SKIP_SET_BENT_INVIS_1:
 mov var[36][0], stor[26]
 call 138, stor[26], 0x1
-mov var[34][2], stor[27]
-call 167, stor[27], stor[10]
-jmp_cmp ==, stor[10], 0x1, inl[:LABEL_186]
-mov var[34][1], stor[27]
-LABEL_186:
+gosub inl[:PREPARE_FINISHER_SLOT]
 call 139, stor[27], 0x1
 call 128, stor[26], 0xffffe570, 0x0, 0x0
 call 322, stor[27], 0x8
@@ -3124,3 +3124,19 @@
 add 0xa, stor[18]
 mov stor[10], var[45][stor[18]]
 jmp inl[:LABEL_193]
+PREPARE_FINISHER_SLOT:
+mov var[34][2], stor[27]
+jmp_cmp ==, stor[27], 0xffffffff, inl[:SKIP_FINISHER_CHECK_ON_SLOT_2]
+call 167, stor[27], stor[10]
+jmp_cmp ==, stor[10], inl[:TARGET_ID], inl[:FINISH]
+SKIP_FINISHER_CHECK_ON_SLOT_2:
+mov var[34][1], stor[27]
+jmp_cmp ==, stor[27], 0xffffffff, inl[:SKIP_FINISHER_CHECK_ON_SLOT_1]
+call 167, stor[27], stor[10]
+jmp_cmp ==, stor[10], inl[:TARGET_ID], inl[:FINISH]
+SKIP_FINISHER_CHECK_ON_SLOT_1:
+mov var[34][0], stor[27]
+FINISH:
+return
+TARGET_ID:
+data 0x1
