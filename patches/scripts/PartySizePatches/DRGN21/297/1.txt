entrypoint :ENTRYPOINT_0

; SUBROUTINE
LABEL_0:
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[24], 0x0 ; flag, value
incr stor[24] ; operand
jmp_cmp <=, stor[24], stor[25], inl[:LABEL_0] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_1:
call Scus94491BpeSegment_8002::scriptGetFreeTextboxIndex, stor[26] ; textboxIndex
jmp_cmp ==, 0xffffffff, stor[26], inl[:LABEL_4] ; operand, left, right, addr
mov var[64][stor[25]], stor[25] ; source, dest
memcpy 0x2, inl[:LABEL_149[:LABEL_149[stor[24]]]], stor[27] ; size, src, dest
jmp_cmp <=, stor[27], 0x24, inl[:LABEL_2] ; operand, left, right, addr
mov 0x24, stor[27] ; source, dest
LABEL_2:
jmp_cmp <=, stor[28], 0x4, inl[:LABEL_3] ; operand, left, right, addr
mov 0x4, stor[28] ; source, dest
LABEL_3:
call SMap::scriptAddSobjTextbox, stor[26], stor[25], 0x121, stor[27], stor[28], inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, submapObjectIndex, packedData, width, height, text
LABEL_4:
mov stor[26], stor[24] ; source, dest
return

; SUBROUTINE
LABEL_5:
mov 0x0, stor[24] ; source, dest
LABEL_6:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[24], stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_7] ; operand, left, right, addr
incr stor[24] ; operand
jmp_cmp <=, stor[24], 0x4, inl[:LABEL_6] ; operand, left, right, addr
jmp inl[:LABEL_8] ; addr
LABEL_7:
yield
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[24], stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_7] ; operand, left, right, addr
LABEL_8:
return

; SUBROUTINE
JMP_13a0_1:
mov var[64][stor[25]], stor[25] ; source, dest
call SMap::FUN_800df9a8, stor[25], stor[27], stor[27], stor[27], stor[28] ; scriptIndex, x0, y0, x1, y1
jmp_cmp >, 0x82, stor[28], inl[:JMP_13a0_3] ; operand, left, right, addr

; SUBROUTINE
JMP_13a0_2:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x5, stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_9] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x6 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x5, 0x1011, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_9:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x400, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
jmp inl[:LABEL_11] ; addr

; SUBROUTINE
JMP_13a0_3:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x6, stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_10] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x5 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x6, 0x1011, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_10:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x400, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
LABEL_11:
return

; SUBROUTINE
JMP_13a0_5:
call Scus94491BpeSegment_8002::scriptGetFreeTextboxIndex, stor[26] ; textboxIndex
jmp_cmp ==, 0xffffffff, stor[26], inl[:LABEL_13] ; operand, left, right, addr
mov var[64][stor[25]], stor[25] ; source, dest
call SMap::FUN_800df9a8, stor[25], stor[27], stor[27], stor[27], stor[28] ; scriptIndex, x0, y0, x1, y1
jmp_cmp >, 0x82, stor[28], inl[:LABEL_12] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptAddTextbox, stor[26], 0x111, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
jmp inl[:LABEL_13] ; addr
LABEL_12:
call Scus94491BpeSegment_8002::scriptAddTextbox, stor[26], 0x111, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_13:
mov stor[26], stor[24] ; source, dest
return

; SUBROUTINE
LABEL_14:
jmp_cmp !=, 0xffffffff, var[73][31], inl[:LABEL_15] ; operand, left, right, addr
mov 0x0, var[73][31] ; source, dest
jmp inl[:LABEL_17] ; addr
LABEL_15:
mov var[3], stor[24] ; source, dest
and 0xf000, stor[24] ; and, operand
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_16] ; operand, left, right, addr
mov 0x0, var[73][31] ; source, dest
jmp inl[:LABEL_17] ; addr
LABEL_16:
incr var[73][31] ; operand
jmp_cmp >=, 0x12c, var[73][31], inl[:LABEL_17] ; operand, left, right, addr
call SMap::scriptSelfGetSobjAnimation, stor[24] ; animIndex
jmp_cmp ==, 0x1f, stor[24], inl[:LABEL_28] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, 0x1f ; animIndex
jmp inl[:LABEL_28] ; addr
LABEL_17:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
mov 0x0, stor[25] ; source, dest
LABEL_18:
jmp_cmp ==, 0xffffffff, inl[:LABEL_158[stor[25]]], inl[:LABEL_19] ; operand, left, right, addr
jmp_cmp ==, stor[24], inl[:LABEL_158[stor[25]]], inl[:LABEL_20] ; operand, left, right, addr
incr stor[25] ; operand
jmp inl[:LABEL_18] ; addr
LABEL_19:
mov 0x0, stor[24] ; source, dest
jmp inl[:LABEL_21] ; addr
LABEL_20:
mov 0xffffffff, stor[24] ; source, dest
LABEL_21:
mov 0x0, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
jmp_cmp ==, 0x0, var[27], inl[:LABEL_22] ; operand, left, right, addr
jmp_cmp ==, 0x0, var[31], inl[:LABEL_22] ; operand, left, right, addr
mov var[3], stor[29] ; source, dest
and 0xf000, stor[29] ; and, operand
jmp_cmp ==, 0x0, stor[29], inl[:LABEL_25] ; operand, left, right, addr
mov 0x4, stor[25] ; source, dest
mov 0x1, stor[27] ; source, dest
mov var[28], stor[28] ; source, dest
jmp_cmp ==, 0xffffffff, stor[24], inl[:LABEL_25] ; operand, left, right, addr
jmp_cmp <, var[31], 0x7f, inl[:LABEL_25] ; operand, left, right, addr
mov 0x2, stor[27] ; source, dest
mov 0xc, stor[25] ; source, dest
jmp inl[:LABEL_25] ; addr
LABEL_22:
mov 0x0, stor[28] ; source, dest
mov var[3], stor[29] ; source, dest
and 0xf000, stor[29] ; and, operand
jmp_cmp ==, 0x0, stor[29], inl[:LABEL_25] ; operand, left, right, addr
LABEL_23:
mov inl[:LABEL_29[stor[28]]], stor[30] ; source, dest
jmp_cmp ==, stor[30], 0xffffffff, inl[:LABEL_25] ; operand, left, right, addr
jmp_cmp ==, stor[29], stor[30], inl[:LABEL_24] ; operand, left, right, addr
incr stor[28] ; operand
jmp inl[:LABEL_23] ; addr
LABEL_24:
mul 0x200, stor[28] ; amount, operand
mov 0x4, stor[25] ; source, dest
mov 0x1, stor[27] ; source, dest
jmp_cmp ==, 0xffffffff, stor[24], inl[:LABEL_25] ; operand, left, right, addr
jmp_cmp !&, 0x40, var[3], inl[:LABEL_25] ; operand, left, right, addr
mov 0x2, stor[27] ; source, dest
mov 0xc, stor[25] ; source, dest
LABEL_25:
jmp_cmp ==, 0x0, stor[27], inl[:LABEL_27] ; operand, left, right, addr
mov stor[28], stor[29] ; source, dest
sin_12 stor[28], stor[28] ; angle, dest
cos_12 stor[29], stor[29] ; angle, dest
mov stor[25], stor[26] ; source, dest
shl 0xc, stor[25] ; shift, val
shl 0xc, stor[26] ; shift, val
mul_12 stor[28], stor[25] ; amount, operand
mul_12 stor[29], stor[26] ; amount, operand
add 0x800, stor[25] ; amount, operand
add 0x800, stor[26] ; amount, operand
shr 0xc, stor[25] ; shift, val
shr 0xc, stor[26] ; shift, val
call SMap::scriptCheckPlayerCollision, stor[25], 0x0, stor[26], stor[28] ; deltaX, deltaY, deltaZ, collidee
call SMap::scriptGetPlayerMovement, stor[29], stor[30], stor[31] ; x, y, z
call SMap::scriptSelfFacePoint, stor[29], stor[30], stor[31] ; x, y, z
jmp_cmp ==, stor[28], 0xffffffff, inl[:LABEL_26] ; operand, left, right, addr
mov 0x0, stor[27] ; source, dest
jmp inl[:LABEL_27] ; addr
LABEL_26:
call SMap::scriptMovePlayer, stor[25], 0x0, stor[26] ; x, y, z
LABEL_27:
call SMap::scriptSelfGetSobjAnimation, stor[28] ; animIndex
jmp_cmp ==, stor[28], stor[27], inl[:LABEL_28] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, stor[27] ; animIndex
LABEL_28:
return
LABEL_29:
data 0x1000
data 0x3000
data 0x2000
data 0x6000
data 0x4000
data 0xc000
data 0x8000
data 0x9000
data 0xffffffff
data 0xc90138
data 0x5
data 0xc90138
data 0x6
data 0x49
data 0x208
data 0x7001940
data 0x2000019
data 0x7d0538
data 0x2000019
data 0x200001b
data 0x200001b
data 0x200001b
data 0x200001c
data 0x40341
data 0x82
data 0x200001c
data 0x9000027

; SUBROUTINE
JMP_13a0_6:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x5, stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_30] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x6 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x5, 0x1011, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_30:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x100, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
jmp inl[:LABEL_32] ; addr

; SUBROUTINE
JMP_13a0_7:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x6, stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_31] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x5 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x6, 0x1011, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_31:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x100, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_148[:LABEL_148[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
LABEL_32:
return
data 0x10b0438
data 0x2000018
data 0x2000019
data 0x200001a
data 0x200001b
data 0x3040438
data 0x1
data 0x2000019
data 0x200001a
data 0x200001b
data 0x10c
data 0x30d1700
data 0x49

; SUBROUTINE
LABEL_33:
mov 0x1, var[124] ; source, dest
call SMap::scriptEnableSobjFlatLight, var[64][0], 0x80, 0xdd, 0xdd ; sobjIndex, r, g, b
jmp_cmp !=, 0x0, stor[stor[stor[0], 23], 13], inl[:LABEL_34] ; operand, left, right, addr
mov 0x1, stor[stor[stor[0], 23], 13] ; source, dest
call Scus94491BpeSegment::scriptStopSound, 0x8, 0x18, 0x3 ; soundFileIndex, soundIndex, mode
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x18, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
LABEL_34:
return

; SUBROUTINE
LABEL_35:
mov 0x0, var[124] ; source, dest
call SMap::scriptDisableSobjFlatLight, var[64][0] ; sobjIndex
mov 0x0, stor[stor[stor[0], 23], 13] ; source, dest
return

; SUBROUTINE
LABEL_38:
call 70, 0x0, 0x23;
call 70, 0x1, 0x0;
call 70, 0x2, 0x0;
call 70, 0x3, 0x0;
call 70, 0x4, 0x0;
call 70, 0x5, 0x0;
call 70, 0x6, 0x0;
call 70, 0x7, 0x0;
call 70, 0x8, 0x0;
call 72, 0x0;
return

; SUBROUTINE
LABEL_39:
call 70, 0x0, 0x23;
call 70, 0x1, 0x3;
call 70, 0x2, 0x3;
call 70, 0x3, 0x3;
call 70, 0x4, 0x0;
call 70, 0x5, 0x0;
call 70, 0x6, 0x0;
call 70, 0x7, 0x0;
call 70, 0x8, 0x0;
call 72, 0x0;
return

; SUBROUTINE
LABEL_54:
jmp_cmp <=, 0x100, stor[24], inl[:LABEL_56] ; operand, left, right, addr
LABEL_55:
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[24], stor[26] ; flag, value
jmp_cmp ==, stor[25], stor[26], inl[:LABEL_57] ; operand, left, right, addr
yield
jmp inl[:LABEL_55] ; addr
LABEL_56:
call Scus94491BpeSegment::scriptReadIndicatorsDisabled, stor[24] ; disabled
jmp_cmp ==, stor[25], stor[24], inl[:LABEL_57] ; operand, left, right, addr
yield
jmp inl[:LABEL_56] ; addr
LABEL_57:
return

; SUBROUTINE
LABEL_58:
yield
call SMap::scriptSelfIsAnimationFinished, stor[25] ; value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_58] ; operand, left, right, addr
jmp_cmp !=, stor[24], 0xffffffff, inl[:LABEL_59] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x1 ; disabled
return
LABEL_59:
call SMap::scriptSelfLoadSobjAnimation, stor[24] ; animIndex
return

; SUBROUTINE
LABEL_60:
mov stor[27], stor[31] ; source, dest
jmp_cmp <=, 0x4, stor[26], inl[:LABEL_61] ; operand, left, right, addr
gosub_table stor[26], inl[:LABEL_64] ; index, table
return
LABEL_61:
jmp_cmp ==, 0x4, stor[26], inl[:LABEL_63] ; operand, left, right, addr
gosub_table stor[26], inl[:LABEL_64] ; index, table
call Scus94491BpeSegment_8002::scriptAddSelectionTextbox, stor[24], 0x1, stor[31] ; index, minSelectionIndex, maxSelectionIndex
LABEL_62:
yield
call Scus94491BpeSegment_8002::scriptGetTextboxSelectionIndex, stor[24], stor[25] ; index, selectionIndex
jmp_cmp ==, 0xffffffff, stor[25], inl[:LABEL_62] ; operand, left, right, addr
mov stor[25], stor[24] ; source, dest
return
LABEL_63:
gosub inl[:LABEL_1] ; addr
decr stor[31] ; operand
call Scus94491BpeSegment_8002::scriptAddSelectionTextbox, stor[24], 0x0, stor[31] ; index, minSelectionIndex, maxSelectionIndex
jmp inl[:LABEL_62] ; addr

; SUBROUTINE TABLE
LABEL_64:
rel :LABEL_1
rel :JMP_13a0_1
rel :JMP_13a0_2
rel :JMP_13a0_3
rel :LABEL_1
rel :JMP_13a0_5
rel :JMP_13a0_6
rel :JMP_13a0_7

; SUBROUTINE
LABEL_65:
jmp_cmp >, 0x0, var[67], inl[:LABEL_68] ; operand, left, right, addr
mov 0x0, stor[24] ; source, dest
call SMap::scriptCheckSelfCollision, stor[25] ; collisionPrimitiveIndex
LABEL_66:
jmp_cmp ==, 0xffffffff, inl[:LABEL_157[stor[24]]], inl[:LABEL_68] ; operand, left, right, addr
jmp_cmp ==, stor[25], inl[:LABEL_157[stor[24]]], inl[:LABEL_67] ; operand, left, right, addr
add 0x2, stor[24] ; amount, operand
jmp inl[:LABEL_66] ; addr
LABEL_67:
incr stor[24] ; operand
mov inl[:LABEL_157[stor[24]]], stor[24] ; source, dest
call SMap::scriptGetCollisionPrimitivePos, stor[24], stor[24], stor[25], stor[26] ; collisionPrimitiveIndex, x, y, z
call SMap::scriptSelfFacePoint, stor[24], stor[25], stor[26] ; x, y, z
LABEL_68:
return

; SUBROUTINE
LABEL_69:
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
jmp_cmp >, 0x0, stor[24], inl[:LABEL_70] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, stor[24] ; animIndex
jmp inl[:LABEL_71] ; addr
LABEL_70:
neg stor[24] ; operand
call SMap::loadUninterpolatedSobjAnimation, stor[0], stor[24] ; sobjIndex, animIndex
LABEL_71:
yield
call SMap::scriptSelfIsAnimationFinished, stor[24] ; value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_71] ; operand, left, right, addr
jmp_cmp ==, stor[25], 0xffffffff, inl[:LABEL_72] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, stor[25] ; animIndex
return
LABEL_72:
call SMap::scriptSelfToggleAnimationDisabled, 0x1 ; disabled
return

; SUBROUTINE
LABEL_73:
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[30], stor[31] ; scriptIndex, x, y, z
sub stor[24], stor[29] ; amount, operand
sub stor[25], stor[30] ; amount, operand
sub stor[26], stor[31] ; amount, operand
mul stor[29], stor[29] ; amount, operand
mul stor[30], stor[30] ; amount, operand
mul stor[31], stor[31] ; amount, operand
add stor[29], stor[30] ; amount, operand
add stor[30], stor[31] ; amount, operand
sqrt stor[31], stor[31] ; val, dest
incr stor[27] ; operand
jmp_cmp >, stor[27], stor[31], inl[:LABEL_76] ; operand, left, right, addr
decr stor[27] ; operand
div stor[27], stor[31] ; amount, operand
call SMap::scriptSelfMoveToPosition, stor[24], stor[25], stor[26], stor[31] ; x, y, z, movementTicks
jmp_cmp ==, 0xffffffff, stor[28], inl[:LABEL_74] ; operand, left, right, addr
jmp_cmp ==, 0xfffffffe, stor[28], inl[:LABEL_75] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, stor[28] ; animIndex
call SMap::scriptSelfFacePoint, stor[24], stor[25], stor[26] ; x, y, z
wait stor[31] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
jmp inl[:LABEL_77] ; addr
LABEL_74:
mov stor[31], stor[24] ; source, dest
jmp inl[:LABEL_77] ; addr
LABEL_75:
call SMap::scriptSelfFacePoint, stor[24], stor[25], stor[26] ; x, y, z
wait stor[31] ; frames
jmp inl[:LABEL_77] ; addr
LABEL_76:
call SMap::scriptReadModelPosition, stor[0], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
call SMap::scriptSelfMoveToPosition, stor[24], stor[25], stor[26], 0x1 ; x, y, z, movementTicks
mov 0x0, stor[24] ; source, dest
jmp_cmp >, 0x0, stor[28], inl[:LABEL_77] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
jmp inl[:LABEL_77] ; addr
LABEL_77:
return

; SUBROUTINE
LABEL_78:
call SMap::scriptReadModelPosition, stor[0], stor[28], stor[30], stor[29] ; scriptIndex, x, y, z
sub stor[28], stor[24] ; amount, operand
sub stor[29], stor[25] ; amount, operand
atan2_12 stor[24], stor[25], stor[24] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[25], stor[28] ; scriptIndex, x, y, z
and 0xfff, stor[25] ; and, operand
sub stor[25], stor[24] ; amount, operand
add 0x800, stor[24] ; amount, operand
jmp_cmp >=, stor[24], 0xfffff800, inl[:LABEL_79] ; operand, left, right, addr
add 0x1000, stor[24] ; amount, operand
jmp inl[:LABEL_80] ; addr
LABEL_79:
jmp_cmp <, stor[24], 0x800, inl[:LABEL_80] ; operand, left, right, addr
sub 0x1000, stor[24] ; amount, operand
LABEL_80:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[24], 0x0, stor[26] ; scriptIndex, x, y, z, frames
jmp_cmp ==, 0xffffffff, stor[27], inl[:LABEL_81] ; operand, left, right, addr
jmp_cmp ==, 0xfffffffe, stor[27], inl[:LABEL_82] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, stor[27] ; animIndex
wait stor[26] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
jmp inl[:LABEL_83] ; addr
LABEL_81:
jmp inl[:LABEL_83] ; addr
LABEL_82:
wait stor[26] ; frames
jmp inl[:LABEL_83] ; addr
LABEL_83:
return

; SUBROUTINE
LABEL_84:
mov var[64][stor[24]], stor[24] ; source, dest
call SMap::scriptReadModelPosition, stor[24], stor[27], stor[24], stor[28] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[24], stor[30] ; scriptIndex, x, y, z
sub stor[29], stor[27] ; amount, operand
sub stor[30], stor[28] ; amount, operand
atan2_12 stor[27], stor[28], stor[24] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[27], stor[28] ; scriptIndex, x, y, z
and 0xfff, stor[27] ; and, operand
sub stor[27], stor[24] ; amount, operand
add 0x800, stor[24] ; amount, operand
jmp_cmp >=, stor[24], 0xfffff800, inl[:LABEL_85] ; operand, left, right, addr
add 0x1000, stor[24] ; amount, operand
jmp inl[:LABEL_86] ; addr
LABEL_85:
jmp_cmp <, stor[24], 0x800, inl[:LABEL_86] ; operand, left, right, addr
sub 0x1000, stor[24] ; amount, operand
LABEL_86:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[24], 0x0, stor[25] ; scriptIndex, x, y, z, frames
jmp_cmp !=, stor[26], 0xffffffff, inl[:LABEL_87] ; operand, left, right, addr
return
LABEL_87:
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, stor[26] ; animIndex
wait stor[25] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
return

; SUBROUTINE
LABEL_88:
mov var[64][stor[24]], stor[24] ; source, dest
call SMap::scriptReadModelPosition, stor[0], stor[26], stor[27], stor[28] ; scriptIndex, x, y, z
LABEL_89:
call SMap::scriptReadModelPosition, stor[24], stor[26], stor[29], stor[28] ; scriptIndex, x, y, z
call SMap::scriptSelfFacePoint, stor[26], stor[27], stor[28] ; x, y, z
yield
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[25], stor[26] ; flag, value
jmp_cmp ==, 0x0, stor[26], inl[:LABEL_89] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_90:
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[27], stor[28] ; scriptIndex, x, y, z
and 0xfff, stor[27] ; and, operand
and 0xfff, stor[24] ; and, operand
sub stor[27], stor[24] ; amount, operand
jmp_cmp >=, stor[24], 0xfffff800, inl[:LABEL_91] ; operand, left, right, addr
add 0x1000, stor[24] ; amount, operand
jmp inl[:LABEL_92] ; addr
LABEL_91:
jmp_cmp <, stor[24], 0x800, inl[:LABEL_92] ; operand, left, right, addr
sub 0x1000, stor[24] ; amount, operand
LABEL_92:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[24], 0x0, stor[25] ; scriptIndex, x, y, z, frames
jmp_cmp ==, 0xffffffff, stor[26], inl[:LABEL_93] ; operand, left, right, addr
jmp_cmp ==, 0xfffffffe, stor[26], inl[:LABEL_94] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, stor[26] ; animIndex
wait stor[25] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
jmp inl[:LABEL_95] ; addr
LABEL_93:
jmp inl[:LABEL_95] ; addr
LABEL_94:
wait stor[25] ; frames
jmp inl[:LABEL_95] ; addr
LABEL_95:
return

; SUBROUTINE
LABEL_96:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_97] ; operand, left, right, addr
call SMap::scriptGetSobjCollidedWith2, stor[0], stor[24] ; sobjIndex, collided
jmp_cmp ==, 0xffffffff, stor[24], inl[:LABEL_97] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0x0, stor[25] ; source, dest
mov 0xff, stor[26] ; source, dest
mov 0x1, stor[27] ; source, dest
gosub inl[:LABEL_98] ; addr
LABEL_97:
return

; SUBROUTINE
LABEL_98:
mov stor[stor[stor[0], 23], 8], stor[31] ; source, dest
mul stor[stor[stor[0], 23], 31], stor[31] ; amount, operand
add stor[24], stor[31] ; amount, operand
shl 0x1, stor[31] ; shift, val
jmp_cmp ==, 0xffffffff, inl[:LABEL_150[stor[31]]], inl[:LABEL_106] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
mov var[64][stor[24]], stor[30] ; source, dest
call SMap::scriptReadModelPosition, stor[30], stor[28], stor[31], stor[31] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[31], stor[31] ; scriptIndex, x, y, z
sub stor[29], stor[28] ; amount, operand
call SMap::scriptReadModelPosition, stor[30], stor[31], stor[31], stor[29] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[31], stor[31], stor[30] ; scriptIndex, x, y, z
sub stor[30], stor[29] ; amount, operand
atan2_12 stor[28], stor[29], stor[28] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[31], stor[29], stor[31] ; scriptIndex, x, y, z
and 0xfff, stor[29] ; and, operand
sub stor[29], stor[28] ; amount, operand
add 0x800, stor[28] ; amount, operand
jmp_cmp >=, stor[28], 0xfffff800, inl[:LABEL_99] ; operand, left, right, addr
add 0x1000, stor[28] ; amount, operand
jmp inl[:LABEL_100] ; addr
LABEL_99:
jmp_cmp <, stor[28], 0x800, inl[:LABEL_100] ; operand, left, right, addr
sub 0x1000, stor[28] ; amount, operand
LABEL_100:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[28], 0x0, 0x4 ; scriptIndex, x, y, z, frames
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[26], 0x0 ; flag, value
mov var[64][stor[24]], stor[31] ; source, dest
fork_reenter stor[31], stor[27], stor[25] ; index, entrypoint, stor[32] value
mov stor[stor[stor[0], 23], 8], stor[31] ; source, dest
mul stor[stor[stor[0], 23], 31], stor[31] ; amount, operand
add stor[24], stor[31] ; amount, operand
shl 0x1, stor[31] ; shift, val
mov inl[:LABEL_150[stor[31]]], stor[30] ; source, dest
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[30], stor[29] ; flag, value
incr stor[31] ; operand
add inl[:LABEL_150[stor[31]]], stor[29] ; amount, operand
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[30], 0x1 ; flag, value
memcpy 0x2, inl[:LABEL_149[:LABEL_149[stor[29]]]], stor[27] ; size, src, dest
jmp_cmp <=, stor[27], 0x24, inl[:LABEL_101] ; operand, left, right, addr
mov 0x24, stor[27] ; source, dest
LABEL_101:
jmp_cmp <=, stor[28], 0x4, inl[:LABEL_102] ; operand, left, right, addr
mov 0x4, stor[28] ; source, dest
LABEL_102:
mov var[64][stor[24]], stor[24] ; source, dest
call SMap::scriptAddSobjTextbox, stor[25], stor[24], 0x121, stor[27], stor[28], inl[:LABEL_148[:LABEL_148[stor[29]]]] ; index, submapObjectIndex, packedData, width, height, text
LABEL_103:
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[26], stor[31] ; flag, value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_104] ; operand, left, right, addr
yield
jmp inl[:LABEL_103] ; addr
LABEL_104:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[25], stor[31] ; index, initialized
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_105] ; operand, left, right, addr
yield
jmp inl[:LABEL_104] ; addr
LABEL_105:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
LABEL_106:
return

; SUBROUTINE
LABEL_107:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_111] ; operand, left, right, addr
mov 0x0, stor[24] ; source, dest
call SMap::scriptReadModelPosition, stor[0], stor[25], stor[26], stor[27] ; scriptIndex, x, y, z
call SMap::scriptReadModelRotate, stor[0], stor[31], stor[28], stor[31] ; scriptIndex, x, y, z
and 0xfff, stor[28] ; and, operand
add 0x800, stor[28] ; amount, operand
sin_12 stor[28], stor[29] ; angle, dest
cos_12 stor[28], stor[30] ; angle, dest
mov 0x28, stor[28] ; source, dest
mul_12 stor[28], stor[29] ; amount, operand
mul_12 stor[28], stor[30] ; amount, operand
add stor[29], stor[25] ; amount, operand
add stor[30], stor[27] ; amount, operand
LABEL_108:
mov stor[24], stor[28] ; source, dest
add 0x5, stor[28] ; amount, operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_155[stor[28]]], inl[:LABEL_111] ; operand, left, right, addr
decr stor[28] ; operand
jmp_cmp >, 0x1c3, inl[:LABEL_155[stor[28]]], inl[:LABEL_109] ; operand, left, right, addr
jmp_cmp <, 0x1f4, inl[:LABEL_155[stor[28]]], inl[:LABEL_109] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag2, inl[:LABEL_155[stor[28]]], stor[31] ; flag, value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_110] ; operand, left, right, addr
LABEL_109:
sub 0x3, stor[28] ; amount, operand
mov inl[:LABEL_155[stor[28]]], stor[31] ; source, dest
sub stor[26], stor[31] ; amount, operand
jmp_cmp <, 0x14, stor[31], inl[:LABEL_110] ; operand, left, right, addr
neg stor[31] ; operand
jmp_cmp <, 0x14, stor[31], inl[:LABEL_110] ; operand, left, right, addr
decr stor[28] ; operand
mov inl[:LABEL_155[stor[28]]], stor[30] ; source, dest
add 0x2, stor[28] ; amount, operand
mov inl[:LABEL_155[stor[28]]], stor[31] ; source, dest
sub stor[25], stor[30] ; amount, operand
sub stor[27], stor[31] ; amount, operand
mul stor[30], stor[30] ; amount, operand
mul stor[31], stor[31] ; amount, operand
add stor[30], stor[31] ; amount, operand
sqrt stor[31], stor[31] ; val, dest
incr stor[28] ; operand
jmp_cmp >=, inl[:LABEL_155[stor[28]]], stor[31], inl[:LABEL_112] ; operand, left, right, addr
LABEL_110:
add 0x6, stor[24] ; amount, operand
jmp inl[:LABEL_108] ; addr
LABEL_111:
return
LABEL_112:
gosub inl[:LABEL_113] ; addr
jmp inl[:LABEL_111] ; addr

; SUBROUTINE
LABEL_113:
mov stor[24], stor[28] ; source, dest
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
add 0x4, stor[28] ; amount, operand
jmp_cmp >, 0x1c3, inl[:LABEL_155[stor[28]]], inl[:LABEL_114] ; operand, left, right, addr
jmp_cmp <, 0x1f4, inl[:LABEL_155[stor[28]]], inl[:LABEL_114] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag2, inl[:LABEL_155[stor[28]]], stor[31] ; flag, value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_114] ; operand, left, right, addr
jmp inl[:LABEL_115] ; addr
LABEL_114:
incr stor[28] ; operand
mov inl[:LABEL_155[stor[28]]], stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_1] ; addr
gosub inl[:LABEL_5] ; addr
jmp inl[:LABEL_116] ; addr
LABEL_115:
call Scus94491BpeSegment::scriptSetGlobalFlag2, inl[:LABEL_155[stor[28]]], 0x1 ; flag, value
incr var[19] ; operand
incr stor[28] ; operand
mov inl[:LABEL_155[stor[28]]], stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_1] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x1b, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
memcpy 0x2, inl[:LABEL_160], stor[27] ; size, src, dest
call SMap::scriptAddSobjTextbox, 0x0, var[64][0], 0x121, stor[27], stor[28], inl[:LABEL_159] ; index, submapObjectIndex, packedData, width, height, text
gosub inl[:LABEL_5] ; addr
jmp inl[:LABEL_116] ; addr
LABEL_116:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
return

; SUBROUTINE
LABEL_117:
call SMap::scriptReadModelPosition, stor[0], stor[24], stor[26], stor[25] ; scriptIndex, x, y, z
sub inl[:LABEL_152], stor[26] ; amount, operand
jmp_cmp <, 0x14, stor[26], inl[:LABEL_118] ; operand, left, right, addr
neg stor[26] ; operand
jmp_cmp <, 0x14, stor[26], inl[:LABEL_118] ; operand, left, right, addr
sub inl[:LABEL_151], stor[24] ; amount, operand
sub inl[:LABEL_153], stor[25] ; amount, operand
mul stor[24], stor[24] ; amount, operand
mul stor[25], stor[25] ; amount, operand
add stor[25], stor[24] ; amount, operand
jmp_cmp <, 0x640, stor[24], inl[:LABEL_118] ; operand, left, right, addr
gosub inl[:LABEL_33] ; addr
jmp inl[:LABEL_119] ; addr
LABEL_118:
gosub inl[:LABEL_35] ; addr
jmp inl[:LABEL_119] ; addr
LABEL_119:
return

; SUBROUTINE
LABEL_120:
call SMap::scriptAddSavePoint, 0x1, inl[:LABEL_151], inl[:LABEL_152], inl[:LABEL_153] ; hasSavePoint, x, y, z
return

; SUBROUTINE
LABEL_121:
gosub inl[:LABEL_122] ; addr
return

; SUBROUTINE
LABEL_122:
jmp_cmp ==, 0xffffffff, inl[:LABEL_154], inl[:LABEL_128] ; operand, left, right, addr
mov 0x0, stor[24] ; source, dest
call SMap::scriptCheckSelfCollision, stor[25] ; collisionPrimitiveIndex
LABEL_123:
mov inl[:LABEL_154[stor[24]]], stor[26] ; source, dest
incr stor[24] ; operand
mov inl[:LABEL_154[stor[24]]], stor[27] ; source, dest
incr stor[24] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_154[stor[24]]], inl[:LABEL_124] ; operand, left, right, addr
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, stor[26], stor[27], stor[31] ; mode, overlayIndex, z, out
jmp inl[:LABEL_127] ; addr
LABEL_124:
jmp_cmp ==, 0xffffffff, inl[:LABEL_154[stor[24]]], inl[:LABEL_127] ; operand, left, right, addr
jmp_cmp ==, stor[25], inl[:LABEL_154[stor[24]]], inl[:LABEL_125] ; operand, left, right, addr
incr stor[24] ; operand
jmp inl[:LABEL_124] ; addr
LABEL_125:
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, stor[26], stor[27], stor[31] ; mode, overlayIndex, z, out
LABEL_126:
incr stor[24] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_154[stor[24]]], inl[:LABEL_126] ; operand, left, right, addr
LABEL_127:
incr stor[24] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_154[stor[24]]], inl[:LABEL_123] ; operand, left, right, addr
LABEL_128:
return
ENTRYPOINT_0:
mov var[65], stor[23] ; source, dest
incr stor[stor[stor[0], 23], 8] ; operand
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call SMap::scriptSelfSetSobjHidden, 0x0 ; value
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call SMap::scriptSelfSetSobjFlag, 0x15, 0x1 ; bitIndex, value
call SMap::scriptSelfSetSobjFlag, 0x18, 0x1 ; bitIndex, value
call SMap::scriptSetSobjCollision2, stor[0], 0x14, 0x28, 0xa ; sobjIndex, horizontalSize, verticalSize, reach
call SMap::scriptSetSobjPlayerCollisionMetrics, stor[0], 0xa, 0x28, 0xa ; sobjIndex, horizontalSize, verticalSize, reach
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::scriptHideAlertIndicator, stor[0] ; sobjIndex
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call Scus94491BpeSegment::scriptStopSoundsAndSequences ; index
mov 0x0, var[72] ; source, dest
call SMap::scriptGetSetEncountersDisabled, 0x1, 0x1, stor[31] ; set, apply, value
mov 0x5a, var[47] ; source, dest
call SMap::FUN_800f1b64, inl[:LABEL_156] ; data
gosub inl[:LABEL_120] ; addr
gosub inl[:LABEL_121] ; addr
gosub inl[:LABEL_65] ; addr
yield
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x1, 0x1, 0x0, stor[24] ; mode, overlayIndex, z, out
gosub inl[:LABEL_137] ; addr
jmp_table stor[stor[stor[0], 23], 31], inl[:LABEL_129] ; index, table

; SUBROUTINE TABLE
LABEL_129:
rel :JMP_2484_0
rel :JMP_2484_1
rel :JMP_2484_1
rel :JMP_2484_1
rel :JMP_2484_1
rel :JMP_2484_1
rel :JMP_2484_1
rel :JMP_2484_1
rel :JMP_2484_1
JMP_2484_1:
gosub inl[:LABEL_139] ; addr
gosub inl[:LABEL_122] ; addr
gosub inl[:LABEL_117] ; addr
gosub inl[:LABEL_107] ; addr
gosub inl[:LABEL_96] ; addr
gosub inl[:LABEL_14] ; addr
yield
jmp inl[:JMP_2484_1] ; addr
JMP_2484_0:
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0xc6, stor[24] ; flag, value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_132] ; operand, left, right, addr
jmp_cmp >, 0x0, var[67], inl[:LABEL_136] ; operand, left, right, addr
LABEL_130:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
call SMap::scriptGetSobjCollidedWith2, stor[0], stor[25] ; sobjIndex, collided
jmp_cmp ==, 0x2, stor[24], inl[:LABEL_135] ; operand, left, right, addr
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_134] ; operand, left, right, addr
LABEL_131:
gosub inl[:LABEL_139] ; addr
gosub inl[:LABEL_122] ; addr
gosub inl[:LABEL_117] ; addr
gosub inl[:LABEL_107] ; addr
gosub inl[:LABEL_96] ; addr
gosub inl[:LABEL_14] ; addr
yield
jmp inl[:LABEL_130] ; addr
LABEL_132:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
jmp_cmp ==, 0x4, stor[24], inl[:LABEL_133] ; operand, left, right, addr
gosub inl[:LABEL_139] ; addr
gosub inl[:LABEL_122] ; addr
gosub inl[:LABEL_117] ; addr
gosub inl[:LABEL_107] ; addr
gosub inl[:LABEL_96] ; addr
gosub inl[:LABEL_14] ; addr
yield
jmp inl[:LABEL_132] ; addr
LABEL_133:
gosub inl[:LABEL_141] ; addr
jmp inl[:LABEL_130] ; addr
LABEL_134:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_131] ; operand, left, right, addr
gosub inl[:LABEL_143] ; addr
jmp inl[:LABEL_130] ; addr
LABEL_135:
gosub inl[:LABEL_145] ; addr
jmp inl[:LABEL_130] ; addr
LABEL_136:
gosub inl[:LABEL_147] ; addr
jmp inl[:LABEL_130] ; addr

; SUBROUTINE
LABEL_137:
jmp_cmp !=, 0x1, var[67], inl[:LABEL_138] ; operand, left, right, addr
jmp_cmp !=, 0x273, var[68], inl[:LABEL_138] ; operand, left, right, addr
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, 0xb, 0x0, stor[24] ; mode, overlayIndex, z, out
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSetModelPosition, stor[0], 0xffffffb1, 0xffffffb2, 0x20c ; scriptIndex, x, y, z
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x0, 0x0 ; scriptIndex, x, y, z
wait_cmp >=, 0xfa, var[10] ; operator, left, right
mov 0xffffff72, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0x12b, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_73] ; addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
LABEL_138:
return

; SUBROUTINE
LABEL_139:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
jmp_cmp !=, 0x1a, stor[24], inl[:LABEL_140] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
mov 0xffffffb1, stor[24] ; source, dest
mov 0xffffffb2, stor[25] ; source, dest
mov 0x20c, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_73] ; addr
call SMap::scriptMapTransition, 0x273, 0xb ; submapCut, submapScene
rewind
LABEL_140:
return

; SUBROUTINE
LABEL_141:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xc6, 0x1 ; flag, value
mov var[64][1], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x0 ; index, entrypoint, stor[32] value
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x0, 0x1 ; flag, value
mov 0x64, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0x8, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0xa ; animIndex
mov 0x7, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x76c, stor[24] ; source, dest
mov 0x5, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_90] ; addr
mov 0x0, stor[24] ; source, dest
gosub inl[:LABEL_58] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x1, 0x1 ; flag, value
mov 0x65, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0x8, stor[24] ; source, dest
wait stor[24] ; frames
mov 0xfffffeec, stor[24] ; source, dest
mov 0x9c, stor[25] ; source, dest
mov 0x5, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_78] ; addr
mov 0xfffffeec, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0x9c, stor[26] ; source, dest
mov 0x3, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_73] ; addr
mov 0x76c, stor[24] ; source, dest
mov 0x9, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_90] ; addr
mov 0xc, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x2, 0x1 ; flag, value
mov 0x66, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0x14, stor[24] ; source, dest
wait stor[24] ; frames
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x3, 0x1 ; flag, value
mov 0x67, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0x14, stor[24] ; source, dest
wait stor[24] ; frames
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x4, 0x1 ; flag, value
mov 0x68, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0x14, stor[24] ; source, dest
wait stor[24] ; frames
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xa, 0x1 ; flag, value
mov 0x23, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x1, stor[24] ; source, dest
mov 0x7, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_84] ; addr
mov 0xc, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_54] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x6 ; animIndex
mov 0x14, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x1 ; disabled
mov 0xc, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x69, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x5, stor[26] ; source, dest
mov 0x2, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov stor[24], stor[stor[stor[0], 23], 30] ; source, dest
jmp_cmp !=, 0x0, stor[stor[stor[0], 23], 30], inl[:LABEL_142] ; operand, left, right, addr
mov 0xa, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x6a, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x14, 0x1 ; flag, value
mov 0x50, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
mov 0xffffffff, stor[24] ; source, dest
gosub inl[:LABEL_58] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x5, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_84] ; addr
mov 0x15, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_54] ; addr
mov 0xfffffffa, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x63, stor[25] ; source, dest
gosub inl[:LABEL_0] ; addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
return
LABEL_142:
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
mov 0xffffffff, stor[24] ; source, dest
gosub inl[:LABEL_58] ; addr
mov 0xfffffffa, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0x10, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x6b, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0xb, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x14, 0x1 ; flag, value
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0xa ; animIndex
mov 0xfffffed0, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0xb4, stor[26] ; source, dest
mov 0x2, stor[27] ; source, dest
mov 0xffffffff, stor[28] ; source, dest
gosub inl[:LABEL_73] ; addr
mov 0x12, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x6c, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0xf, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x15, 0x1 ; flag, value
mov 0x1, stor[24] ; source, dest
mov 0x17, stor[25] ; source, dest
gosub inl[:LABEL_88] ; addr
mov 0xe, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
call SMap::scriptSelfLoadSobjModelAndAnimation, 0x2 ; objectIndex
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x3, 0x0, 0x0, 0xc, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
mov 0x0, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0x0, stor[24] ; source, dest
gosub inl[:LABEL_38] ; addr
call SMap::scriptMapTransition, 0xffffffff, 0x1c4 ; submapCut, submapScene
rewind

; SUBROUTINE
LABEL_143:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
mov var[64][1], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x1 ; index, entrypoint, stor[32] value
mov 0x1, stor[24] ; source, dest
mov 0x5, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_84] ; addr
mov 0x6e, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0xb, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
gosub inl[:LABEL_5] ; addr
mov 0x6f, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x5, stor[26] ; source, dest
mov 0x2, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov stor[24], stor[stor[stor[0], 23], 30] ; source, dest
jmp_cmp !=, 0x0, stor[stor[stor[0], 23], 30], inl[:LABEL_144] ; operand, left, right, addr
mov 0x7, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0xc, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x71, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0xb, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x0, 0x1 ; flag, value
mov 0x1, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_54] ; addr
mov 0xfffffffa, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x63, stor[25] ; source, dest
gosub inl[:LABEL_0] ; addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
return
LABEL_144:
mov 0x70, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0xf, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x0, 0x1 ; flag, value
mov 0x1, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_88] ; addr
mov 0xe, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
call SMap::scriptSelfLoadSobjModelAndAnimation, 0x2 ; objectIndex
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x3, 0x0, 0x0, 0xc, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
mov 0x0, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0x0, stor[24] ; source, dest
gosub inl[:LABEL_38] ; addr
call SMap::scriptMapTransition, 0xffffffff, 0x1c4 ; submapCut, submapScene
rewind

; SUBROUTINE
LABEL_145:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
mov var[64][1], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x2 ; index, entrypoint, stor[32] value
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0x8, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0xa ; animIndex
mov 0x7, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x1, stor[24] ; source, dest
mov 0x7, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_84] ; addr
mov 0x0, stor[24] ; source, dest
gosub inl[:LABEL_58] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_54] ; addr
mov 0x78, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x5, stor[26] ; source, dest
mov 0x2, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov stor[24], stor[stor[stor[0], 23], 30] ; source, dest
jmp_cmp !=, 0x0, stor[stor[stor[0], 23], 30], inl[:LABEL_146] ; operand, left, right, addr
mov 0x7, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0xc, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x7a, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0xb, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x1, 0x1 ; flag, value
mov 0x2, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_54] ; addr
mov 0xfffffffa, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0xfffffe5c, stor[24] ; source, dest
mov 0x108, stor[25] ; source, dest
mov 0x5, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_78] ; addr
mov 0xfffffe5c, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0x108, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_73] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x63, stor[25] ; source, dest
gosub inl[:LABEL_0] ; addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
return
LABEL_146:
mov 0xfffffffa, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0xc, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x79, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_60] ; addr
mov 0xb, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x1, 0x1 ; flag, value
mov 0x1e, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0xa ; animIndex
mov 0x7, stor[24] ; source, dest
wait stor[24] ; frames
mov 0xfffffdb5, stor[24] ; source, dest
mov 0x1c2, stor[25] ; source, dest
mov 0x7, stor[26] ; source, dest
mov 0xffffffff, stor[27] ; source, dest
gosub inl[:LABEL_78] ; addr
mov 0x0, stor[24] ; source, dest
gosub inl[:LABEL_58] ; addr
mov 0xc, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x1 ; animIndex
mov 0xfffffdb5, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0x1c2, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0xffffffff, stor[28] ; source, dest
gosub inl[:LABEL_73] ; addr
mov 0x14, stor[24] ; source, dest
wait stor[24] ; frames
call Scus94491BpeSegment::scriptStartFadeEffect, 0x1, 0x1e ; type, frames
mov 0x1e, stor[24] ; source, dest
wait stor[24] ; frames
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
call Scus94491BpeSegment::scriptSetGlobalFlag2, 0x3a2, 0x1 ; flag, value
mov 0xfffffdfb, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0x1c2, stor[26] ; source, dest
mov 0x1, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_73] ; addr
rewind

; SUBROUTINE
LABEL_147:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSetModelPosition, stor[0], 0xfffffed0, 0x16, 0xb4 ; scriptIndex, x, y, z
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x500, 0x0 ; scriptIndex, x, y, z
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptSetModeParamForNextCallToScriptSetCameraOffsetOrHideSubmapForegroundObject, 0x2, 0x0, 0x0 ; mode, foregroundObjectIndex, out
call SMap::scriptSetCameraOffset, 0x64, 0x0 ; x, y
mov var[64][1], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x3 ; index, entrypoint, stor[32] value
wait_cmp >=, 0x0, var[10] ; operator, left, right
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x0, 0x1 ; flag, value
mov 0x1, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_88] ; addr
mov 0xfffffffa, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_69] ; addr
mov 0x4, stor[24] ; source, dest
gosub inl[:LABEL_39] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x63, stor[25] ; source, dest
gosub inl[:LABEL_0] ; addr
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
return
LABEL_148:
rel :PTR_3d10_0
rel :PTR_3d10_0
rel :PTR_3d10_0
rel :PTR_3d10_0
rel :PTR_3d10_0
rel :PTR_3d10_0
rel :PTR_3d10_0
rel :PTR_3d10_0
rel :PTR_3d10_0
rel :PTR_3d10_0
rel :PTR_3d10_10
rel :PTR_3d10_11
rel :PTR_3d10_12
rel :PTR_3d10_13
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_21
rel :PTR_3d10_22
rel :PTR_3d10_23
rel :PTR_3d10_24
rel :PTR_3d10_25
rel :PTR_3d10_26
rel :PTR_3d10_27
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_30
rel :PTR_3d10_31
rel :PTR_3d10_32
rel :PTR_3d10_33
rel :PTR_3d10_34
rel :PTR_3d10_35
rel :PTR_3d10_36
rel :PTR_3d10_37
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_40
rel :PTR_3d10_41
rel :PTR_3d10_42
rel :PTR_3d10_43
rel :PTR_3d10_44
rel :PTR_3d10_45
rel :PTR_3d10_46
rel :PTR_3d10_47
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_50
rel :PTR_3d10_51
rel :PTR_3d10_52
rel :PTR_3d10_53
rel :PTR_3d10_54
rel :PTR_3d10_55
rel :PTR_3d10_56
rel :PTR_3d10_57
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_60
rel :PTR_3d10_61
rel :PTR_3d10_62
rel :PTR_3d10_63
rel :PTR_3d10_64
rel :PTR_3d10_65
rel :PTR_3d10_66
rel :PTR_3d10_67
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_70
rel :PTR_3d10_71
rel :PTR_3d10_72
rel :PTR_3d10_73
rel :PTR_3d10_74
rel :PTR_3d10_75
rel :PTR_3d10_76
rel :PTR_3d10_77
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_80
rel :PTR_3d10_81
rel :PTR_3d10_82
rel :PTR_3d10_83
rel :PTR_3d10_84
rel :PTR_3d10_85
rel :PTR_3d10_86
rel :PTR_3d10_87
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_90
rel :PTR_3d10_91
rel :PTR_3d10_92
rel :PTR_3d10_93
rel :PTR_3d10_94
rel :PTR_3d10_95
rel :PTR_3d10_96
rel :PTR_3d10_97
rel :PTR_3d10_14
rel :PTR_3d10_14
rel :PTR_3d10_100
rel :PTR_3d10_101
rel :PTR_3d10_102
rel :PTR_3d10_103
rel :PTR_3d10_104
rel :PTR_3d10_105
rel :PTR_3d10_106
rel :PTR_3d10_107
rel :PTR_3d10_108
rel :PTR_3d10_100
rel :PTR_3d10_110
rel :PTR_3d10_111
rel :PTR_3d10_112
rel :PTR_3d10_113
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_120
rel :PTR_3d10_121
rel :PTR_3d10_122
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_110
rel :PTR_3d10_110
LABEL_149:
rel :PTR_3f18_0
rel :PTR_3f18_0
rel :PTR_3f18_0
rel :PTR_3f18_0
rel :PTR_3f18_0
rel :PTR_3f18_0
rel :PTR_3f18_0
rel :PTR_3f18_0
rel :PTR_3f18_0
rel :PTR_3f18_0
rel :PTR_3f18_10
rel :PTR_3f18_11
rel :PTR_3f18_12
rel :PTR_3f18_13
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_21
rel :PTR_3f18_22
rel :PTR_3f18_23
rel :PTR_3f18_24
rel :PTR_3f18_25
rel :PTR_3f18_26
rel :PTR_3f18_27
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_30
rel :PTR_3f18_31
rel :PTR_3f18_32
rel :PTR_3f18_33
rel :PTR_3f18_34
rel :PTR_3f18_35
rel :PTR_3f18_36
rel :PTR_3f18_37
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_40
rel :PTR_3f18_41
rel :PTR_3f18_42
rel :PTR_3f18_43
rel :PTR_3f18_44
rel :PTR_3f18_45
rel :PTR_3f18_46
rel :PTR_3f18_47
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_50
rel :PTR_3f18_51
rel :PTR_3f18_52
rel :PTR_3f18_53
rel :PTR_3f18_54
rel :PTR_3f18_55
rel :PTR_3f18_56
rel :PTR_3f18_57
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_60
rel :PTR_3f18_61
rel :PTR_3f18_62
rel :PTR_3f18_63
rel :PTR_3f18_64
rel :PTR_3f18_65
rel :PTR_3f18_66
rel :PTR_3f18_67
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_70
rel :PTR_3f18_71
rel :PTR_3f18_72
rel :PTR_3f18_73
rel :PTR_3f18_74
rel :PTR_3f18_75
rel :PTR_3f18_76
rel :PTR_3f18_77
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_80
rel :PTR_3f18_81
rel :PTR_3f18_82
rel :PTR_3f18_83
rel :PTR_3f18_84
rel :PTR_3f18_85
rel :PTR_3f18_86
rel :PTR_3f18_87
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_90
rel :PTR_3f18_91
rel :PTR_3f18_92
rel :PTR_3f18_93
rel :PTR_3f18_94
rel :PTR_3f18_95
rel :PTR_3f18_96
rel :PTR_3f18_97
rel :PTR_3f18_14
rel :PTR_3f18_14
rel :PTR_3f18_100
rel :PTR_3f18_101
rel :PTR_3f18_102
rel :PTR_3f18_103
rel :PTR_3f18_104
rel :PTR_3f18_105
rel :PTR_3f18_106
rel :PTR_3f18_107
rel :PTR_3f18_108
rel :PTR_3f18_100
rel :PTR_3f18_110
rel :PTR_3f18_111
rel :PTR_3f18_112
rel :PTR_3f18_113
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_120
rel :PTR_3f18_121
rel :PTR_3f18_122
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_110
rel :PTR_3f18_110
LABEL_150:
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xcd
data 0xa
data 0xce
data 0xc
data 0xcf
data 0x14
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xcd
data 0x16
data 0xce
data 0x18
data 0xcf
data 0x14
data 0xd0
data 0x1a
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xcd
data 0x20
data 0xce
data 0x22
data 0xcf
data 0x1e
data 0xd0
data 0x24
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xcd
data 0x2a
data 0xce
data 0x2c
data 0xcf
data 0x28
data 0xd0
data 0x2e
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xcd
data 0x34
data 0xce
data 0x36
data 0xcf
data 0x32
data 0xd0
data 0x38
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xcd
data 0x3e
data 0xce
data 0x40
data 0xcf
data 0x3c
data 0xd0
data 0x42
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xcd
data 0x48
data 0xce
data 0x4a
data 0xcf
data 0x46
data 0xd0
data 0x4c
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xcd
data 0x52
data 0xce
data 0x54
data 0xcf
data 0x50
data 0xd0
data 0x56
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xcd
data 0x5c
data 0xce
data 0x5e
data 0xcf
data 0x5a
data 0xd0
data 0x60
data 0xffffffff
data 0xffffffff
LABEL_151:
data 0xffffff4d
LABEL_152:
data 0xfffffefc
LABEL_153:
data 0x34b
LABEL_154:
data 0xb
data 0x0
data 0x18
data 0x19
data 0x1a
data 0xffffffff
data 0xb
data 0x3e8
data 0x4
data 0x17
data 0x2e
data 0x30
data 0x33
data 0x34
data 0x3a
data 0x5e
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
LABEL_155:
data 0xffffff17
data 0x16
data 0x12d

data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
LABEL_156:
data 0x2
data 0x0
data 0xfffffff1
data 0xffffffef
data 0xa
data 0x0
data 0x0
data 0x0
data 0x12
data 0x0
data 0x0
data 0x0
data 0x19
data 0x2
data 0xfffffffd
data 0x0
data 0x20
data 0x0
data 0x0
data 0x0
data 0x26
data 0x0
data 0x5
data 0x6
data 0xffffffff
LABEL_157:
data 0x2
data 0x3
data 0x6
data 0x21
data 0x11
data 0xd
data 0x19
data 0x18
data 0x1f
data 0x3d
data 0x25
data 0x24
data 0xffffffff
data 0xffffffff
LABEL_158:
data 0x3d
data 0x3a
data 0x60
data 0x6c
data 0x72
data 0x50
data 0x75
data 0x54
data 0x35
data 0xffffffff
PTR_3d10_100:
data str[Knight A<line>It was super!!]
PTR_3f18_100:
data 0xe
data 0x2
PTR_3d10_101:
data str[Knight B<line>What about it?]
PTR_3f18_101:
data 0xe
data 0x2
PTR_3d10_102:
data str[Knight A<line>That Dart fella, yesterday<line>he wore unique armor and<line>defeated Kongol!!]
PTR_3f18_102:
data 0x1a
data 0x4
PTR_3d10_103:
data str[Knight B<line>With Dart,<line>Imperial Sandora is not<line>even a match as our enemy!!]
PTR_3f18_103:
data 0x1b
data 0x4
PTR_3d10_104:
data str[Knight A<line>Dart is the messiah of the<line>Kingdom of Basil!]
PTR_3f18_104:
data 0x1a
data 0x3
data 0x470030
data 0x3d004b
data 0x2ba1ff
data 0x4b003d
data 0x41004b
data 0x400039
data 0x1
data 0x4d0040
data 0x20040
data 0xa0ff
data 0xd
data 0x2
data 0x470030
data 0x3d004b
data 0x37a1ff
data 0x4d0047
data 0x3b0000
data 0x460039
data 0x470046
data 0x4c
data 0x3d003a
data 0x3b0000
data 0x440039
data 0x3d0044
data 0x3c
data 0x39
data 0x3d004a
data 0x440039
data 0x22a1ff
data 0x39004a
data 0x47003f
data 0x460047
data 0x3f0000
data 0x4c003d
data 0x41004c
data 0x3f0046
data 0x4b0000
data 0x4d004c
data 0x460046
data 0x3c003d
data 0x440000
data 0x430041
data 0x3d
data 0x40004c
data 0x4c0039
data 0xa1ff0001
data 0x51003a
data 0x3a0000
data 0x4a004d
data 0x4c004b
data 0x460041
data 0x3f
data 0x41004f
data 0x40004c
data 0x4c0000
data 0x3d0040
data 0x480000
data 0x4f0047
data 0x4a003d
data 0xa0ff0002
data 0x22
data 0x4
PTR_3d10_105:
data str[<sauto=0><colour=8>Dart<line><colour=0>...<line>Then, tell me, Rose.]
PTR_3f18_105:
data 0x14
data 0x3
PTR_3d10_106:
data str[Dart<line>...]
PTR_3f18_106:
data 0x4
data 0x2
data 0x470030
data 0x3d004b
data 0x27a1ff
data 0x440009
data 0x44
data 0x3d003a
data 0x400000
data 0x4a003d
data 0x3d
data 0x47003e
data 0x4a
data 0x39
data 0x40004f
data 0x440041
data 0x2003d
data 0x25a1ff
data 0x47
data 0x4a0048
data 0x48003d
data 0x4a0039
data 0x3d
data 0x47003e
data 0x4a
data 0x40004c
data 0x3d
data 0x3d003c
data 0x390048
data 0x4c004a
data 0x4a004d
data 0x2003d
data 0xa0ff
data 0x1d
data 0x3
PTR_3d10_107:
data str[Dart<line>Then, tell me, Rose.]
PTR_3f18_107:
data 0x14
data 0x2
PTR_3d10_108:
data str[Dart<line>How should I fight as a Dragoon.]
PTR_3f18_108:
data 0x20
data 0x2
data 0x470030
data 0x3d004b
data 0x35a1ff
data 0x44003d
data 0x10044
data 0x440000
data 0x4c003d
data 0x4b0009
data 0x3a0000
data 0x3f003d
data 0x460041
data 0xa0ff0002
data 0x12
data 0x2
data 0x470030
data 0x3d004b
data 0x32a1ff
data 0x410040
data 0x4b
data 0x4b0041
data 0x4f0000
data 0x390040
data 0x4c
data 0x27
data 0x39003b
data 0x46
data 0x3d004c
data 0x3b0039
data 0x20040
data 0x1fa1ff
data 0x4c003e
data 0x4a003d
data 0x4c0000
data 0x390040
data 0x1004c
data 0x410000
data 0x9004c
data 0x4b
data 0x48004d
data 0x4c0000
data 0x47
data 0x470051
data 0x2004d
data 0xa0ff
data 0x1b
data 0x3
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x15004b
data 0x1c001e
data 0x70016
data 0x190016
data 0xa0ff
data 0x10
data 0x1
PTR_3d10_110:
data str[Dart<line>Rose.]
PTR_3f18_110:
data 0x5
data 0x2
PTR_3d10_111:
data str[<sauto=0><colour=8>Dart<line><colour=0>No, it's nothing.<line>Teach me how to fight as a<line>Dragoon.]
PTR_3f18_111:
data 0x1a
data 0x4
PTR_3d10_112:
data str[Dart<line>Teach me how to fight as a<line>Dragoon.]
PTR_3f18_112:
data 0x1a
data 0x3
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x15004b
data 0x1c001e
data 0x70017
data 0x180015
data 0xa0ff
data 0x10
data 0x1
PTR_3d10_113:
data str[Dart<line>No, it's nothing.]
PTR_3f18_113:
data 0x11
data 0x2
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x15004b
data 0x1c001e
data 0x70017
data 0x1a0015
data 0xa0ff
data 0x10
data 0x1
data 0x470030
data 0x3d004b
data 0x2da1ff
data 0x3b0046
data 0x3d
data 0x3d004f
data 0x440000
data 0x39003d
data 0x3d004e
data 0x4c0000
data 0x3d0040
data 0x4c0000
data 0x4f0047
data 0x10046
data 0x270000
data 0x4f0000
data 0x440041
data 0xa1ff0044
data 0x47003b
data 0x4b0046
data 0x3c0041
data 0x4a003d
data 0x510000
data 0x4d0047
data 0x390000
data 0x4b
data 0x39
data 0x390045
data 0x4d004c
data 0x3d004a
data 0x220000
data 0x39004a
data 0x47003f
data 0x460047
data 0xa0ff0002
data 0x21
data 0x3
data 0x470030
data 0x3d004b
data 0x27a1ff
data 0x4f0000
data 0x460047
data 0x4c0009
data 0x4c0000
data 0x39003d
data 0x40003b
data 0x510000
data 0x4d0047
data 0x400000
data 0x4f0047
data 0x4c0000
data 0x47
data 0x41003e
data 0x40003f
data 0xa1ff004c
data 0x460039
data 0x450051
data 0x4a0047
data 0x2003d
data 0xa0ff
data 0x1e
data 0x3
PTR_3d10_120:
data str[<sauto=0><colour=8>Dart<line><colour=0>I still don't have confidence....<line>Okay, I'll be all right.]
PTR_3f18_120:
data 0x21
data 0x3
PTR_3d10_121:
data str[Dart<line>Okay, I'll be all right.]
PTR_3f18_121:
data 0x18
data 0x2
PTR_3d10_122:
data str[Dart<line>I still don't have confidence....]
PTR_3f18_122:
data 0x21
data 0x2
data 0x470030
data 0x3d004b
data 0x27a1ff
data 0x4b0000
data 0x3d003d
data 0x20002
data 0x20002
data 0xa0ff
data 0x9
data 0x2
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x15004b
data 0x1c001e
data 0x70018
data 0x1b0015
data 0xa0ff
data 0x10
data 0x1
PTR_3d10_14:
data str[<speed=0>It is off limits from here.<line>The road has collapsed and is<line>dangerous.]
PTR_3f18_14:
data 0x1d
data 0x3
PTR_3d10_21:
data str[<sauto=0>Currently it is off limits from<line>here.]
PTR_3f18_21:
data 0x1f
data 0x2
PTR_3d10_22:
data str[<speed=0>I lost my girlfriend.<line>She joined the defenses, as a<line>knight too.]
PTR_3f18_22:
data 0x1d
data 0x3
PTR_3d10_23:
data str[<sauto=0>I regret I couldn't protect my<line>girlfriend. It's sad!!]
PTR_3f18_23:
data 0x1e
data 0x2
PTR_3d10_24:
data str[<speed=0>Kongol is alive and there is a<line>dragon too. I wonder if we can<line>really win.]
PTR_3f18_24:
data 0x1e
data 0x3
PTR_3d10_25:
data str[<sauto=0>I wonder if we can really defeat<line>the Sandora.]
PTR_3f18_25:
data 0x20
data 0x2
PTR_3d10_26:
data str[<speed=0>If we defend <colour=5>Hoax<colour=0> to the<line>last man, we will be in bad shape.]
PTR_3f18_26:
data 0x22
data 0x2
PTR_3d10_27:
data str[<sauto=0>If they attack us again, I<line>wonder if we can stand up to them.]
PTR_3f18_27:
data 0x22
data 0x2
PTR_3d10_10:
data str[<speed=0>With Mr. Dart, the Imperial<line>Sandora are no match for us!]
PTR_3f18_10:
data 0x1c
data 0x2
PTR_3d10_11:
data str[<sauto=0>Mr. Dart is the messiah of the<line>Kingdom of Basil!]
PTR_3f18_11:
data 0x1e
data 0x2
PTR_3d10_12:
data str[<speed=0>I wish I could've seen Mr. Dart<line>defeat Kongol.]
PTR_3f18_12:
data 0x1f
data 0x2
PTR_3d10_13:
data str[<sauto=0>I wish I could've seen Mr. Dart<line>transform himself.]
PTR_3f18_13:
data 0x1f
data 0x2
PTR_3d10_30:
data str[<speed=0>The road is not fixed yet.<line>It is off limits because it is<line>dangerous.]
PTR_3f18_30:
data 0x1e
data 0x3
PTR_3d10_31:
data str[<sauto=0>It is off limits from here.]
PTR_3f18_31:
data 0x1b
data 0x1
PTR_3d10_32:
data str[<speed=0>I decided to stop feeling sad!<line>And to make sure my girlfriend's<line>death wasn't in vain!]
PTR_3f18_32:
data 0x20
data 0x3
PTR_3d10_33:
data str[<sauto=0>No matter what comes to attack<line>us, I will defend <colour=5>Hoax<colour=0> to the<line>end!]
PTR_3f18_33:
data 0x1e
data 0x3
PTR_3d10_34:
data str[<speed=0>The dragon is really dead isn't<line>it! Now we have a chance of victory!]
PTR_3f18_34:
data 0x24
data 0x2
PTR_3d10_35:
data str[<sauto=0>I hope Sandora has only one<line>dragon!]
PTR_3f18_35:
data 0x1b
data 0x2
PTR_3d10_36:
data str[<speed=0>Now, Kongol the Giganto warrior<line>is the only menace from Sandora! The<line>knights are feeling stronger!]
PTR_3f18_36:
data 0x24
data 0x3
PTR_3d10_37:
data str[<sauto=0>A victory by the Kingdom of Basil<line>is close at hand! The unification<line>of Serdio is upon us!]
PTR_3f18_37:
data 0x21
data 0x3
PTR_3d10_40:
data str[<speed=0>The road is not fixed yet.<line>It is off limits because it is<line>dangerous.]
PTR_3f18_40:
data 0x1e
data 0x3
PTR_3d10_41:
data str[<sauto=0>It is off limits from here.]
PTR_3f18_41:
data 0x1b
data 0x1
PTR_3d10_42:
data str[<speed=0>I decided to stop feeling sad!<line>And to make sure my girlfriend's<line>death wasn't in vain!]
PTR_3f18_42:
data 0x20
data 0x3
PTR_3d10_43:
data str[<sauto=0>No matter what comes to attack<line>us, I will defend <colour=5>Hoax<colour=0> to<line>the end!]
PTR_3f18_43:
data 0x1e
data 0x3
PTR_3d10_44:
data str[<speed=0>The dragon no longer exists in<line>Sandora! A victory by our Kingdom<line>of Basil is close at hand!]
PTR_3f18_44:
data 0x21
data 0x3
PTR_3d10_45:
data str[<sauto=0>One more push! Let's do it!]
PTR_3f18_45:
data 0x1b
data 0x1
PTR_3d10_46:
data str[<speed=0>Now, Kongol the Giganto warrior<line>is the only menace from Sandora! The<line>knights are feeling stronger!]
PTR_3f18_46:
data 0x24
data 0x3
PTR_3d10_47:
data str[<sauto=0>A victory by the Kingdom of Basil<line>is close at hand! The unification of<line>Serdio is upon us!]
PTR_3f18_47:
data 0x24
data 0x3
PTR_3d10_50:
data str[<speed=0>The road is not fixed yet.<line>It is off limits because it is<line>dangerous.]
PTR_3f18_50:
data 0x1e
data 0x3
PTR_3d10_51:
data str[<sauto=0>It is off limits from here.]
PTR_3f18_51:
data 0x1b
data 0x1
PTR_3d10_52:
data str[<speed=0>Oh no! <colour=5>Bale<colour=0> was<line>invaded!]
PTR_3f18_52:
data 0xf
data 0x2
PTR_3d10_53:
data str[<sauto=0>Does this mean my girlfriend's<line>death was ... completely in vain?]
PTR_3f18_53:
data 0x21
data 0x2
PTR_3d10_54:
data str[<speed=0>We have almost no hope for King<line>Albert because he is confined in<line><colour=5>Hellena<colour=0>.]
PTR_3f18_54:
data 0x20
data 0x3
PTR_3d10_55:
data str[<sauto=0>Oh my god ...<line>King Albert....]
PTR_3f18_55:
data 0xf
data 0x2
PTR_3d10_56:
data str[<speed=0>I never imagined they would use<line>the entire knighthood to invade<line><colour=5>Bale<colour=0>. Ah, God!]
PTR_3f18_56:
data 0x1f
data 0x3
PTR_3d10_57:
data str[<sauto=0>I wonder if my family in <colour=5>Bale<line><colour=0>is safe.]
PTR_3f18_57:
data 0x1d
data 0x2
PTR_3d10_60:
data str[<speed=0>The road is not fixed yet.<line>It is off limits because it is<line>dangerous.]
PTR_3f18_60:
data 0x1e
data 0x3
PTR_3d10_61:
data str[<sauto=0>It is off limits from here.]
PTR_3f18_61:
data 0x1b
data 0x1
PTR_3d10_62:
data str[<speed=0>Sandora has taken <colour=5>Bale<line><colour=0>as a hostage ... that's why they are<line>not taking any action now.]
PTR_3f18_62:
data 0x24
data 0x3
PTR_3d10_63:
data str[<sauto=0>If we take any action, probably<line><colour=5>Bale<colour=0> will be...!]
PTR_3f18_63:
data 0x1f
data 0x2
PTR_3d10_64:
data str[<speed=0>I heard King Albert is alive!]
PTR_3f18_64:
data 0x1d
data 0x1
PTR_3d10_65:
data str[<sauto=0>I'm glad ... King Albert!]
PTR_3f18_65:
data 0x19
data 0x1
PTR_3d10_66:
data str[<speed=0>Lavitz must be happy that he<line>could save the life of King<line>Albert.]
PTR_3f18_66:
data 0x1c
data 0x3
PTR_3d10_67:
data str[<sauto=0>Lavitz....<line>We lost such an important person.]
PTR_3f18_67:
data 0x21
data 0x2
PTR_3d10_70:
data str[<speed=0>The road is not fixed yet.<line>It is off limits because it is<line>dangerous.]
PTR_3f18_70:
data 0x1e
data 0x3
PTR_3d10_71:
data str[<sauto=0>It is off limits from here.]
PTR_3f18_71:
data 0x1b
data 0x1
PTR_3d10_72:
data str[<speed=0>The war is over, but there still<line>is a threat to this town. It's<line>those animals in the next forest.]
PTR_3f18_72:
data 0x21
data 0x3
PTR_3d10_73:
data str[<sauto=0>The wall of this town was<line>originally made to protect against<line>animals. It wasn't made to protect<line>against people.]
PTR_3f18_73:
data 0x22
data 0x4
PTR_3d10_74:
data str[<speed=0>The war is over and I am back.<line>But it's a huge mess here.]
PTR_3f18_74:
data 0x1e
data 0x2
PTR_3d10_75:
data str[<sauto=0>It'll be hard to restore.<line>Of course we have to do it somehow.]
PTR_3f18_75:
data 0x23
data 0x2
PTR_3d10_76:
data str[<speed=0>The spirit of Lavtiz was inherited<line>by all the knights of Serdio. We<line>will never repeat this tragedy!]
PTR_3f18_76:
data 0x22
data 0x3
PTR_3d10_77:
data str[<sauto=0>The spirit we got from Lavitz,<line>please see us through this!]
PTR_3f18_77:
data 0x1e
data 0x2
PTR_3d10_80:
data str[<speed=0>The road is not fixed yet.<line>It is off limits because it is<line>dangerous.]
PTR_3f18_80:
data 0x1e
data 0x3
PTR_3d10_81:
data str[<sauto=0>It is off limits from here.]
PTR_3f18_81:
data 0x1b
data 0x1
PTR_3d10_82:
data str[<speed=0>The war is over, but there still<line>is a threat to this town. It's<line>those animals in the next forest.]
PTR_3f18_82:
data 0x21
data 0x3
PTR_3d10_83:
data str[<sauto=0>The wall of this town was<line>originally made to protect against<line>animals. It wasn't made to protect<line>against people.]
PTR_3f18_83:
data 0x22
data 0x4
PTR_3d10_84:
data str[<speed=0>Slowly but steadily, we are<line>restoring things. Although it is<line>too slow to notice the progress.]
PTR_3f18_84:
data 0x20
data 0x3
PTR_3d10_85:
data str[<sauto=0>The restoration is underway.<line>Slowly but steadily.]
PTR_3f18_85:
data 0x1c
data 0x2
PTR_3d10_86:
data str[<speed=0>The spirit of Lavtiz are inherited<line>by all the knights of Serdio. We<line>will never repeat this tragedy!]
PTR_3f18_86:
data 0x22
data 0x3
PTR_3d10_87:
data str[<sauto=0>The spirit we got from Lavitz....<line>Please see us through this!]
PTR_3f18_87:
data 0x21
data 0x2
PTR_3d10_90:
data str[<speed=0>The road is not fixed yet.<line>It is off limits because it is<line>dangerous.]
PTR_3f18_90:
data 0x1e
data 0x3
PTR_3d10_91:
data str[<sauto=0>It is off limits from here.]
PTR_3f18_91:
data 0x1b
data 0x1
PTR_3d10_92:
data str[<speed=0>The war is over, but we still<line>have a threat to this town. It's<line>those animals in the next forest.]
PTR_3f18_92:
data 0x21
data 0x3
PTR_3d10_93:
data str[<sauto=0>The wall of this town was<line>originally made to protect against<line>animals. It wasn't made to protect<line>against people.]
PTR_3f18_93:
data 0x22
data 0x4
PTR_3d10_94:
data str[<speed=0>Slowly but steadily, we are<line>restoring things. Although it is<line>too slow to notice the progress.]
PTR_3f18_94:
data 0x20
data 0x3
PTR_3d10_95:
data str[<sauto=0>The restoration is underway.<line>Slowly but steadily.]
PTR_3f18_95:
data 0x1c
data 0x2
PTR_3d10_96:
data str[<speed=0>The spirit of Lavtiz was inherited<line>by all the knights of Serdio. We<line>will never repeat this tragedy!]
PTR_3f18_96:
data 0x22
data 0x3
PTR_3d10_97:
data str[<sauto=0>The spirit we got from Lavitz....<line>Please see us through this!]
PTR_3f18_97:
data 0x21
data 0x2
PTR_3d10_0:
data str[<sauto=0>"Silver Dragon Inn<line>for your relaxation"]
PTR_3f18_0:
data 0x14
data 0x2
LABEL_159:
data str[<sauto=0>Acquired <colour=5>Stardust<colour=0> ]
LABEL_160:
data 0x12
data 0x1
