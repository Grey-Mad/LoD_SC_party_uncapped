entrypoint :ENTRYPOINT_0
entrypoint :ENTRYPOINT_1
entrypoint :ENTRYPOINT_2
entrypoint :ENTRYPOINT_3
entrypoint :ENTRYPOINT_4
entrypoint :ENTRYPOINT_5
entrypoint :ENTRYPOINT_6
entrypoint :ENTRYPOINT_7
entrypoint :ENTRYPOINT_8
entrypoint :ENTRYPOINT_9
entrypoint :ENTRYPOINT_10
entrypoint :ENTRYPOINT_11
entrypoint :ENTRYPOINT_12
entrypoint :ENTRYPOINT_13
entrypoint :ENTRYPOINT_14
entrypoint :ENTRYPOINT_15

; SUBROUTINE
LABEL_0:
mov stor[21], stor[28] ; source, dest
mul 0x5, stor[28] ; amount, operand
jmp_cmp !=, 0x0, inl[:LABEL_156[stor[28]]], inl[:LABEL_1] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
mov var[64][stor[30]], stor[30] ; source, dest
incr stor[28] ; operand
jmp_cmp !=, inl[:LABEL_156[stor[28]]], stor[stor[stor[0], 30], 21], inl[:LABEL_105] ; operand, left, right, addr
incr stor[21] ; operand
return
LABEL_1:
jmp_cmp !=, 0x1, inl[:LABEL_156[stor[28]]], inl[:LABEL_2] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[28] ; source, dest
gosub inl[:LABEL_106] ; addr
incr stor[21] ; operand
return
LABEL_2:
jmp_cmp !=, 0x2, inl[:LABEL_156[stor[28]]], inl[:LABEL_5] ; operand, left, right, addr
add 0x4, stor[28] ; amount, operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
mov 0x0, stor[28] ; source, dest
LABEL_3:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[28], stor[29] ; index, initialized
jmp_cmp !=, 0x0, stor[29], inl[:LABEL_4] ; operand, left, right, addr
incr stor[28] ; operand
jmp_cmp <=, stor[28], 0x4, inl[:LABEL_3] ; operand, left, right, addr
incr stor[21] ; operand
jmp_cmp !=, 0x0, stor[30], inl[:LABEL_4] ; operand, left, right, addr
gosub inl[:LABEL_123] ; addr
LABEL_4:
return
LABEL_5:
jmp_cmp !=, 0x3, inl[:LABEL_156[stor[28]]], inl[:LABEL_6] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
incr stor[28] ; operand
call SMap::scriptSelfLoadSobjAnimation, inl[:LABEL_156[stor[28]]] ; animIndex
incr stor[21] ; operand
return
LABEL_6:
jmp_cmp !=, 0x4, inl[:LABEL_156[stor[28]]], inl[:LABEL_7] ; operand, left, right, addr
call SMap::scriptSelfIsAnimationFinished, stor[31] ; value
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_105] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x1 ; disabled
incr stor[21] ; operand
return
LABEL_7:
jmp_cmp !=, 0x5, inl[:LABEL_156[stor[28]]], inl[:LABEL_8] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptSelfMoveToPosition, stor[29], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; x, y, z, movementTicks
incr stor[21] ; operand
return
LABEL_8:
jmp_cmp !=, 0x6, inl[:LABEL_156[stor[28]]], inl[:LABEL_9] ; operand, left, right, addr
incr stor[28] ; operand
mov stor[28], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptRotateSobj, stor[0], 0x0, inl[:LABEL_156[stor[31]]], 0x0, inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z, frames
incr stor[21] ; operand
return
LABEL_9:
jmp_cmp !=, 0x7, inl[:LABEL_156[stor[28]]], inl[:LABEL_10] ; operand, left, right, addr
call SMap::FUN_800df620, stor[31] ; value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_105] ; operand, left, right, addr
incr stor[21] ; operand
gosub inl[:LABEL_0] ; addr
return
LABEL_10:
jmp_cmp !=, 0x8, inl[:LABEL_156[stor[28]]], inl[:LABEL_11] ; operand, left, right, addr
call SMap::scriptReadModelRotate, stor[0], stor[29], stor[31], stor[30] ; scriptIndex, x, y, z
incr stor[28] ; operand
sub_rev inl[:LABEL_156[stor[28]]], stor[31] ; amount, operand
gosub inl[:LABEL_124] ; addr
incr stor[28] ; operand
call SMap::scriptRotateSobj, stor[0], 0x0, stor[31], 0x0, inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z, frames
incr stor[21] ; operand
return
LABEL_11:
jmp_cmp !=, 0x9, inl[:LABEL_156[stor[28]]], inl[:LABEL_12] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptSelfFacePoint, stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; x, y, z
incr stor[21] ; operand
return
LABEL_12:
jmp_cmp !=, 0xa, inl[:LABEL_156[stor[28]]], inl[:LABEL_13] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptDisableShadow, stor[0] ; sobjIndex
call SMap::FUN_800df904, stor[29], stor[30], stor[31], inl[:LABEL_156[stor[28]]], 0x0 ; x, y, z, i_144, ui_18c
incr stor[21] ; operand
return
LABEL_13:
jmp_cmp !=, 0xb, inl[:LABEL_156[stor[28]]], inl[:LABEL_14] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[21] ; source, dest
return
LABEL_14:
jmp_cmp !=, 0xc, inl[:LABEL_156[stor[28]]], inl[:LABEL_15] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[31], inl[:LABEL_156[stor[28]]] ; flag, value
incr stor[21] ; operand
return
LABEL_15:
jmp_cmp !=, 0xd, inl[:LABEL_156[stor[28]]], inl[:LABEL_16] ; operand, left, right, addr
incr stor[28] ; operand
call Scus94491BpeSegment::scriptReadGlobalFlag1, inl[:LABEL_156[stor[28]]], stor[31] ; flag, value
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_105] ; operand, left, right, addr
incr stor[21] ; operand
return
LABEL_16:
jmp_cmp !=, 0xe, inl[:LABEL_156[stor[28]]], inl[:LABEL_17] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x1 ; disabled
incr stor[21] ; operand
return
LABEL_17:
jmp_cmp !=, 0xf, inl[:LABEL_156[stor[28]]], inl[:LABEL_18] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
incr stor[21] ; operand
return
LABEL_18:
jmp_cmp !=, 0x10, inl[:LABEL_156[stor[28]]], inl[:LABEL_19] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptRotateSobj, stor[0], stor[29], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z, frames
incr stor[21] ; operand
return
LABEL_19:
jmp_cmp !=, 0x11, inl[:LABEL_156[stor[28]]], inl[:LABEL_20] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptSetModelRotate, stor[0], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z
incr stor[21] ; operand
return
LABEL_20:
jmp_cmp !=, 0x28, inl[:LABEL_156[stor[28]]], inl[:LABEL_21] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call Scus94491BpeSegment::scriptPlaySound, 0x0, stor[29], stor[30], 0x0, stor[31], inl[:LABEL_156[stor[28]]] ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
incr stor[21] ; operand
return
LABEL_21:
jmp_cmp !=, 0x29, inl[:LABEL_156[stor[28]]], inl[:LABEL_22] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call Scus94491BpeSegment::scriptPlaySound, 0x8, stor[29], stor[30], 0x0, stor[31], inl[:LABEL_156[stor[28]]] ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
incr stor[21] ; operand
return
LABEL_22:
jmp_cmp !=, 0x2a, inl[:LABEL_156[stor[28]]], inl[:LABEL_23] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
call Scus94491BpeSegment::scriptStopSound, 0x0, stor[29], stor[30] ; soundFileIndex, soundIndex, mode
incr stor[21] ; operand
return
LABEL_23:
jmp_cmp !=, 0x2b, inl[:LABEL_156[stor[28]]], inl[:LABEL_24] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
call Scus94491BpeSegment::scriptStopSound, 0x8, stor[29], stor[30] ; soundFileIndex, soundIndex, mode
incr stor[21] ; operand
return
LABEL_24:
jmp_cmp !=, 0x2d, inl[:LABEL_156[stor[28]]], inl[:LABEL_25] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call Scus94491BpeSegment::scriptUnloadSoundFile, 0x4 ; soundType
call Scus94491BpeSegment::FUN_8001eb30, stor[29] ; unused
incr stor[21] ; operand
return
LABEL_25:
jmp_cmp !=, 0x31, inl[:LABEL_156[stor[28]]], inl[:LABEL_26] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
call Scus94491BpeSegment::FUN_8001b134, stor[29], stor[30] ; p0, p1
incr stor[21] ; operand
return
LABEL_26:
jmp_cmp !=, 0x32, inl[:LABEL_156[stor[28]]], inl[:LABEL_27] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[21] ; operand
return
LABEL_27:
jmp_cmp !=, 0x33, inl[:LABEL_156[stor[28]]], inl[:LABEL_28] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call Scus94491BpeSegment::scriptStopEncounterSounds, stor[29] ; p0
incr stor[21] ; operand
return
LABEL_28:
jmp_cmp !=, 0x34, inl[:LABEL_156[stor[28]]], inl[:LABEL_29] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call Scus94491BpeSegment::scriptStopEncounterSounds2, stor[29] ; p0
incr stor[21] ; operand
return
LABEL_29:
jmp_cmp !=, 0x35, inl[:LABEL_156[stor[28]]], inl[:LABEL_30] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call Scus94491BpeSegment::FUN_8001b094, stor[29] ; p0
incr stor[21] ; operand
return
LABEL_30:
jmp_cmp !=, 0x37, inl[:LABEL_156[stor[28]]], inl[:LABEL_31] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call Scus94491BpeSegment_8002::scriptStopEncounterSoundEffects, stor[29] ; index
incr stor[21] ; operand
return
LABEL_31:
jmp_cmp !=, 0x38, inl[:LABEL_156[stor[28]]], inl[:LABEL_32] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call Scus94491BpeSegment::FUN_8001fe28, stor[29] ; musicIndex, p1
incr stor[21] ; operand
return
LABEL_32:
jmp_cmp !=, 0x39, inl[:LABEL_156[stor[28]]], inl[:LABEL_33] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptFreeEncounterSoundEffects ; index
incr stor[21] ; operand
return
LABEL_33:
jmp_cmp !=, 0x3a, inl[:LABEL_156[stor[28]]], inl[:LABEL_34] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call Scus94491BpeSegment::scriptChangeSequenceVolumeOverTime, stor[29], 0x0 ; fadeTime, volume
incr stor[21] ; operand
return
LABEL_34:
jmp_cmp !=, 0x3b, inl[:LABEL_156[stor[28]]], inl[:LABEL_36] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
jmp_cmp ==, 0xffffffff, stor[29], inl[:LABEL_35] ; operand, left, right, addr
call Scus94491BpeSegment::scriptStopCurrentMusicSequence ; index
call Scus94491BpeSegment::scriptLoadMusicPackage, stor[29], 0x0 ; musicIndex, dontStartSequence
incr stor[21] ; operand
return
LABEL_35:
call Scus94491BpeSegment::scriptStartSequenceAndChangeVolumeOverTime, stor[31], stor[30] ; fadeTime, volume
incr stor[21] ; operand
return
LABEL_36:
jmp_cmp !=, 0x12c, inl[:LABEL_156[stor[28]]], inl[:LABEL_37] ; operand, left, right, addr
mov 0x3c, stor[29] ; source, dest
incr stor[21] ; operand
return
LABEL_37:
jmp_cmp !=, 0x12d, inl[:LABEL_156[stor[28]]], inl[:LABEL_38] ; operand, left, right, addr
gosub inl[:LABEL_128] ; addr
jmp_cmp !=, 0x0, stor[29], inl[:LABEL_105] ; operand, left, right, addr
incr stor[21] ; operand
return
LABEL_38:
jmp_cmp !=, 0x12e, inl[:LABEL_156[stor[28]]], inl[:LABEL_39] ; operand, left, right, addr
call SMap::FUN_800df620, stor[31] ; value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_105] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptSelfMoveToPosition, stor[29], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; x, y, z, movementTicks
incr stor[21] ; operand
return
LABEL_39:
jmp_cmp !=, 0x12f, inl[:LABEL_156[stor[28]]], inl[:LABEL_40] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[21] ; operand
return
LABEL_40:
jmp_cmp !=, 0x130, inl[:LABEL_156[stor[28]]], inl[:LABEL_42] ; operand, left, right, addr
decr stor[29] ; operand
jmp_cmp <, 0x0, stor[29], inl[:LABEL_41] ; operand, left, right, addr
incr stor[21] ; operand
LABEL_41:
return
LABEL_42:
jmp_cmp !=, 0x131, inl[:LABEL_156[stor[28]]], inl[:LABEL_43] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
wait stor[29] ; frames
incr stor[21] ; operand
return
LABEL_43:
jmp_cmp !=, 0x132, inl[:LABEL_156[stor[28]]], inl[:LABEL_44] ; operand, left, right, addr
incr stor[28] ; operand
call SMap::scriptSelfSetSobjHidden, inl[:LABEL_156[stor[28]]] ; value
incr stor[21] ; operand
return
LABEL_44:
jmp_cmp !=, 0x133, inl[:LABEL_156[stor[28]]], inl[:LABEL_45] ; operand, left, right, addr
incr stor[28] ; operand
call SMap::FUN_800df530, inl[:LABEL_156[stor[28]]] ; value
incr stor[21] ; operand
return
LABEL_45:
jmp_cmp !=, 0x134, inl[:LABEL_156[stor[28]]], inl[:LABEL_46] ; operand, left, right, addr
incr stor[28] ; operand
call SMap::scriptSelfAttachCameraToSobj, inl[:LABEL_156[stor[28]]] ; attach
incr stor[21] ; operand
return
LABEL_46:
jmp_cmp !=, 0x135, inl[:LABEL_156[stor[28]]], inl[:LABEL_47] ; operand, left, right, addr
incr stor[28] ; operand
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, inl[:LABEL_156[stor[28]]] ; index
incr stor[21] ; operand
return
LABEL_47:
jmp_cmp !=, 0x136, inl[:LABEL_156[stor[28]]], inl[:LABEL_48] ; operand, left, right, addr
incr stor[28] ; operand
call SMap::scriptSelfLoadSobjModelAndAnimation, inl[:LABEL_156[stor[28]]] ; objectIndex
incr stor[21] ; operand
return
LABEL_48:
jmp_cmp !=, 0x137, inl[:LABEL_156[stor[28]]], inl[:LABEL_49] ; operand, left, right, addr
call SMap::scriptSelfIsAnimationFinished, stor[31] ; value
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_105] ; operand, left, right, addr
incr stor[28] ; operand
call SMap::scriptSelfLoadSobjAnimation, inl[:LABEL_156[stor[28]]] ; animIndex
incr stor[21] ; operand
return
LABEL_49:
jmp_cmp !=, 0x15e, inl[:LABEL_156[stor[28]]], inl[:LABEL_50] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call SMap::scriptToggleAnimationDisabled, var[64][stor[29]], 0x0 ; scriptIndex, disabled
incr stor[28] ; operand
call SMap::scriptLoadSobjAnimation, var[64][stor[29]], inl[:LABEL_156[stor[28]]] ; scriptIndex, animIndex
incr stor[21] ; operand
return
LABEL_50:
jmp_cmp !=, 0x15f, inl[:LABEL_156[stor[28]]], inl[:LABEL_51] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call SMap::scriptIsAnimationFinished, var[64][stor[29]], stor[31] ; scriptIndex, finished
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_105] ; operand, left, right, addr
call SMap::scriptToggleAnimationDisabled, var[64][stor[29]], 0x1 ; scriptIndex, disabled
incr stor[21] ; operand
return
LABEL_51:
jmp_cmp !=, 0x160, inl[:LABEL_156[stor[28]]], inl[:LABEL_52] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
call SMap::scriptSetSobjHidden, var[64][stor[29]], inl[:LABEL_156[stor[28]]] ; scriptIndex, hidden
incr stor[21] ; operand
return
LABEL_52:
jmp_cmp !=, 0x161, inl[:LABEL_156[stor[28]]], inl[:LABEL_53] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[27] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptSobjMoveToPosition, var[64][stor[27]], stor[29], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z, movementTicks
add 0x2, stor[21] ; amount, operand
return
LABEL_53:
jmp_cmp !=, 0x162, inl[:LABEL_156[stor[28]]], inl[:LABEL_54] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[27] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::FUN_800deba0, var[64][stor[27]], stor[29], stor[30], stor[31], inl[:LABEL_156[stor[28]]], 0x0 ; scriptIndex, x, y, z, ticks, stepAccelerationY
add 0x2, stor[21] ; amount, operand
return
LABEL_54:
jmp_cmp !=, 0x163, inl[:LABEL_156[stor[28]]], inl[:LABEL_55] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call SMap::FUN_800e02c0, var[64][stor[29]], stor[31] ; scriptIndex, value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_105] ; operand, left, right, addr
incr stor[21] ; operand
return
LABEL_55:
jmp_cmp !=, 0x164, inl[:LABEL_156[stor[28]]], inl[:LABEL_56] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[27] ; source, dest
call SMap::scriptReadModelRotate, var[64][stor[27]], stor[29], stor[31], stor[30] ; scriptIndex, x, y, z
incr stor[28] ; operand
sub_rev inl[:LABEL_156[stor[28]]], stor[31] ; amount, operand
gosub inl[:LABEL_124] ; addr
incr stor[28] ; operand
call SMap::scriptRotateSobj, var[64][stor[27]], 0x0, stor[31], 0x0, inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z, frames
incr stor[21] ; operand
return
LABEL_56:
jmp_cmp !=, 0x165, inl[:LABEL_156[stor[28]]], inl[:LABEL_57] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptFacePoint, var[64][stor[29]], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z
incr stor[21] ; operand
return
LABEL_57:
jmp_cmp !=, 0x166, inl[:LABEL_156[stor[28]]], inl[:LABEL_58] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[27] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptRotateSobj, var[64][stor[27]], stor[29], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z, frames
add 0x2, stor[21] ; amount, operand
return
LABEL_58:
jmp_cmp !=, 0x167, inl[:LABEL_156[stor[28]]], inl[:LABEL_59] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
call SMap::scriptToggleAnimationDisabled, var[64][stor[29]], inl[:LABEL_156[stor[28]]] ; scriptIndex, disabled
incr stor[21] ; operand
return
LABEL_59:
jmp_cmp !=, 0x168, inl[:LABEL_156[stor[28]]], inl[:LABEL_60] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
call SMap::scriptLoadSobjModelAndAnimation, var[64][stor[29]], inl[:LABEL_156[stor[28]]] ; scriptIndex, objectIndex
incr stor[21] ; operand
return
LABEL_60:
jmp_cmp !=, 0x169, inl[:LABEL_156[stor[28]]], inl[:LABEL_61] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptSetModelRotate, var[64][stor[29]], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z
incr stor[21] ; operand
return
LABEL_61:
jmp_cmp !=, 0x16a, inl[:LABEL_156[stor[28]]], inl[:LABEL_62] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptScaleUniform, var[64][stor[31]], inl[:LABEL_156[stor[28]]] ; sobjIndex, scale
incr stor[21] ; operand
return
LABEL_62:
jmp_cmp !=, 0x16b, inl[:LABEL_156[stor[28]]], inl[:LABEL_63] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptSetModelPosition, var[64][stor[29]], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z
incr stor[21] ; operand
return
LABEL_63:
jmp_cmp !=, 0x190, inl[:LABEL_156[stor[28]]], inl[:LABEL_64] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[25] ; source, dest
gosub inl[:LABEL_117] ; addr
incr stor[21] ; operand
return
LABEL_64:
jmp_cmp !=, 0x191, inl[:LABEL_156[stor[28]]], inl[:LABEL_65] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[25] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[26] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[27] ; source, dest
gosub inl[:LABEL_120] ; addr
incr stor[21] ; operand
return
LABEL_65:
jmp_cmp !=, 0x1f4, inl[:LABEL_156[stor[28]]], inl[:LABEL_66] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
call Scus94491BpeSegment::scriptSetGlobalFlag2, stor[24], 0x1 ; flag, value
incr stor[21] ; operand
return
LABEL_66:
jmp_cmp !=, 0x1f5, inl[:LABEL_156[stor[28]]], inl[:LABEL_67] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[13], 0x1 ; flag, value
incr stor[21] ; operand
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSelfSetSobjFlag, 0x1, 0x1 ; bitIndex, value
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
return
LABEL_67:
jmp_cmp !=, 0x1f6, inl[:LABEL_156[stor[28]]], inl[:LABEL_68] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[13], 0x0 ; flag, value
mov 0x0, stor[stor[stor[0], 23], 9] ; source, dest
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call SMap::FUN_800df530, 0x0 ; value
call SMap::scriptSelfSetSobjFlag, 0x0, 0x1 ; bitIndex, value
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
incr stor[21] ; operand
return
LABEL_68:
jmp_cmp !=, 0x1f7, inl[:LABEL_156[stor[28]]], inl[:LABEL_70] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[25] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[26] ; source, dest
call SMap::scriptGetCameraOffset, stor[27], stor[31] ; x, y
sub stor[27], stor[24] ; amount, operand
sub stor[31], stor[25] ; amount, operand
shl 0x10, stor[24] ; shift, val
shl 0x10, stor[25] ; shift, val
shl 0x10, stor[27] ; shift, val
shl 0x10, stor[31] ; shift, val
div stor[26], stor[24] ; amount, operand
div stor[26], stor[25] ; amount, operand
LABEL_69:
add stor[24], stor[27] ; amount, operand
add stor[25], stor[31] ; amount, operand
mov stor[27], stor[29] ; source, dest
mov stor[31], stor[30] ; source, dest
shr 0x10, stor[29] ; shift, val
shr 0x10, stor[30] ; shift, val
call SMap::scriptSetModeParamForNextCallToScriptSetCameraOffsetOrHideSubmapForegroundObject, 0x2, 0x0, 0x0 ; mode, foregroundObjectIndex, out
call SMap::scriptSetCameraOffset, stor[29], stor[30] ; x, y
yield
decr stor[26] ; operand
jmp_cmp !=, 0x0, stor[26], inl[:LABEL_69] ; operand, left, right, addr
incr stor[21] ; operand
return
LABEL_70:
jmp_cmp !=, 0x1f8, inl[:LABEL_156[stor[28]]], inl[:LABEL_71] ; operand, left, right, addr
sub 0x5, stor[28] ; amount, operand
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
call SMap::scriptSelfFacePoint, stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; x, y, z
incr stor[21] ; operand
return
LABEL_71:
jmp_cmp !=, 0x1f9, inl[:LABEL_156[stor[28]]], inl[:LABEL_73] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
LABEL_72:
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[30], 0x0 ; flag, value
incr stor[30] ; operand
jmp_cmp <=, stor[30], stor[31], inl[:LABEL_72] ; operand, left, right, addr
incr stor[21] ; operand
return
LABEL_73:
jmp_cmp !=, 0x1fa, inl[:LABEL_156[stor[28]]], inl[:LABEL_75] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[25] ; source, dest
mov stor[24], stor[27] ; source, dest
mov var[64][stor[25]], stor[28] ; source, dest
call SMap::scriptReadModelPosition, stor[28], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
call SMap::scriptFacePoint, stor[0], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[27], stor[24] ; flag, value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_74] ; operand, left, right, addr
incr stor[21] ; operand
LABEL_74:
return
LABEL_75:
jmp_cmp !=, 0x1fb, inl[:LABEL_156[stor[28]]], inl[:LABEL_78] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[25] ; source, dest
mov stor[25], stor[27] ; source, dest
mov var[64][stor[24]], stor[28] ; source, dest
call SMap::scriptReadModelPosition, stor[28], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
sub stor[28], stor[24] ; amount, operand
sub stor[30], stor[26] ; amount, operand
atan2_12 stor[24], stor[26], stor[25] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
sub stor[29], stor[25] ; amount, operand
add 0x800, stor[25] ; amount, operand
jmp_cmp >=, stor[25], 0xfffff800, inl[:LABEL_76] ; operand, left, right, addr
add 0x1000, stor[25] ; amount, operand
jmp inl[:LABEL_77] ; addr
LABEL_76:
jmp_cmp <, stor[25], 0x800, inl[:LABEL_77] ; operand, left, right, addr
sub 0x1000, stor[25] ; amount, operand
LABEL_77:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[25], 0x0, stor[27] ; scriptIndex, x, y, z, frames
incr stor[21] ; operand
return
LABEL_78:
jmp_cmp !=, 0x1fc, inl[:LABEL_156[stor[28]]], inl[:LABEL_79] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::loadUninterpolatedSobjAnimation, stor[0], stor[29] ; sobjIndex, animIndex
incr stor[21] ; operand
return
LABEL_79:
jmp_cmp !=, 0x1fd, inl[:LABEL_156[stor[28]]], inl[:LABEL_81] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[27] ; source, dest
call SMap::scriptReadModelPosition, stor[0], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
sub stor[29], stor[24] ; amount, operand
sub stor[30], stor[25] ; amount, operand
sub stor[31], stor[26] ; amount, operand
mul stor[24], stor[24] ; amount, operand
mul stor[25], stor[25] ; amount, operand
mul stor[26], stor[26] ; amount, operand
add stor[26], stor[24] ; amount, operand
add stor[25], stor[24] ; amount, operand
sqrt stor[24], stor[24] ; val, dest
div stor[27], stor[24] ; amount, operand
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_80] ; operand, left, right, addr
call SMap::scriptSobjMoveToPosition, stor[0], stor[29], stor[30], stor[31], stor[24] ; scriptIndex, x, y, z, movementTicks
LABEL_80:
incr stor[21] ; operand
return
LABEL_81:
jmp_cmp !=, 0x1fe, inl[:LABEL_156[stor[28]]], inl[:LABEL_82] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
mov var[64][stor[29]], stor[29] ; source, dest
call SMap::scriptReadModelPosition, stor[29], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
call SMap::scriptSobjMoveToPosition, stor[0], stor[24], stor[25], stor[26], stor[30] ; scriptIndex, x, y, z, movementTicks
call SMap::scriptFacePoint, stor[0], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
incr stor[21] ; operand
return
LABEL_82:
jmp_cmp !=, 0x1ff, inl[:LABEL_156[stor[28]]], inl[:LABEL_83] ; operand, left, right, addr
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[30], stor[31] ; scriptIndex, x, y, z
call SMap::scriptSobjMoveToPosition, stor[0], stor[29], stor[30], stor[31], 0x1 ; scriptIndex, x, y, z, movementTicks
incr stor[21] ; operand
return
LABEL_83:
jmp_cmp !=, 0x200, inl[:LABEL_156[stor[28]]], inl[:LABEL_85] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[24], stor[24] ; flag, value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_84] ; operand, left, right, addr
incr stor[21] ; operand
LABEL_84:
return
LABEL_85:
jmp_cmp !=, 0x201, inl[:LABEL_156[stor[28]]], inl[:LABEL_86] ; operand, left, right, addr
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
incr stor[21] ; operand
return
LABEL_86:
jmp_cmp !=, 0x202, inl[:LABEL_156[stor[28]]], inl[:LABEL_90] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[25] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
mov 0x2, stor[26] ; source, dest
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_87] ; operand, left, right, addr
mov 0x4, stor[26] ; source, dest
LABEL_87:
call Scus94491BpeSegment::scriptStartFadeEffect, stor[26], stor[25] ; type, frames
jmp_cmp ==, 0x0, stor[29], inl[:LABEL_89] ; operand, left, right, addr
LABEL_88:
yield
jmp_cmp !=, var[10], 0x0, inl[:LABEL_88] ; operand, left, right, addr
LABEL_89:
incr stor[21] ; operand
return
LABEL_90:
jmp_cmp !=, 0x203, inl[:LABEL_156[stor[28]]], inl[:LABEL_94] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[25] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
mov 0x1, stor[26] ; source, dest
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_91] ; operand, left, right, addr
mov 0x3, stor[26] ; source, dest
LABEL_91:
call Scus94491BpeSegment::scriptStartFadeEffect, stor[26], stor[25] ; type, frames
jmp_cmp ==, 0x0, stor[29], inl[:LABEL_93] ; operand, left, right, addr
LABEL_92:
yield
jmp_cmp !=, var[10], 0xff, inl[:LABEL_92] ; operand, left, right, addr
LABEL_93:
incr stor[21] ; operand
return
LABEL_94:
jmp_cmp !=, 0x204, inl[:LABEL_156[stor[28]]], inl[:LABEL_95] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[25] ; source, dest
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xff, 0x0 ; flag, value
call SMap::scriptMapTransition, stor[24], stor[25] ; submapCut, submapScene
rewind
data 0x11b
data 0x2000015
data 0x49
LABEL_95:
jmp_cmp !=, 0x205, inl[:LABEL_156[stor[28]]], inl[:LABEL_97] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[24] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[25] ; source, dest
call SMap::scriptDisableShadow, stor[0] ; sobjIndex
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[30], stor[31] ; scriptIndex, x, y, z
call SMap::FUN_800df904, stor[29], stor[30], stor[31], stor[24], 0x0 ; x, y, z, i_144, ui_18c
wait stor[24] ; frames
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_96] ; operand, left, right, addr
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call SMap::FUN_800df530, 0x1 ; value
LABEL_96:
incr stor[21] ; operand
return
LABEL_97:
jmp_cmp !=, 0x206, inl[:LABEL_156[stor[28]]], inl[:LABEL_98] ; operand, left, right, addr
call SMap::scriptReadModelRotate, stor[0], stor[29], stor[30], stor[24] ; scriptIndex, x, y, z
incr stor[28] ; operand
sub_rev inl[:LABEL_156[stor[28]]], stor[29] ; amount, operand
mov stor[29], stor[31] ; source, dest
gosub inl[:LABEL_124] ; addr
mov stor[31], stor[29] ; source, dest
incr stor[28] ; operand
sub_rev inl[:LABEL_156[stor[28]]], stor[30] ; amount, operand
mov stor[30], stor[31] ; source, dest
gosub inl[:LABEL_124] ; addr
mov stor[31], stor[30] ; source, dest
incr stor[28] ; operand
mov stor[24], stor[31] ; source, dest
sub_rev inl[:LABEL_156[stor[28]]], stor[31] ; amount, operand
gosub inl[:LABEL_124] ; addr
incr stor[28] ; operand
call SMap::scriptRotateSobj, stor[0], stor[29], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z, frames
incr stor[21] ; operand
return
LABEL_98:
jmp_cmp !=, 0x207, inl[:LABEL_156[stor[28]]], inl[:LABEL_99] ; operand, left, right, addr
incr stor[21] ; operand
gosub inl[:LABEL_0] ; addr
gosub inl[:LABEL_0] ; addr
return
LABEL_99:
jmp_cmp !=, 0x209, inl[:LABEL_156[stor[28]]], inl[:LABEL_101] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[29], stor[24] ; flag, value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_100] ; operand, left, right, addr
mov stor[30], stor[21] ; source, dest
mov 0x333c, stor[24] ; source, dest
sub stor[24], stor[21] ; amount, operand
div 0x14, stor[21] ; amount, operand
decr stor[21] ; operand
LABEL_100:
incr stor[21] ; operand
return
LABEL_101:
jmp_cmp !=, 0x20a, inl[:LABEL_156[stor[28]]], inl[:LABEL_102] ; operand, left, right, addr
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[29] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[30] ; source, dest
incr stor[28] ; operand
mov inl[:LABEL_156[stor[28]]], stor[31] ; source, dest
incr stor[28] ; operand
mov var[64][stor[29]], stor[29] ; source, dest
call SMap::scriptSetModelRotate, stor[29], stor[30], stor[31], inl[:LABEL_156[stor[28]]] ; scriptIndex, x, y, z
incr stor[21] ; operand
return
LABEL_102:
jmp_cmp !=, 0x20b, inl[:LABEL_156[stor[28]]], inl[:LABEL_103] ; operand, left, right, addr
call SMap::scriptRestoreCharDataVitals ; index
call Scus94491BpeSegment::scriptWaitForFilesToLoad ; index
incr stor[21] ; operand
return
LABEL_103:
jmp_cmp !=, 0x3de, inl[:LABEL_156[stor[28]]], inl[:LABEL_104] ; operand, left, right, addr
return
LABEL_104:
return
LABEL_105:
return

; SUBROUTINE
LABEL_106:
jmp_cmp !=, 0x0, stor[29], inl[:LABEL_109] ; operand, left, right, addr
mov var[64][stor[28]], stor[28] ; source, dest
memcpy 0x2, inl[:LABEL_158[:LABEL_158[stor[30]]]], stor[26] ; size, src, dest
jmp_cmp <=, stor[26], 0x24, inl[:LABEL_107] ; operand, left, right, addr
mov 0x24, stor[26] ; source, dest
LABEL_107:
jmp_cmp <=, stor[27], 0x4, inl[:LABEL_108] ; operand, left, right, addr
mov 0x4, stor[27] ; source, dest
LABEL_108:
call SMap::scriptAddSobjTextbox, stor[31], stor[28], 0x121, stor[26], stor[27], inl[:LABEL_157[:LABEL_157[stor[30]]]] ; index, submapObjectIndex, packedData, width, height, text
return
LABEL_109:
jmp_cmp !=, 0x1, stor[29], inl[:LABEL_112] ; operand, left, right, addr

; SUBROUTINE
LABEL_110:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x5, stor[29] ; index, initialized
jmp_cmp !=, 0x0, stor[29], inl[:LABEL_111] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x6 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x5, 0x1011, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_157[:LABEL_157[stor[30]]]] ; index, packedData, x, y, width, height, text
LABEL_111:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x400, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_157[:LABEL_157[stor[30]]]] ; index, packedData, x, y, width, height, text
return
LABEL_112:
jmp_cmp !=, 0x2, stor[29], inl[:LABEL_115] ; operand, left, right, addr

; SUBROUTINE
LABEL_113:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x6, stor[29] ; index, initialized
jmp_cmp !=, 0x0, stor[29], inl[:LABEL_114] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x5 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x6, 0x1011, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_157[:LABEL_157[stor[30]]]] ; index, packedData, x, y, width, height, text
LABEL_114:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x400, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_157[:LABEL_157[stor[30]]]] ; index, packedData, x, y, width, height, text
return
LABEL_115:
mov var[64][stor[28]], stor[28] ; source, dest
call SMap::FUN_800df9a8, stor[28], stor[27], stor[29], stor[27], stor[27] ; scriptIndex, x0, y0, x1, y1
jmp_cmp >, 0x82, stor[29], inl[:LABEL_116] ; operand, left, right, addr
gosub inl[:LABEL_110] ; addr
return
LABEL_116:
gosub inl[:LABEL_113] ; addr
return

; SUBROUTINE
LABEL_117:
mov stor[25], stor[27] ; source, dest
mov var[64][stor[24]], stor[28] ; source, dest
call SMap::scriptReadModelPosition, stor[28], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
sub stor[28], stor[24] ; amount, operand
sub stor[30], stor[26] ; amount, operand
atan2_12 stor[24], stor[26], stor[25] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
sub stor[29], stor[25] ; amount, operand
add 0x800, stor[25] ; amount, operand
jmp_cmp >=, stor[25], 0xfffff800, inl[:LABEL_118] ; operand, left, right, addr
add 0x1000, stor[25] ; amount, operand
jmp inl[:LABEL_119] ; addr
LABEL_118:
jmp_cmp <, stor[25], 0x800, inl[:LABEL_119] ; operand, left, right, addr
sub 0x1000, stor[25] ; amount, operand
LABEL_119:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[25], 0x0, stor[27] ; scriptIndex, x, y, z, frames
wait stor[27] ; frames
return

; SUBROUTINE
LABEL_120:
call SMap::scriptReadModelPosition, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
sub stor[28], stor[24] ; amount, operand
sub stor[30], stor[26] ; amount, operand
atan2_12 stor[24], stor[26], stor[25] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
sub stor[29], stor[25] ; amount, operand
add 0x800, stor[25] ; amount, operand
jmp_cmp >=, stor[25], 0xfffff800, inl[:LABEL_121] ; operand, left, right, addr
add 0x1000, stor[25] ; amount, operand
jmp inl[:LABEL_122] ; addr
LABEL_121:
jmp_cmp <, stor[25], 0x800, inl[:LABEL_122] ; operand, left, right, addr
sub 0x1000, stor[25] ; amount, operand
LABEL_122:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[25], 0x0, stor[27] ; scriptIndex, x, y, z, frames
wait stor[27] ; frames
return
data 0x208
data 0x0
data 0x2000018
data 0xc30238
data 0x2000018
data 0x2000019
data 0x30242
data 0x2000019
data 0x900000b
data 0x11b
data 0x2000018
data 0x341
data 0x2000018
data 0x4
data 0x900fff8
data 0x140
data 0x9000009
data 0x0
data 0xc30238
data 0x2000018
data 0x2000019
data 0x30242
data 0x2000019
data 0x900fffc
data 0x49
data 0x208
data 0x7001940
data 0x2000019
data 0x7d0538
data 0x2000019
data 0x200001b
data 0x200001b
data 0x200001b
data 0x200001c
data 0x40341
data 0x82
data 0x200001c
data 0x9000027
data 0xc30238
data 0x5
data 0x2000019
data 0x30242
data 0x2000019
data 0x9000010
data 0xc90138
data 0x6
data 0xc80738
data 0x5
data 0x1000000
data 0x1011
data 0x1000000
data 0xb6
data 0x1000000
data 0x38
data 0x24
data 0x4
data 0xb18047f
data 0xc80738
data 0x4
data 0x1000000
data 0x400
data 0x1000000
data 0xb6
data 0x1000000
data 0x38
data 0x24
data 0x4
data 0xb180474
data 0x208
data 0x4
data 0x2000018
data 0x140
data 0x9000023
data 0xc30238
data 0x6
data 0x2000019
data 0x30242
data 0x2000019
data 0x9000010
data 0xc90138
data 0x5
data 0xc80738
data 0x6
data 0x1000000
data 0x1011
data 0x1000000
data 0xb6
data 0x1000000
data 0xb8
data 0x24
data 0x4
data 0xb18045c
data 0xc80738
data 0x4
data 0x1000000
data 0x400
data 0x1000000
data 0xb6
data 0x1000000
data 0xb8
data 0x24
data 0x4
data 0xb180451
data 0x208
data 0x4
data 0x2000018
data 0x49

; SUBROUTINE
LABEL_123:
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x5 ; index
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x6 ; index
return

; SUBROUTINE
LABEL_124:
jmp_cmp >=, 0x800, stor[31], inl[:LABEL_125] ; operand, left, right, addr
sub 0x1000, stor[31] ; amount, operand
jmp inl[:LABEL_124] ; addr
LABEL_125:
jmp_cmp <=, 0xfffff800, stor[31], inl[:LABEL_126] ; operand, left, right, addr
add 0x1000, stor[31] ; amount, operand
jmp inl[:LABEL_125] ; addr
LABEL_126:
return
LABEL_127:
data 0x0
data 0x7
data 0xa
data 0xe
data 0x13
data 0x19
data 0x20
data 0x28
data 0x31
data 0x3b
data 0x208
data 0x3c
data 0x200001d
data 0x49

; SUBROUTINE
LABEL_128:
jmp_cmp ==, 0x0, stor[29], inl[:LABEL_131] ; operand, left, right, addr
decr stor[29] ; operand
call SMap::scriptSelfSetSobjHidden, 0x0 ; value
mov 0x9, stor[30] ; source, dest
LABEL_129:
jmp_cmp ==, stor[29], inl[:LABEL_127[stor[30]]], inl[:LABEL_130] ; operand, left, right, addr
while stor[30], inl[:LABEL_129] ; counter, addr
jmp_cmp <, 0x11, stor[29], inl[:LABEL_131] ; operand, left, right, addr
mov 0x1, stor[30] ; source, dest
and stor[29], stor[30] ; and, operand
jmp_cmp !=, 0x0, stor[30], inl[:LABEL_131] ; operand, left, right, addr
LABEL_130:
call SMap::scriptSelfSetSobjHidden, 0x1 ; value
LABEL_131:
return

; SUBROUTINE
LABEL_134:
call 70, 0x0, 0x23;
call 70, 0x1, 0x0;
call 70, 0x2, 0x0;
call 70, 0x3, 0x0;
call 70, 0x4, 0x0;
call 70, 0x5, 0x0;
call 70, 0x6, 0x0;
call 70, 0x7, 0x0;
call 70, 0x8, 0x0;
call 72, 0x0;
return
ENTRYPOINT_0:
ENTRYPOINT_1:
ENTRYPOINT_2:
ENTRYPOINT_3:
ENTRYPOINT_4:
ENTRYPOINT_5:
ENTRYPOINT_6:
ENTRYPOINT_7:
ENTRYPOINT_8:
ENTRYPOINT_9:
ENTRYPOINT_10:
ENTRYPOINT_11:
ENTRYPOINT_12:
ENTRYPOINT_13:
ENTRYPOINT_14:
ENTRYPOINT_15:
mov 0x0, stor[24] ; source, dest
gosub inl[:LABEL_134] ; addr
call Scus94491BpeSegment::scriptStopSoundsAndSequences ; index
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call SMap::scriptSelfSetSobjHidden, 0x1 ; value
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptGetSetEncountersDisabled, 0x1, 0x1, stor[31] ; set, apply, value
mov 0xffffff6a, stor[13] ; source, dest
mov 0xffffffa6, stor[14] ; source, dest
call SMap::scriptSetEnvForegroundPosition, stor[13], stor[14], 0x0 ; x, y, overlayIndex
call SMap::scriptSetEnvForegroundPosition, stor[13], stor[14], 0x1 ; x, y, overlayIndex
call SMap::scriptSetEnvForegroundPosition, stor[13], stor[14], 0x2 ; x, y, overlayIndex
call SMap::scriptSetEnvForegroundPosition, stor[13], stor[14], 0x3 ; x, y, overlayIndex
mov 0x0, stor[15] ; source, dest
call SMap::scriptSetModelPosition, stor[0], 0x1a0, 0xffffffe0, 0xfffffd50 ; scriptIndex, x, y, z
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x648, 0x0 ; scriptIndex, x, y, z
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
mov 0x0, stor[22] ; source, dest
mov 0x0, stor[21] ; source, dest
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x2, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x6, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
LABEL_150:
gosub_table stor[22], inl[:LABEL_151] ; index, table
yield
jmp inl[:LABEL_150] ; addr
data 0x10
data 0x28
data 0xffffff54
data 0x14
data 0x1
data 0x20
data 0x5
data 0x1e
data 0x28
data 0xffffff54
data 0x14
data 0x1
data 0x10
data 0x2
data 0x42
data 0x28
data 0xffffff47
data 0x13
data 0x1
data 0x20
data 0x5
data 0xffffffff

; SUBROUTINE TABLE
LABEL_151:
rel :JMP_3184_0
rel :JMP_3184_1

; SUBROUTINE
JMP_3184_0:
incr stor[15] ; operand
mov stor[15], stor[31] ; source, dest
mod 0x4, stor[31] ; amount, operand
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_152] ; operand, left, right, addr
incr stor[13] ; operand
jmp_cmp ==, 0x2, stor[31], inl[:LABEL_152] ; operand, left, right, addr
incr stor[14] ; operand
LABEL_152:
jmp_cmp >, 0xc8, stor[15], inl[:LABEL_153] ; operand, left, right, addr
incr stor[22] ; operand
LABEL_153:
call SMap::scriptSetEnvForegroundPosition, stor[13], stor[14], 0x0 ; x, y, overlayIndex
call SMap::scriptSetEnvForegroundPosition, stor[13], stor[14], 0x1 ; x, y, overlayIndex
call SMap::scriptSetEnvForegroundPosition, stor[13], stor[14], 0x2 ; x, y, overlayIndex
call SMap::scriptSetEnvForegroundPosition, stor[13], stor[14], 0x3 ; x, y, overlayIndex
gosub inl[:LABEL_0] ; addr
return

; SUBROUTINE
JMP_3184_1:
gosub inl[:LABEL_0] ; addr
mov stor[21], stor[28] ; source, dest
mul 0x5, stor[28] ; amount, operand
jmp_cmp !=, 0x9, inl[:LABEL_156[stor[28]]], inl[:LABEL_154] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xf5, 0x1 ; flag, value
LABEL_154:
jmp_cmp !=, 0x3e7, inl[:LABEL_156[stor[28]]], inl[:LABEL_155] ; operand, left, right, addr
call SMap::scriptMapTransition, 0xa, 0x2 ; submapCut, submapScene
LABEL_155:
return
data 0xec0638
data 0x1000000
data 0x8
data 0x1000000
data 0x2
data 0x1000000
data 0x0
data 0x1000000
data 0x0
data 0x1000000
data 0x0
data 0x1000000
data 0x0
data 0xec0638
data 0x1000000
data 0x8
data 0x1000000
data 0x6
data 0x1000000
data 0x0
data 0x1000000
data 0x0
data 0x1000000
data 0x0
data 0x1000000
data 0x0
data 0x49
LABEL_156:
data 0x12f
data 0x87
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x130
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x132
data 0x0
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x3
data 0x2
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x29
data 0x3
data 0x0
data 0x0
data 0x0
data 0x29
data 0x3
data 0x0
data 0x0
data 0x0
data 0x5
data 0xc8
data 0xffffffe0
data 0xfffffe08
data 0x3f
data 0x12f
data 0x3c
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x130
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x3
data 0x0
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x4
data 0x4
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x12f
data 0x14
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x130
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x130
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x3
data 0x2
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x5
data 0xb0
data 0xffffffe2
data 0xfffffe2c
data 0x3
data 0x12f
data 0x3
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x130
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x3
data 0x0
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x3
data 0x5
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x4
data 0x5
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x1
data 0x1
data 0x0
data 0x0
data 0x0
data 0x2
data 0x0
data 0xffffffff
data 0xffffffff
data 0x0
data 0x12f
data 0x14
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x130
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x3
data 0x6
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x4
data 0x5
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x1
data 0x1
data 0x1
data 0x0
data 0x0
data 0x2
data 0x0
data 0xffffffff
data 0xffffffff
data 0x0
data 0x12f
data 0x4
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x130
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x5
data 0x80
data 0xc
data 0xfffffe98
data 0x12
data 0x9
data 0x80
data 0xc
data 0xfffffe98
data 0xffffffff
data 0x3
data 0x2
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x12f
data 0xe
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x130
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x12e
data 0x20
data 0xc4
data 0xffffff00
data 0x28
data 0x7
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0x29
data 0x3
data 0x0
data 0x0
data 0x0
data 0x29
data 0x3
data 0x0
data 0x0
data 0x0
data 0x3e7
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
LABEL_157:
rel :PTR_3670_0
rel :PTR_3670_1
LABEL_158:
rel :PTR_3678_0
rel :PTR_3678_1
PTR_3670_0:
data str[<speed=0>Dart<line>Oh no!! My god!!]
PTR_3678_0:
data 0x10
data 0x2
PTR_3670_1:
data str[<speed=0>Dart<line>Where is everybody!?]
PTR_3678_1:
data 0x14
data 0x2
