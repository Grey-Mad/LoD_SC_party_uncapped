entrypoint :ENTRYPOINT_0
entrypoint :ENTRYPOINT_1
entrypoint :ENTRYPOINT_2
entrypoint :ENTRYPOINT_3
entrypoint :ENTRYPOINT_4
entrypoint :ENTRYPOINT_5
entrypoint :ENTRYPOINT_6
entrypoint :ENTRYPOINT_7
entrypoint :ENTRYPOINT_8
entrypoint :ENTRYPOINT_9
entrypoint :ENTRYPOINT_10
entrypoint :ENTRYPOINT_11
entrypoint :ENTRYPOINT_12
entrypoint :ENTRYPOINT_13
entrypoint :ENTRYPOINT_14
entrypoint :ENTRYPOINT_15

; SUBROUTINE
LABEL_0:
jmp_cmp !=, 0xffffffff, var[73][31], inl[:LABEL_1] ; operand, left, right, addr
mov 0x0, var[73][31] ; source, dest
jmp inl[:LABEL_3] ; addr
LABEL_1:
mov var[3], stor[24] ; source, dest
and 0xf000, stor[24] ; and, operand
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_2] ; operand, left, right, addr
mov 0x0, var[73][31] ; source, dest
jmp inl[:LABEL_3] ; addr
LABEL_2:
incr var[73][31] ; operand
jmp_cmp >=, 0x12c, var[73][31], inl[:LABEL_3] ; operand, left, right, addr
call SMap::scriptSelfGetSobjAnimation, stor[24] ; animIndex
jmp_cmp ==, 0x1f, stor[24], inl[:LABEL_10] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, 0x1f ; animIndex
jmp inl[:LABEL_10] ; addr
LABEL_3:
mov 0x0, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
jmp_cmp ==, 0x0, var[27], inl[:LABEL_4] ; operand, left, right, addr
jmp_cmp ==, 0x0, var[31], inl[:LABEL_4] ; operand, left, right, addr
mov var[3], stor[29] ; source, dest
and 0xf000, stor[29] ; and, operand
jmp_cmp ==, 0x0, stor[29], inl[:LABEL_7] ; operand, left, right, addr
mov 0x4, stor[25] ; source, dest
mov 0x1, stor[27] ; source, dest
mov var[28], stor[28] ; source, dest
jmp_cmp <, var[31], 0x7f, inl[:LABEL_7] ; operand, left, right, addr
mov 0x2, stor[27] ; source, dest
mov 0xc, stor[25] ; source, dest
jmp inl[:LABEL_7] ; addr
LABEL_4:
mov 0x0, stor[28] ; source, dest
mov var[3], stor[29] ; source, dest
and 0xf000, stor[29] ; and, operand
jmp_cmp ==, 0x0, stor[29], inl[:LABEL_7] ; operand, left, right, addr
LABEL_5:
mov inl[:LABEL_11[stor[28]]], stor[30] ; source, dest
jmp_cmp ==, stor[30], 0xffffffff, inl[:LABEL_7] ; operand, left, right, addr
jmp_cmp ==, stor[29], stor[30], inl[:LABEL_6] ; operand, left, right, addr
incr stor[28] ; operand
jmp inl[:LABEL_5] ; addr
LABEL_6:
mul 0x200, stor[28] ; amount, operand
mov 0x4, stor[25] ; source, dest
mov 0x1, stor[27] ; source, dest
jmp_cmp !&, 0x40, var[3], inl[:LABEL_7] ; operand, left, right, addr
mov 0x2, stor[27] ; source, dest
mov 0xc, stor[25] ; source, dest
LABEL_7:
jmp_cmp ==, 0x0, stor[27], inl[:LABEL_9] ; operand, left, right, addr
mov stor[28], stor[29] ; source, dest
sin_12 stor[28], stor[28] ; angle, dest
cos_12 stor[29], stor[29] ; angle, dest
mov stor[25], stor[26] ; source, dest
shl 0xc, stor[25] ; shift, val
shl 0xc, stor[26] ; shift, val
mul_12 stor[28], stor[25] ; amount, operand
mul_12 stor[29], stor[26] ; amount, operand
add 0x800, stor[25] ; amount, operand
add 0x800, stor[26] ; amount, operand
shr 0xc, stor[25] ; shift, val
shr 0xc, stor[26] ; shift, val
call SMap::scriptCheckPlayerCollision, stor[25], 0x0, stor[26], stor[28] ; deltaX, deltaY, deltaZ, collidee
call SMap::scriptGetPlayerMovement, stor[29], stor[30], stor[31] ; x, y, z
call SMap::scriptSelfFacePoint, stor[29], stor[30], stor[31] ; x, y, z
jmp_cmp ==, stor[28], 0xffffffff, inl[:LABEL_8] ; operand, left, right, addr
mov 0x0, stor[27] ; source, dest
jmp inl[:LABEL_9] ; addr
LABEL_8:
call SMap::scriptMovePlayer, stor[25], 0x0, stor[26] ; x, y, z
LABEL_9:
call SMap::scriptSelfGetSobjAnimation, stor[28] ; animIndex
jmp_cmp ==, stor[28], stor[27], inl[:LABEL_10] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, stor[27] ; animIndex
LABEL_10:
return
LABEL_11:
data 0x1000
data 0x3000
data 0x2000
data 0x6000
data 0x4000
data 0xc000
data 0x8000
data 0x9000
data 0xffffffff

; SUBROUTINE
LABEL_12:
yield
call SMap::FUN_800df620, stor[24] ; value
jmp_cmp !=, 0x0, stor[24], inl[:LABEL_12] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_13:
yield
call SMap::scriptSelfIsAnimationFinished, stor[24] ; value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_13] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_14:
yield
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[24], stor[25] ; flag, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_14] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_15:
call SMap::scriptReadModelPosition, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
sub stor[28], stor[24] ; amount, operand
sub stor[30], stor[26] ; amount, operand
atan2_12 stor[24], stor[26], stor[25] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
sub stor[29], stor[25] ; amount, operand
add 0x800, stor[25] ; amount, operand
jmp_cmp >=, stor[25], 0xfffff800, inl[:LABEL_16] ; operand, left, right, addr
add 0x1000, stor[25] ; amount, operand
jmp inl[:LABEL_17] ; addr
LABEL_16:
jmp_cmp <, stor[25], 0x800, inl[:LABEL_17] ; operand, left, right, addr
sub 0x1000, stor[25] ; amount, operand
LABEL_17:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[25], 0x0, stor[27] ; scriptIndex, x, y, z, frames
wait stor[27] ; frames
return

; SUBROUTINE
LABEL_18:
call SMap::scriptReadModelPosition, stor[0], stor[8], stor[9], stor[10] ; scriptIndex, x, y, z
call SMap::scriptSelfMoveToPosition, stor[8], stor[9], stor[10], 0x1 ; x, y, z, movementTicks
yield
mov 0x1, stor[25] ; source, dest
mov inl[:LABEL_138], stor[26] ; source, dest
shl 0x1, stor[26] ; shift, val
incr stor[26] ; operand
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
LABEL_19:
jmp_cmp ==, stor[24], inl[:LABEL_138[stor[25]]], inl[:LABEL_20] ; operand, left, right, addr
add 0x2, stor[25] ; amount, operand
jmp_cmp <, stor[25], stor[26], inl[:LABEL_19] ; operand, left, right, addr
jmp inl[:LABEL_21] ; addr
LABEL_20:
incr stor[25] ; operand
mov inl[:LABEL_138[stor[25]]], stor[25] ; source, dest
call SMap::scriptGetCollisionPrimitivePos, stor[25], stor[8], stor[9], stor[10] ; collisionPrimitiveIndex, x, y, z
call SMap::scriptSelfFacePoint, stor[8], stor[9], stor[10] ; x, y, z
LABEL_21:
return

; SUBROUTINE
LABEL_22:
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[24], 0x0 ; flag, value
incr stor[24] ; operand
jmp_cmp <=, stor[24], stor[25], inl[:LABEL_22] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_23:
call Scus94491BpeSegment_8002::scriptGetFreeTextboxIndex, stor[26] ; textboxIndex
jmp_cmp ==, 0xffffffff, stor[26], inl[:LABEL_26] ; operand, left, right, addr
mov var[64][stor[25]], stor[25] ; source, dest
memcpy 0x2, inl[:LABEL_145[:LABEL_145[stor[24]]]], stor[27] ; size, src, dest
jmp_cmp <=, stor[27], 0x24, inl[:LABEL_24] ; operand, left, right, addr
mov 0x24, stor[27] ; source, dest
LABEL_24:
jmp_cmp <=, stor[28], 0x4, inl[:LABEL_25] ; operand, left, right, addr
mov 0x4, stor[28] ; source, dest
LABEL_25:
call SMap::scriptAddSobjTextbox, stor[26], stor[25], 0x121, stor[27], stor[28], inl[:LABEL_144[:LABEL_144[stor[24]]]] ; index, submapObjectIndex, packedData, width, height, text
LABEL_26:
mov stor[26], stor[24] ; source, dest
return

; SUBROUTINE
LABEL_27:
mov 0x0, stor[24] ; source, dest
LABEL_28:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[24], stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_29] ; operand, left, right, addr
incr stor[24] ; operand
jmp_cmp <=, stor[24], 0x4, inl[:LABEL_28] ; operand, left, right, addr
jmp inl[:LABEL_30] ; addr
LABEL_29:
yield
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[24], stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_29] ; operand, left, right, addr
LABEL_30:
return
data 0x208
data 0x7001940
data 0x2000019
data 0x7d0538
data 0x2000019
data 0x200001b
data 0x200001b
data 0x200001b
data 0x200001c
data 0x40341
data 0x82
data 0x200001c
data 0x9000027
data 0xc30238
data 0x5
data 0x2000019
data 0x30242
data 0x2000019
data 0x9000010
data 0xc90138
data 0x6
data 0xc80738
data 0x5
data 0x1000000
data 0x1011
data 0x1000000
data 0xb6
data 0x1000000
data 0x38
data 0x24
data 0x4
data 0xb180f87
data 0xc80738
data 0x4
data 0x1000000
data 0x400
data 0x1000000
data 0xb6
data 0x1000000
data 0x38
data 0x24
data 0x4
data 0xb180f7c
data 0x208
data 0x4
data 0x2000018
data 0x140
data 0x9000023

; SUBROUTINE
LABEL_31:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x6, stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_32] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x5 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x6, 0x1011, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_144[:LABEL_144[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_32:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x400, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_144[:LABEL_144[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
return

; SUBROUTINE
LABEL_33:
call SMap::scriptSelfSetSobjFlag, 0x15, 0x1 ; bitIndex, value
call SMap::scriptSelfSetSobjFlag, 0x18, 0x1 ; bitIndex, value
call SMap::scriptSetSobjCollision2, stor[0], 0x14, 0x28, 0xa ; sobjIndex, horizontalSize, verticalSize, reach
call SMap::scriptSetSobjPlayerCollisionMetrics, stor[0], 0xa, 0x28, 0xa ; sobjIndex, horizontalSize, verticalSize, reach
return

; SUBROUTINE
LABEL_34:
yield
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[24], stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_34] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_35:
mov stor[24], stor[27] ; source, dest
mov var[64][stor[25]], stor[28] ; source, dest
LABEL_36:
yield
call SMap::scriptReadModelPosition, stor[28], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
call SMap::scriptFacePoint, stor[0], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[27], stor[24] ; flag, value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_36] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_37:
call SMap::scriptReadModelRotate, stor[0], stor[29], stor[31], stor[30] ; scriptIndex, x, y, z
jmp_cmp ==, stor[31], stor[24], inl[:LABEL_41] ; operand, left, right, addr
and 0xfff, stor[31] ; and, operand
sub_rev stor[24], stor[31] ; amount, operand
LABEL_38:
jmp_cmp >=, 0x800, stor[31], inl[:LABEL_39] ; operand, left, right, addr
sub 0x1000, stor[31] ; amount, operand
jmp inl[:LABEL_38] ; addr
LABEL_39:
jmp_cmp <=, 0xfffff800, stor[31], inl[:LABEL_40] ; operand, left, right, addr
add 0x1000, stor[31] ; amount, operand
jmp inl[:LABEL_39] ; addr
LABEL_40:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[31], 0x0, stor[25] ; scriptIndex, x, y, z, frames
LABEL_41:
return

; SUBROUTINE
LABEL_42:
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_44] ; operand, left, right, addr
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[30], stor[31] ; scriptIndex, x, y, z
jmp_cmp !=, stor[29], stor[8], inl[:LABEL_43] ; operand, left, right, addr
jmp_cmp !=, stor[30], stor[9], inl[:LABEL_43] ; operand, left, right, addr
jmp_cmp !=, stor[31], stor[10], inl[:LABEL_43] ; operand, left, right, addr
jmp inl[:LABEL_44] ; addr
LABEL_43:
sub stor[8], stor[29] ; amount, operand
sub stor[9], stor[30] ; amount, operand
sub stor[10], stor[31] ; amount, operand
mul stor[29], stor[29] ; amount, operand
mul stor[30], stor[30] ; amount, operand
mul stor[31], stor[31] ; amount, operand
add stor[29], stor[30] ; amount, operand
add stor[30], stor[31] ; amount, operand
sqrt stor[31], stor[31] ; val, dest
div stor[24], stor[31] ; amount, operand
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_44] ; operand, left, right, addr
call SMap::scriptSobjMoveToPosition, stor[0], stor[8], stor[9], stor[10], stor[31] ; scriptIndex, x, y, z, movementTicks
LABEL_44:
return

; SUBROUTINE
LABEL_45:
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[24], 0x1 ; flag, value
return

; SUBROUTINE
LABEL_46:
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_50] ; operand, left, right, addr
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[30], stor[31] ; scriptIndex, x, y, z
jmp_cmp !=, stor[29], stor[8], inl[:LABEL_47] ; operand, left, right, addr
jmp_cmp !=, stor[30], stor[9], inl[:LABEL_47] ; operand, left, right, addr
jmp_cmp !=, stor[31], stor[10], inl[:LABEL_47] ; operand, left, right, addr
jmp inl[:LABEL_50] ; addr
LABEL_47:
sub stor[8], stor[29] ; amount, operand
sub stor[9], stor[30] ; amount, operand
sub stor[10], stor[31] ; amount, operand
mul stor[29], stor[29] ; amount, operand
mul stor[30], stor[30] ; amount, operand
mul stor[31], stor[31] ; amount, operand
add stor[29], stor[30] ; amount, operand
add stor[30], stor[31] ; amount, operand
sqrt stor[31], stor[31] ; val, dest
div stor[24], stor[31] ; amount, operand
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_50] ; operand, left, right, addr
call SMap::scriptSobjMoveToPosition, stor[0], stor[8], stor[9], stor[10], stor[31] ; scriptIndex, x, y, z, movementTicks
call SMap::scriptReadModelPosition, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
sub stor[28], stor[8] ; amount, operand
sub stor[30], stor[10] ; amount, operand
atan2_12 stor[8], stor[10], stor[25] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[29], stor[30] ; scriptIndex, x, y, z
and 0xfff, stor[29] ; and, operand
and 0xfff, stor[25] ; and, operand
sub stor[29], stor[25] ; amount, operand
add 0x800, stor[25] ; amount, operand
jmp_cmp >=, stor[25], 0xfffff800, inl[:LABEL_48] ; operand, left, right, addr
add 0x1000, stor[25] ; amount, operand
jmp inl[:LABEL_49] ; addr
LABEL_48:
jmp_cmp <, stor[25], 0x800, inl[:LABEL_49] ; operand, left, right, addr
sub 0x1000, stor[25] ; amount, operand
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_50] ; operand, left, right, addr
LABEL_49:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[25], 0x0, 0x5 ; scriptIndex, x, y, z, frames
LABEL_50:
return

; SUBROUTINE
LABEL_51:
mov var[64][stor[24]], stor[28] ; source, dest
call SMap::scriptToggleAnimationDisabled, stor[28], 0x0 ; scriptIndex, disabled
jmp_cmp ==, 0xffffffff, stor[25], inl[:LABEL_53] ; operand, left, right, addr
jmp_cmp >=, stor[25], 0x64, inl[:LABEL_52] ; operand, left, right, addr
call SMap::scriptLoadSobjAnimation, stor[28], stor[25] ; scriptIndex, animIndex
jmp inl[:LABEL_53] ; addr
LABEL_52:
sub 0x64, stor[25] ; amount, operand
call SMap::loadUninterpolatedSobjAnimation, stor[28], stor[25] ; sobjIndex, animIndex
LABEL_53:
jmp_cmp <=, stor[26], 0x0, inl[:LABEL_54] ; operand, left, right, addr
wait stor[26] ; frames
call SMap::scriptToggleAnimationDisabled, stor[28], 0x1 ; scriptIndex, disabled
jmp inl[:LABEL_56] ; addr
LABEL_54:
yield
call SMap::scriptIsAnimationFinished, stor[28], stor[24] ; scriptIndex, finished
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_54] ; operand, left, right, addr
jmp_cmp <, stor[26], 0x0, inl[:LABEL_55] ; operand, left, right, addr
call SMap::scriptLoadSobjAnimation, stor[28], 0x0 ; scriptIndex, animIndex
jmp inl[:LABEL_56] ; addr
LABEL_55:
call SMap::scriptToggleAnimationDisabled, stor[28], 0x1 ; scriptIndex, disabled
LABEL_56:
return

; SUBROUTINE
LABEL_57:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xff, 0x1 ; flag, value
return

; SUBROUTINE
LABEL_58:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xff, 0x0 ; flag, value
jmp_cmp ==, 0x0, var[73][2], inl[:LABEL_59] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
LABEL_59:
return

; SUBROUTINE
LABEL_60:
gosub inl[:LABEL_57] ; addr
gosub inl[:LABEL_61] ; addr
gosub inl[:LABEL_58] ; addr
return

; SUBROUTINE
LABEL_61:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_64] ; operand, left, right, addr
mov 0x0, stor[24] ; source, dest
call SMap::scriptReadModelPosition, stor[0], stor[25], stor[26], stor[27] ; scriptIndex, x, y, z
call SMap::scriptReadModelRotate, stor[0], stor[31], stor[28], stor[31] ; scriptIndex, x, y, z
and 0xfff, stor[28] ; and, operand
add 0x800, stor[28] ; amount, operand
sin_12 stor[28], stor[29] ; angle, dest
cos_12 stor[28], stor[30] ; angle, dest
mov 0x28, stor[28] ; source, dest
mul_12 stor[28], stor[29] ; amount, operand
mul_12 stor[28], stor[30] ; amount, operand
add stor[29], stor[25] ; amount, operand
add stor[30], stor[27] ; amount, operand
LABEL_62:
mov stor[24], stor[28] ; source, dest
add 0x5, stor[28] ; amount, operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_136[stor[28]]], inl[:LABEL_64] ; operand, left, right, addr
sub 0x4, stor[28] ; amount, operand
mov inl[:LABEL_136[stor[28]]], stor[31] ; source, dest
sub stor[26], stor[31] ; amount, operand
jmp_cmp <, 0x14, stor[31], inl[:LABEL_63] ; operand, left, right, addr
neg stor[31] ; operand
jmp_cmp <, 0x14, stor[31], inl[:LABEL_63] ; operand, left, right, addr
decr stor[28] ; operand
mov inl[:LABEL_136[stor[28]]], stor[30] ; source, dest
add 0x2, stor[28] ; amount, operand
mov inl[:LABEL_136[stor[28]]], stor[31] ; source, dest
sub stor[25], stor[30] ; amount, operand
sub stor[27], stor[31] ; amount, operand
mul stor[30], stor[30] ; amount, operand
mul stor[31], stor[31] ; amount, operand
add stor[30], stor[31] ; amount, operand
sqrt stor[31], stor[31] ; val, dest
incr stor[28] ; operand
jmp_cmp >=, inl[:LABEL_136[stor[28]]], stor[31], inl[:LABEL_65] ; operand, left, right, addr
LABEL_63:
add 0x6, stor[24] ; amount, operand
jmp inl[:LABEL_62] ; addr
LABEL_64:
return
LABEL_65:
gosub inl[:LABEL_66] ; addr
jmp inl[:LABEL_64] ; addr

; SUBROUTINE
LABEL_66:
mov stor[24], stor[28] ; source, dest
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
add 0x4, stor[28] ; amount, operand
incr stor[28] ; operand
mov inl[:LABEL_136[stor[28]]], stor[24] ; source, dest
call Scus94491BpeSegment::scriptReadGlobalFlag2, 0xa, stor[25] ; flag, value
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_67] ; operand, left, right, addr
mov var[2], stor[25] ; source, dest
and 0x1, stor[25] ; and, operand
add stor[25], stor[24] ; amount, operand
jmp inl[:LABEL_68] ; addr
LABEL_67:
add 0x2, stor[24] ; amount, operand
LABEL_68:
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_23] ; addr
gosub inl[:LABEL_27] ; addr
jmp inl[:LABEL_69] ; addr
LABEL_69:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
return

; SUBROUTINE
LABEL_70:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_72] ; operand, left, right, addr
call SMap::scriptGetSobjCollidedWith2, stor[0], stor[24] ; sobjIndex, collided
jmp_cmp ==, 0x8, stor[24], inl[:LABEL_71] ; operand, left, right, addr
jmp inl[:LABEL_72] ; addr
LABEL_71:
mov var[64][stor[24]], stor[24] ; source, dest
call SMap::scriptRotateSobj, stor[24], 0x0, 0xfffff000, 0x0, 0xf ; scriptIndex, x, y, z, frames
LABEL_72:
return

; SUBROUTINE
LABEL_73:
jmp_cmp ==, 0x0, var[73][1], inl[:LABEL_74] ; operand, left, right, addr
mov 0x0, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0x8, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov var[73][0], stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_98] ; addr
mov 0x0, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x9, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
rewind
LABEL_74:
return

; SUBROUTINE
LABEL_75:
jmp_cmp ==, 0xffffffff, stor[25], inl[:LABEL_77] ; operand, left, right, addr
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_76] ; operand, left, right, addr
call Scus94491BpeSegment::scriptChangeSequenceVolumeOverTime, stor[25], 0x0 ; fadeTime, volume
wait stor[25] ; frames
LABEL_76:
call Scus94491BpeSegment::scriptStopCurrentMusicSequence ; index
LABEL_77:
call Scus94491BpeSegment::scriptWaitForFilesToLoad ; index
call Scus94491BpeSegment::scriptLoadMusicPackage, stor[24], stor[26] ; musicIndex, dontStartSequence
LABEL_78:
yield
call Scus94491BpeSegment::scriptGetLoadedSoundFiles, stor[24] ; flags
and 0x80, stor[24] ; and, operand
jmp_cmp !=, 0x0, stor[24], inl[:LABEL_78] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_81:
call 70, 0x0, 0x23;
call 70, 0x1, 0x3;
call 70, 0x2, 0x0;
call 70, 0x3, 0x0;
call 70, 0x4, 0x0;
call 70, 0x5, 0x0;
call 70, 0x6, 0x0;
call 70, 0x7, 0x0;
call 70, 0x8, 0x0;
call 72, 0x0;
return

; SUBROUTINE
LABEL_97:
yield
jmp_cmp <, stor[24], var[10], inl[:LABEL_97] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_98:
mov var[64][stor[24]], stor[24] ; source, dest
call SMap::scriptReadModelPosition, stor[24], stor[27], stor[24], stor[28] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[24], stor[30] ; scriptIndex, x, y, z
sub stor[29], stor[27] ; amount, operand
sub stor[30], stor[28] ; amount, operand
atan2_12 stor[27], stor[28], stor[24] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[27], stor[28] ; scriptIndex, x, y, z
and 0xfff, stor[27] ; and, operand
sub stor[27], stor[24] ; amount, operand
add 0x800, stor[24] ; amount, operand
jmp_cmp >=, stor[24], 0xfffff800, inl[:LABEL_99] ; operand, left, right, addr
add 0x1000, stor[24] ; amount, operand
jmp inl[:LABEL_100] ; addr
LABEL_99:
jmp_cmp <, stor[24], 0x800, inl[:LABEL_100] ; operand, left, right, addr
sub 0x1000, stor[24] ; amount, operand
LABEL_100:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[24], 0x0, stor[25] ; scriptIndex, x, y, z, frames
jmp_cmp !=, stor[26], 0xffffffff, inl[:LABEL_101] ; operand, left, right, addr
return
LABEL_101:
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, stor[26] ; animIndex
wait stor[25] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
return

; SUBROUTINE
LABEL_102:
jmp_cmp ==, 0xffffffff, inl[:LABEL_143], inl[:LABEL_112] ; operand, left, right, addr
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
mov 0x3, stor[25] ; source, dest
call Scus94491BpeSegment::scriptReadGlobalFlag1, inl[:LABEL_140], stor[31] ; flag, value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_108] ; operand, left, right, addr
LABEL_103:
jmp_cmp ==, stor[24], inl[:LABEL_140[stor[25]]], inl[:LABEL_105] ; operand, left, right, addr
add 0x3, stor[25] ; amount, operand
LABEL_104:
jmp_cmp !=, 0xffffffff, inl[:LABEL_140[stor[25]]], inl[:LABEL_103] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag1, inl[:LABEL_140], stor[31] ; flag, value
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_112] ; operand, left, right, addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, inl[:LABEL_141], 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
jmp inl[:LABEL_112] ; addr
LABEL_105:
incr stor[25] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_140[stor[25]]], inl[:LABEL_106] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x400, 0x400, inl[:LABEL_140[stor[25]]] ; x, y, overlayIndex
LABEL_106:
incr stor[25] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_140[stor[25]]], inl[:LABEL_107] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x0, 0x0, inl[:LABEL_140[stor[25]]] ; x, y, overlayIndex
LABEL_107:
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_140], 0x1 ; flag, value
incr stor[25] ; operand
jmp inl[:LABEL_104] ; addr
LABEL_108:
jmp_cmp ==, stor[24], inl[:LABEL_140[stor[25]]], inl[:LABEL_112] ; operand, left, right, addr
add 0x3, stor[25] ; amount, operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_140[stor[25]]], inl[:LABEL_108] ; operand, left, right, addr
mov 0x3, stor[25] ; source, dest
LABEL_109:
incr stor[25] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_140[stor[25]]], inl[:LABEL_110] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x0, 0x0, inl[:LABEL_140[stor[25]]] ; x, y, overlayIndex
LABEL_110:
incr stor[25] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_140[stor[25]]], inl[:LABEL_111] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x400, 0x400, inl[:LABEL_140[stor[25]]] ; x, y, overlayIndex
LABEL_111:
incr stor[25] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_140[stor[25]]], inl[:LABEL_109] ; operand, left, right, addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, inl[:LABEL_142], 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_140], 0x0 ; flag, value
jmp inl[:LABEL_112] ; addr
LABEL_112:
return

; SUBROUTINE
LABEL_113:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_140], 0x0 ; flag, value
mov 0x3, stor[25] ; source, dest
LABEL_114:
jmp_cmp ==, 0xffffffff, inl[:LABEL_140[stor[25]]], inl[:LABEL_116] ; operand, left, right, addr
add 0x2, stor[25] ; amount, operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_140[stor[25]]], inl[:LABEL_115] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x400, 0x400, inl[:LABEL_140[stor[25]]] ; x, y, overlayIndex
LABEL_115:
incr stor[25] ; operand
jmp inl[:LABEL_114] ; addr
LABEL_116:
mov 0x3, stor[25] ; source, dest
LABEL_117:
mov stor[25], stor[26] ; source, dest
jmp_cmp ==, 0xffffffff, inl[:LABEL_140[stor[26]]], inl[:LABEL_120] ; operand, left, right, addr
jmp_cmp !=, stor[24], inl[:LABEL_140[stor[26]]], inl[:LABEL_119] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_140], 0x1 ; flag, value
incr stor[26] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_140[stor[26]]], inl[:LABEL_118] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x400, 0x400, inl[:LABEL_140[stor[26]]] ; x, y, overlayIndex
LABEL_118:
incr stor[26] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_140[stor[26]]], inl[:LABEL_119] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x0, 0x0, inl[:LABEL_140[stor[26]]] ; x, y, overlayIndex
LABEL_119:
add 0x3, stor[25] ; amount, operand
jmp inl[:LABEL_117] ; addr
LABEL_120:
return

; SUBROUTINE
LABEL_121:
gosub inl[:LABEL_122] ; addr
return

; SUBROUTINE
LABEL_122:
jmp_cmp ==, 0xffffffff, inl[:LABEL_137], inl[:LABEL_128] ; operand, left, right, addr
mov 0x0, stor[24] ; source, dest
call SMap::scriptCheckSelfCollision, stor[25] ; collisionPrimitiveIndex
LABEL_123:
mov inl[:LABEL_137[stor[24]]], stor[26] ; source, dest
incr stor[24] ; operand
mov inl[:LABEL_137[stor[24]]], stor[27] ; source, dest
incr stor[24] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_137[stor[24]]], inl[:LABEL_124] ; operand, left, right, addr
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, stor[26], stor[27], stor[31] ; mode, overlayIndex, z, out
jmp inl[:LABEL_127] ; addr
LABEL_124:
jmp_cmp ==, 0xffffffff, inl[:LABEL_137[stor[24]]], inl[:LABEL_127] ; operand, left, right, addr
jmp_cmp ==, stor[25], inl[:LABEL_137[stor[24]]], inl[:LABEL_125] ; operand, left, right, addr
incr stor[24] ; operand
jmp inl[:LABEL_124] ; addr
LABEL_125:
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, stor[26], stor[27], stor[31] ; mode, overlayIndex, z, out
LABEL_126:
incr stor[24] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_137[stor[24]]], inl[:LABEL_126] ; operand, left, right, addr
LABEL_127:
incr stor[24] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_137[stor[24]]], inl[:LABEL_123] ; operand, left, right, addr
LABEL_128:
return
ENTRYPOINT_0:
ENTRYPOINT_1:
ENTRYPOINT_2:
ENTRYPOINT_3:
ENTRYPOINT_4:
ENTRYPOINT_5:
ENTRYPOINT_6:
ENTRYPOINT_7:
ENTRYPOINT_8:
ENTRYPOINT_9:
ENTRYPOINT_10:
ENTRYPOINT_11:
ENTRYPOINT_12:
ENTRYPOINT_13:
ENTRYPOINT_14:
ENTRYPOINT_15:
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov var[65], stor[23] ; source, dest
incr stor[stor[stor[0], 23], 8] ; operand
gosub inl[:LABEL_131] ; addr
LABEL_129:
call SMap::scriptCheckSelfCollision, stor[12] ; collisionPrimitiveIndex
call SMap::scriptReadModelRotate, stor[0], stor[8], stor[11], stor[10] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[8], stor[9], stor[10] ; scriptIndex, x, y, z
gosub inl[:LABEL_133] ; addr
yield
jmp inl[:LABEL_129] ; addr

; SUBROUTINE TABLE
LABEL_130:
rel :JMP_216c_0
rel :JMP_216c_1

; SUBROUTINE
LABEL_131:
gosub inl[:LABEL_113] ; addr
gosub inl[:LABEL_121] ; addr
gosub inl[:LABEL_33] ; addr
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call SMap::scriptSwapShadowTexture, 0x1 ; type
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call SMap::FUN_800df530, 0x0 ; value
call SMap::scriptGetSetEncountersDisabled, 0x1, 0x1, stor[24] ; set, apply, value
call SMap::scriptAddTriangleIndicators, inl[:LABEL_139] ; dataStream
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x0, 0x0 ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[8], stor[9], stor[10] ; scriptIndex, x, y, z
gosub inl[:LABEL_18] ; addr
call SMap::scriptCheckSelfCollision, stor[12] ; collisionPrimitiveIndex
gosub_table stor[stor[stor[0], 23], 31], inl[:LABEL_130] ; index, table
return

; SUBROUTINE
JMP_216c_0:
jmp_cmp >, 0x0, var[67], inl[:LABEL_135] ; operand, left, right, addr
jmp inl[:LABEL_134] ; addr
data 0x49

; SUBROUTINE
JMP_216c_1:
return

; SUBROUTINE TABLE
LABEL_132:
rel :JMP_2228_0
rel :JMP_2228_1

; SUBROUTINE
LABEL_133:
gosub_table stor[stor[stor[0], 23], 31], inl[:LABEL_132] ; index, table
gosub inl[:LABEL_122] ; addr
gosub inl[:LABEL_102] ; addr
gosub inl[:LABEL_70] ; addr
gosub inl[:LABEL_60] ; addr
gosub inl[:LABEL_0] ; addr
return

; SUBROUTINE
JMP_2228_0:
return

; SUBROUTINE
JMP_2228_1:
gosub inl[:LABEL_73] ; addr
return
LABEL_134:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSelfSetSobjHidden, 0x1 ; value
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x96, 0x1 ; flag, value
yield
mov 0x14, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x15, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x3, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x16, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x4, stor[24] ; source, dest
mov 0x7, stor[25] ; source, dest
gosub inl[:LABEL_23] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x3, stor[24] ; source, dest
mov 0xb, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x5, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x3, stor[24] ; source, dest
mov 0x5, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x17, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x6, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x14, stor[25] ; source, dest
wait stor[25] ; frames
gosub inl[:LABEL_27] ; addr
mov 0x18, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x7, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
gosub inl[:LABEL_34] ; addr
mov 0x1a, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x1b, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x1c, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x8, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x5, stor[24] ; source, dest
mov 0x69, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x5, stor[24] ; source, dest
mov 0x69, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x5, stor[24] ; source, dest
mov 0x5, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x4, stor[24] ; source, dest
gosub inl[:LABEL_34] ; addr
mov 0x3, stor[24] ; source, dest
mov 0xf, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x9, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x3, stor[24] ; source, dest
mov 0x5, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x3, stor[24] ; source, dest
mov 0xb, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x1d, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0xf, stor[25] ; source, dest
wait stor[25] ; frames
mov 0xa, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x5, stor[24] ; source, dest
mov 0x69, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x5, stor[24] ; source, dest
mov 0x69, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x5, stor[24] ; source, dest
mov 0x69, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0xb, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_23] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x1e, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x46, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_75] ; addr
mov 0x1f, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0xc, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x5, stor[24] ; source, dest
mov 0x5, stor[25] ; source, dest
mov 0x8, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0xd, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x3, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0xe, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0xd, 0x0, 0x0, 0x8, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
mov 0x3, stor[24] ; source, dest
mov 0x10, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x20, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x22, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0xf, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x5, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x23, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x24, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x10, stor[24] ; source, dest
mov 0x2, stor[25] ; source, dest
gosub inl[:LABEL_23] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x26, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x11, stor[24] ; source, dest
mov 0x4, stor[25] ; source, dest
gosub inl[:LABEL_23] ; addr
mov 0x4, stor[24] ; source, dest
mov 0x5, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x27, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x29, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x46, stor[25] ; source, dest
wait stor[25] ; frames
call SMap::scriptSetModelPosition, stor[0], 0xec, 0x6, 0xffffffa4 ; scriptIndex, x, y, z
call SMap::scriptSelfLoadSobjModelAndAnimation, 0xa ; objectIndex
call SMap::scriptSelfSetSobjHidden, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x2 ; animIndex
mov 0x8c, stor[8] ; source, dest
mov 0xffffffe4, stor[9] ; source, dest
mov 0x8, stor[10] ; source, dest
mov 0x8, stor[24] ; source, dest
gosub inl[:LABEL_46] ; addr
gosub inl[:LABEL_12] ; addr
mov 0x12, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_98] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x2a, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x2b, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x13, stor[24] ; source, dest
mov 0xb, stor[25] ; source, dest
gosub inl[:LABEL_23] ; addr
mov 0xe80, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
gosub inl[:LABEL_37] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x3 ; animIndex
mov 0x6f, stor[8] ; source, dest
mov 0xffffffe0, stor[9] ; source, dest
mov 0x14, stor[10] ; source, dest
mov 0x3, stor[24] ; source, dest
gosub inl[:LABEL_42] ; addr
gosub inl[:LABEL_12] ; addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x5, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
mov 0x0, stor[24] ; source, dest
mov 0x9, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x2e, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x14, stor[24] ; source, dest
mov 0xb, stor[25] ; source, dest
gosub inl[:LABEL_23] ; addr
mov 0xb, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x2c, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x5, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x0, stor[24] ; source, dest
mov 0x11, stor[25] ; source, dest
mov 0x5, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0xa, stor[25] ; source, dest
wait stor[25] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x2 ; animIndex
mov 0x91, stor[8] ; source, dest
mov 0xffffffeb, stor[9] ; source, dest
mov 0xfffffff4, stor[10] ; source, dest
mov 0x6, stor[24] ; source, dest
gosub inl[:LABEL_46] ; addr
wait stor[31] ; frames
mov 0xe00, stor[24] ; source, dest
mov 0x4, stor[25] ; source, dest
gosub inl[:LABEL_37] ; addr
mov 0x2d, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x32, 0x0, 0x0, 0x1, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
mov 0x0, stor[24] ; source, dest
mov 0xc, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0xa, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x2f, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
mov 0x1, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
gosub inl[:LABEL_98] ; addr
mov 0x31, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x3, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_98] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x9, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
wait stor[25] ; frames
mov 0x35, stor[24] ; source, dest
mov 0x3, stor[25] ; source, dest
gosub inl[:LABEL_35] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_98] ; addr
wait stor[25] ; frames
mov 0x36, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_35] ; addr
mov 0x16, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_23] ; addr
mov 0x37, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x600, stor[24] ; source, dest
mov 0x4, stor[25] ; source, dest
gosub inl[:LABEL_37] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x17, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x18 ; animIndex
gosub inl[:LABEL_27] ; addr
mov 0xa, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x17, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
gosub inl[:LABEL_27] ; addr
mov 0xa, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x38, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x19, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x0, stor[24] ; source, dest
mov 0xf, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x39, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x18, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x14, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x24, 0x0, 0x0, 0xa, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x24, 0x0, 0x0, 0x1e, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x24, 0x0, 0x0, 0x25, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
mov 0x3a, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x3b, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x19, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x5, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
mov 0x1, stor[24] ; source, dest
mov 0xd, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x24, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x24, 0x0, 0x0, 0x14, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
mov 0x3c, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0xa, stor[25] ; source, dest
wait stor[25] ; frames
mov 0xe80, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
gosub inl[:LABEL_37] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x3 ; animIndex
mov 0x3b, stor[8] ; source, dest
mov 0xffffffd8, stor[9] ; source, dest
mov 0x2c, stor[10] ; source, dest
mov 0x2, stor[24] ; source, dest
gosub inl[:LABEL_42] ; addr
gosub inl[:LABEL_12] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x1 ; disabled
mov 0xa, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x1a, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x5, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
mov 0x0, stor[24] ; source, dest
mov 0x9, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x3d, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x12, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x3e, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
call SMap::scriptRotateSobj, stor[0], 0x0, 0xfffffed4, 0x0, 0x5 ; scriptIndex, x, y, z, frames
mov 0x5, stor[25] ; source, dest
wait stor[25] ; frames
call Scus94491BpeSegment::scriptSetFlag, var[126], 0x64, 0x1 ; flags, flag, value
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x96, 0x0 ; flag, value
mov 0x14, stor[24] ; source, dest
mov 0x45, stor[25] ; source, dest
gosub inl[:LABEL_22] ; addr
mov 0x1, stor[24] ; source, dest
gosub inl[:LABEL_81] ; addr
call SMap::scriptMapTransition, 0xffffffff, 0x1de ; submapCut, submapScene
rewind
data 0x49
LABEL_135:
call SMap::scriptSetModelPosition, stor[0], 0x2e, 0xffffffdb, 0x22 ; scriptIndex, x, y, z
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x200, 0x0 ; scriptIndex, x, y, z
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSelfSetSobjHidden, 0x0 ; value
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x97, 0x1 ; flag, value
yield
mov 0x0, stor[24] ; source, dest
gosub inl[:LABEL_97] ; addr
mov 0x28, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x1b, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x14, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x15, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0xa, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x1c, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x6, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x5, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x1 ; animIndex
mov 0x7e, stor[24] ; source, dest
mov 0xffffffd9, stor[25] ; source, dest
mov 0x2a, stor[26] ; source, dest
mov 0xa, stor[27] ; source, dest
gosub inl[:LABEL_15] ; addr
mov 0x7e, stor[8] ; source, dest
mov 0xffffffd9, stor[9] ; source, dest
mov 0x2a, stor[10] ; source, dest
mov 0x3, stor[24] ; source, dest
gosub inl[:LABEL_46] ; addr
gosub inl[:LABEL_12] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0xf, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x1d, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x6, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x1, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
gosub inl[:LABEL_98] ; addr
mov 0x1e, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x0, stor[24] ; source, dest
mov 0xe, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x0, stor[24] ; source, dest
mov 0xb, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x0, stor[24] ; source, dest
mov 0xc, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x16, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x17, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x1f, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
call SMap::scriptToggleAnimationDisabled, stor[28], 0x0 ; scriptIndex, disabled
call SMap::scriptLoadSobjAnimation, stor[28], 0x0 ; scriptIndex, animIndex
call SMap::scriptSelfLoadSobjAnimation, 0x1 ; animIndex
mov 0xf00, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
gosub inl[:LABEL_37] ; addr
wait stor[25] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0xa, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x0, stor[24] ; source, dest
mov 0x7, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x20, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x11, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x2 ; animIndex
mov 0xcd, stor[8] ; source, dest
mov 0xfffffff3, stor[9] ; source, dest
mov 0xffffffdc, stor[10] ; source, dest
mov 0x6, stor[24] ; source, dest
gosub inl[:LABEL_46] ; addr
mov 0xc, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x18, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x21, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_98] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x19, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x1a, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_35] ; addr
mov 0x22, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1, stor[24] ; source, dest
mov 0xb, stor[25] ; source, dest
mov 0x10, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x23, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x0, stor[24] ; source, dest
mov 0xe, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x24, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x1 ; animIndex
mov 0xa0, stor[8] ; source, dest
mov 0x0, stor[9] ; source, dest
mov 0xffffffb6, stor[10] ; source, dest
mov 0x3, stor[24] ; source, dest
gosub inl[:LABEL_46] ; addr
gosub inl[:LABEL_12] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0xa, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x25, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x0, stor[24] ; source, dest
mov 0xf, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x1b, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x14, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x26, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1c, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x27, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_23] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x10, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x4, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x28, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x1, stor[24] ; source, dest
mov 0xf, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x1d, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x1e, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
mov 0x29, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1, stor[24] ; source, dest
mov 0xd, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x7, stor[25] ; source, dest
mov 0x5, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x2a, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x9, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x6, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
mov 0x1, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
gosub inl[:LABEL_98] ; addr
mov 0x2b, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x7, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x0, stor[24] ; source, dest
mov 0xb, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x0, stor[24] ; source, dest
mov 0xc, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
mov 0x1f, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x20, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_35] ; addr
mov 0x2c, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x21, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
gosub inl[:LABEL_27] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x1 ; animIndex
mov 0x7b, stor[8] ; source, dest
mov 0xfffffff0, stor[9] ; source, dest
mov 0xffffffe4, stor[10] ; source, dest
mov 0x3, stor[24] ; source, dest
gosub inl[:LABEL_46] ; addr
gosub inl[:LABEL_12] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0x32, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x2d, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_31] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x6, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
gosub inl[:LABEL_27] ; addr
call Scus94491BpeSegment::scriptChangeSequenceVolumeOverTime, 0x1e, 0x0 ; fadeTime, volume
mov 0x1, stor[24] ; source, dest
mov 0x6, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x22, stor[24] ; source, dest
gosub inl[:LABEL_45] ; addr
mov 0x2c, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_75] ; addr
mov 0x23, stor[24] ; source, dest
gosub inl[:LABEL_14] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x8 ; animIndex
mov 0x7, stor[25] ; source, dest
wait stor[25] ; frames
mov 0xf00, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
gosub inl[:LABEL_37] ; addr
gosub inl[:LABEL_13] ; addr
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call Scus94491BpeSegment::scriptSetFlag, var[126], 0x64, 0x0 ; flags, flag, value
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x97, 0x0 ; flag, value
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x69, 0x0 ; flag, value
call Scus94491BpeSegment::scriptSetGlobalFlag2, 0x7, 0x1 ; flag, value
mov 0x14, stor[24] ; source, dest
mov 0x45, stor[25] ; source, dest
gosub inl[:LABEL_22] ; addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
return
LABEL_136:
data 0x56
data 0xffffffb2
data 0xb2
data 0x1e
data 0xffffffff
data 0x0
data 0xffffffcb
data 0xffffffa9
data 0xe0
data 0x1e
data 0xffffffff
data 0x0
data 0xffffff89
data 0xffffffa1
data 0xf6
data 0x1e
data 0xffffffff
data 0x0
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
LABEL_137:
data 0xc
data 0xa2
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
LABEL_138:
data 0x5
data 0x2
data 0x24
data 0x17
data 0x16
data 0x22
data 0x14
data 0xc
data 0x5
data 0xe
data 0xb
LABEL_139:
data 0x23
data 0x0
data 0x1e
data 0x0
data 0x17
data 0x0
data 0x2
data 0x0
data 0xe
data 0x0
data 0xffffffff
LABEL_140:
data 0xfb
LABEL_141:
data 0x21
LABEL_142:
data 0x21
LABEL_143:
data 0xb
data 0x6
data 0xffffffff
data 0xe
data 0x6
data 0xffffffff
data 0x1c
data 0x6
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
LABEL_144:
rel :PTR_4570_0
rel :PTR_4570_1
rel :PTR_4570_2
rel :PTR_4570_3
rel :PTR_4570_4
rel :PTR_4570_5
rel :PTR_4570_6
rel :PTR_4570_7
rel :PTR_4570_8
rel :PTR_4570_9
rel :PTR_4570_10
rel :PTR_4570_11
rel :PTR_4570_12
rel :PTR_4570_13
rel :PTR_4570_14
rel :PTR_4570_15
rel :PTR_4570_16
rel :PTR_4570_17
rel :PTR_4570_18
rel :PTR_4570_19
rel :PTR_4570_20
rel :PTR_4570_21
rel :PTR_4570_22
rel :PTR_4570_23
rel :PTR_4570_24
rel :PTR_4570_25
rel :PTR_4570_26
rel :PTR_4570_27
rel :PTR_4570_28
rel :PTR_4570_29
rel :PTR_4570_30
rel :PTR_4570_31
rel :PTR_4570_32
rel :PTR_4570_33
rel :PTR_4570_34
rel :PTR_4570_35
rel :PTR_4570_36
rel :PTR_4570_37
rel :PTR_4570_38
rel :PTR_4570_39
rel :PTR_4570_40
rel :PTR_4570_41
rel :PTR_4570_42
rel :PTR_4570_43
rel :PTR_4570_44
rel :PTR_4570_45
LABEL_145:
rel :PTR_4628_0
rel :PTR_4628_1
rel :PTR_4628_2
rel :PTR_4628_3
rel :PTR_4628_4
rel :PTR_4628_5
rel :PTR_4628_6
rel :PTR_4628_7
rel :PTR_4628_8
rel :PTR_4628_9
rel :PTR_4628_10
rel :PTR_4628_11
rel :PTR_4628_12
rel :PTR_4628_13
rel :PTR_4628_14
rel :PTR_4628_15
rel :PTR_4628_16
rel :PTR_4628_17
rel :PTR_4628_18
rel :PTR_4628_19
rel :PTR_4628_20
rel :PTR_4628_21
rel :PTR_4628_22
rel :PTR_4628_23
rel :PTR_4628_24
rel :PTR_4628_25
rel :PTR_4628_26
rel :PTR_4628_27
rel :PTR_4628_28
rel :PTR_4628_29
rel :PTR_4628_30
rel :PTR_4628_31
rel :PTR_4628_32
rel :PTR_4628_33
rel :PTR_4628_34
rel :PTR_4628_35
rel :PTR_4628_36
rel :PTR_4628_37
rel :PTR_4628_38
rel :PTR_4628_39
rel :PTR_4628_40
rel :PTR_4628_41
rel :PTR_4628_42
rel :PTR_4628_43
rel :PTR_4628_44
rel :PTR_4628_45
data 0x32b002
data 0x3d0040
data 0x3a0000
data 0x41004a
data 0x3f003c
data 0x3d
data 0x4b0041
data 0x3a0000
data 0x41003d
data 0x3f0046
data 0x4a0000
data 0x410039
data 0x3d004b
data 0x6003c
data 0xa0ff0006
data 0x1c
data 0x1
data 0x27b001
data 0x4b004c
data 0x460000
data 0x4c0047
data 0x410040
data 0x3f0046
data 0x60006
data 0xa0ff
data 0xd
data 0x1
data 0x2ab002
data 0x4e0039
data 0x4c0041
data 0x60052
data 0xa0ff0006
data 0x8
data 0x1
data 0x25b000
data 0x60047
data 0xa0ff0006
data 0x4
data 0x1
data 0xbb001
data 0x47002c
data 0x6004f
data 0xa0ff000c
data 0x6
data 0x1
PTR_4570_3:
data str[<speed=0>Hellena Warden<line>Move quicker!]
PTR_4628_3:
data 0xe
data 0x2
PTR_4570_4:
data str[<sauto=1>Argh!]
PTR_4628_4:
data 0x5
data 0x1
PTR_4570_5:
data str[<speed=0>H<noterm>]
data str[ellena Warden<line>You have such bad luck!<line>Yo<noterm>]
data str[u will regret not being<line>killed on the battlefield!]
PTR_4628_5:
data 0x1a
data 0x4
PTR_4570_6:
data str[<speed=0>Knight of Basil<line>What do you mean!?]
PTR_4628_6:
data 0x12
data 0x2
PTR_4570_7:
data str[<speed=0>Hellena Warden<line>You really believe y<noterm>]
data str[ou can<line>live comfortably in the jail?<line>The head warden, Fruegel<line>will feed you to the monster!]
PTR_4628_7:
data 0x1d
data 0x5
data 0x2db001
data 0x480047
data 0x6004b
data 0xa0ff0005
data 0x6
data 0x1
PTR_4570_8:
data str[<speed=0>Knight of Basil<line>Feed us to the monster!?<line>I won't let you humiliate<line>us anymore!]
PTR_4628_8:
data 0x19
data 0x4
PTR_4570_9:
data str[<speed=0>Hel<noterm>]
data str[lena Warden<chr=0x900>iate<line>Oh, feisty feisty.<line>It's the worst kind of P<noterm>]
data str[OW,<line>but the best kind <noterm>]
data str[of feed.]
PTR_4628_9:
data 0x1b
data 0x4
PTR_4570_10:
data str[<speed=0>Knight of Basil<line>If yo<noterm>]
data str[u want to kill me,<line>kill me now!!]
PTR_4628_10:
data 0x17
data 0x3
PTR_4570_11:
data str[<sauto=0>I won't let him!]
PTR_4628_11:
data 0x10
data 0x1
PTR_4570_12:
data str[<speed=0>Knight <noterm>]
data str[of Basil<line>Sir Lavitz!!!]
PTR_4628_12:
data 0xf
data 0x2
PTR_4570_13:
data str[<speed=0>Hellena Warden<line>You, you bastard!!<line>You broke out<noterm>]
data str[ of the jail!?]
PTR_4628_13:
data 0x1b
data 0x3
PTR_4570_14:
data str[<speed=0>Hellena Warden<line>Silly guy!!<line>You think you can escape<line>from here alone!?]
PTR_4628_14:
data 0x18
data 0x4
PTR_4570_15:
data str[<speed=0>Lavitz<line>I'<noterm>]
data str[ll take care of this!!<line>S<noterm>]
data str[urvive and go back to<line><colour=5>Indels Ca<noterm>]
data str[stle<colour=0> alive!!<line>Tell King Albert..<noterm>]
data str[.!]
PTR_4628_15:
data 0x18
data 0x5
PTR_4570_16:
data str[<sauto=1>I won't let you<noterm>]
data str[!!]
PTR_4628_16:
data 0x11
data 0x1
PTR_4570_17:
data str[<speed=0>I took care of those guys<noterm>]
data str[!]
PTR_4628_17:
data 0x1a
data 0x1
PTR_4570_18:
data str[<speed=0>Dart<line> Is this<noterm>]
data str[ civil war!? ]
PTR_4628_18:
data 0x15
data 0x2
PTR_4570_19:
data str[<speed=0>You! Who are you!?]
PTR_4628_19:
data 0x12
data 0x1
PTR_4570_20:
data str[<speed=0>Are you a dog of <noterm>]
data str[Basil too!?]
PTR_4628_20:
data 0x1c
data 0x1
PTR_4570_21:
data str[<speed=0>Lavitz<line>AHHHH!!]
PTR_4628_21:
data 0x7
data 0x2
PTR_4570_22:
data str[<speed=0>Who are you?]
PTR_4628_22:
data 0xc
data 0x1
PTR_4570_23:
data str[<speed=0>Dart<line>I am Dart!<line>I am not your enemy!]
PTR_4628_23:
data 0x14
data 0x3
PTR_4570_24:
data str[<speed=0>L<noterm>]
data str[avitz<line>I am Lavitz Slambert!<line>I am the head of the First<line>Knighthood <noterm>]
data str[of the Kingdom<line>of Basil!<noterm>]
data str[]
PTR_4628_24:
data 0x1a
data 0x5
PTR_4570_25:
data str[<speed=0>Lavitz<line>Well, it seems we don't ha<noterm>]
data str[ve<line>time for introductions!]
PTR_4628_25:
data 0x1c
data 0x3
PTR_4570_26:
data str[<speed=0>Dart<line>No we don't!]
PTR_4628_26:
data 0xc
data 0x2
PTR_4570_27:
data str[<speed=0>Lavitz<line>I will carry out your wish.]
PTR_4628_27:
data 0x1b
data 0x2
PTR_4570_28:
data str[<speed=0>Lavitz<line>You said, Dart.<line>I <noterm>]
data str[cannot imagine there is<line>somebody who intentionally<line>comes<noterm>]
data str[ to <colour=5>Hellena<colour=0>.<line>What are you up to?]
PTR_4628_28:
data 0x1a
data 0x6
PTR_4570_29:
data str[<speed=0>Dart<line>I am here to res<noterm>]
data str[cue<line>someone important<line>to me.]
PTR_4628_29:
data 0x13
data 0x4
PTR_4570_30:
data str[<speed=0>Dart<line>Do you know anything abo<noterm>]
data str[ut<line>her!? Her name <noterm>]
data str[is Shana!]
PTR_4628_30:
data 0x1a
data 0x3
PTR_4570_31:
data str[<speed=0>Lavitz<line>I am sor<noterm>]
data str[ry, but....]
PTR_4628_31:
data 0x13
data 0x2
PTR_4570_32:
data str[<speed=0>Dart<line>I'll look elsewhere.]
PTR_4628_32:
data 0x14
data 0x2
PTR_4570_33:
data str[<speed=0>Lavitz<line>Wait!]
PTR_4628_33:
data 0x6
data 0x2
PTR_4570_34:
data str[<speed=0>Lavitz<line><noterm>]
data str[I'll go with you.]
PTR_4628_34:
data 0x11
data 0x2
PTR_4570_35:
data str[<speed=0>Dart<line>I thought you had to go<line>back to <noterm>]
data str[the castle as soon<line>as possible?]
PTR_4628_35:
data 0x1a
data 0x4
PTR_4570_36:
data str[<speed=0>Lavitz<line><noterm>]
data str[She's important, this girl<line>you are looking for?]
PTR_4628_36:
data 0x1a
data 0x3
PTR_4570_37:
data str[<speed=0>Dart<line>It's my problem.<line>It was my fault.]
PTR_4628_37:
data 0x10
data 0x3
PTR_4570_38:
data str[<speed=0>Lav<noterm>]
data str[itz<line>I don'<noterm>]
data str[t know what brought you<line>here but <colour=5><noterm>]
data str[Hellena<colour=0> is not<line>that easy to go through alone.]
PTR_4628_38:
data 0x1e
data 0x4
PTR_4570_39:
data str[<sauto=1>...]
PTR_4628_39:
data 0x3
data 0x1
PTR_4570_40:
data str[<speed=0>L<noterm>]
data str[avitz<line>That goes for me too.]
PTR_4628_40:
data 0x15
data 0x2
PTR_4570_41:
data str[<speed=0>Lavit<noterm>]
data str[z<line>But, I can break out from here,<line>together with yo<noterm>]
data str[u!]
PTR_4628_41:
data 0x1f
data 0x3
PTR_4570_42:
data str[<speed=0>Lavitz<line>Of course with the girl.]
PTR_4628_42:
data 0x18
data 0x2
PTR_4570_43:
data str[<speed=0>Dart<line>How come you trust me?<line>We've just met.]
PTR_4628_43:
data 0x16
data 0x3
PTR_4570_44:
data str[<speed=0>Lavitz<line>The <noterm>]
data str[raid you made was<line>quite impressive. I tr<noterm>]
data str[usted<line>you to guard m<noterm>]
data str[y back.<line>That's the way I t<noterm>]
data str[hink.]
PTR_4628_44:
data 0x1b
data 0x5
PTR_4570_45:
data str[<speed=0>Dart<line>All <noterm>]
data str[right. Let's go together.]
PTR_4628_45:
data 0x1d
data 0x2
PTR_4570_0:
data str[<sauto=0>It's not here.]
PTR_4628_0:
data 0xe
data 0x1
PTR_4570_1:
data str[<sauto=0>Darn, where is it!?]
PTR_4628_1:
data 0x13
data 0x1
PTR_4570_2:
data str[<sauto=0>Nobody's here.]
PTR_4628_2:
data 0xe
data 0x1
