entrypoint :ENTRYPOINT_0

; SUBROUTINE
LABEL_0:
yield
call SMap::FUN_800df620, stor[24] ; value
jmp_cmp !=, 0x0, stor[24], inl[:LABEL_0] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_1:
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[24], 0x0 ; flag, value
incr stor[24] ; operand
jmp_cmp <=, stor[24], stor[25], inl[:LABEL_1] ; operand, left, right, addr
return

; SUBROUTINE
JMP_13bc_0:
call Scus94491BpeSegment_8002::scriptGetFreeTextboxIndex, stor[26] ; textboxIndex
jmp_cmp ==, 0xffffffff, stor[26], inl[:LABEL_4] ; operand, left, right, addr
mov var[64][stor[25]], stor[25] ; source, dest
memcpy 0x2, inl[:LABEL_180[:LABEL_180[stor[24]]]], stor[27] ; size, src, dest
jmp_cmp <=, stor[27], 0x24, inl[:LABEL_2] ; operand, left, right, addr
mov 0x24, stor[27] ; source, dest
LABEL_2:
jmp_cmp <=, stor[28], 0x4, inl[:LABEL_3] ; operand, left, right, addr
mov 0x4, stor[28] ; source, dest
LABEL_3:
call SMap::scriptAddSobjTextbox, stor[26], stor[25], 0x121, stor[27], stor[28], inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, submapObjectIndex, packedData, width, height, text
LABEL_4:
mov stor[26], stor[24] ; source, dest
return

; SUBROUTINE
LABEL_5:
mov 0x0, stor[24] ; source, dest
LABEL_6:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[24], stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_7] ; operand, left, right, addr
incr stor[24] ; operand
jmp_cmp <=, stor[24], 0x4, inl[:LABEL_6] ; operand, left, right, addr
jmp inl[:LABEL_8] ; addr
LABEL_7:
yield
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[24], stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_7] ; operand, left, right, addr
LABEL_8:
return

; SUBROUTINE
JMP_13bc_1:
mov var[64][stor[25]], stor[25] ; source, dest
call SMap::FUN_800df9a8, stor[25], stor[27], stor[27], stor[27], stor[28] ; scriptIndex, x0, y0, x1, y1
jmp_cmp >, 0x82, stor[28], inl[:JMP_13bc_3] ; operand, left, right, addr

; SUBROUTINE
JMP_13bc_2:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x5, stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_9] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x6 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x5, 0x1011, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_9:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x400, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
jmp inl[:LABEL_11] ; addr

; SUBROUTINE
JMP_13bc_3:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x6, stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_10] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x5 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x6, 0x1011, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_10:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x400, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
LABEL_11:
return

; SUBROUTINE
JMP_13bc_5:
call Scus94491BpeSegment_8002::scriptGetFreeTextboxIndex, stor[26] ; textboxIndex
jmp_cmp ==, 0xffffffff, stor[26], inl[:LABEL_13] ; operand, left, right, addr
mov var[64][stor[25]], stor[25] ; source, dest
call SMap::FUN_800df9a8, stor[25], stor[27], stor[27], stor[27], stor[28] ; scriptIndex, x0, y0, x1, y1
jmp_cmp >, 0x82, stor[28], inl[:LABEL_12] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptAddTextbox, stor[26], 0x111, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
jmp inl[:LABEL_13] ; addr
LABEL_12:
call Scus94491BpeSegment_8002::scriptAddTextbox, stor[26], 0x111, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_13:
mov stor[26], stor[24] ; source, dest
return

; SUBROUTINE
LABEL_14:
jmp_cmp !=, 0xffffffff, var[73][31], inl[:LABEL_15] ; operand, left, right, addr
mov 0x0, var[73][31] ; source, dest
jmp inl[:LABEL_17] ; addr
LABEL_15:
mov var[3], stor[24] ; source, dest
and 0xf000, stor[24] ; and, operand
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_16] ; operand, left, right, addr
mov 0x0, var[73][31] ; source, dest
jmp inl[:LABEL_17] ; addr
LABEL_16:
incr var[73][31] ; operand
jmp_cmp >=, 0x12c, var[73][31], inl[:LABEL_17] ; operand, left, right, addr
call SMap::scriptSelfGetSobjAnimation, stor[24] ; animIndex
jmp_cmp ==, 0x1f, stor[24], inl[:LABEL_28] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, 0x1f ; animIndex
jmp inl[:LABEL_28] ; addr
LABEL_17:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
mov 0x0, stor[25] ; source, dest
LABEL_18:
jmp_cmp ==, 0xffffffff, inl[:LABEL_195[stor[25]]], inl[:LABEL_19] ; operand, left, right, addr
jmp_cmp ==, stor[24], inl[:LABEL_195[stor[25]]], inl[:LABEL_20] ; operand, left, right, addr
incr stor[25] ; operand
jmp inl[:LABEL_18] ; addr
LABEL_19:
mov 0x0, stor[24] ; source, dest
jmp inl[:LABEL_21] ; addr
LABEL_20:
mov 0xffffffff, stor[24] ; source, dest
LABEL_21:
mov 0x0, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
jmp_cmp ==, 0x0, var[27], inl[:LABEL_22] ; operand, left, right, addr
jmp_cmp ==, 0x0, var[31], inl[:LABEL_22] ; operand, left, right, addr
mov var[3], stor[29] ; source, dest
and 0xf000, stor[29] ; and, operand
jmp_cmp ==, 0x0, stor[29], inl[:LABEL_25] ; operand, left, right, addr
mov 0x4, stor[25] ; source, dest
mov 0x1, stor[27] ; source, dest
mov var[28], stor[28] ; source, dest
jmp_cmp ==, 0xffffffff, stor[24], inl[:LABEL_25] ; operand, left, right, addr
jmp_cmp <, var[31], 0x7f, inl[:LABEL_25] ; operand, left, right, addr
mov 0x2, stor[27] ; source, dest
mov 0xc, stor[25] ; source, dest
jmp inl[:LABEL_25] ; addr
LABEL_22:
mov 0x0, stor[28] ; source, dest
mov var[3], stor[29] ; source, dest
and 0xf000, stor[29] ; and, operand
jmp_cmp ==, 0x0, stor[29], inl[:LABEL_25] ; operand, left, right, addr
LABEL_23:
mov inl[:LABEL_29[stor[28]]], stor[30] ; source, dest
jmp_cmp ==, stor[30], 0xffffffff, inl[:LABEL_25] ; operand, left, right, addr
jmp_cmp ==, stor[29], stor[30], inl[:LABEL_24] ; operand, left, right, addr
incr stor[28] ; operand
jmp inl[:LABEL_23] ; addr
LABEL_24:
mul 0x200, stor[28] ; amount, operand
mov 0x4, stor[25] ; source, dest
mov 0x1, stor[27] ; source, dest
jmp_cmp ==, 0xffffffff, stor[24], inl[:LABEL_25] ; operand, left, right, addr
jmp_cmp !&, 0x40, var[3], inl[:LABEL_25] ; operand, left, right, addr
mov 0x2, stor[27] ; source, dest
mov 0xc, stor[25] ; source, dest
LABEL_25:
jmp_cmp ==, 0x0, stor[27], inl[:LABEL_27] ; operand, left, right, addr
mov stor[28], stor[29] ; source, dest
sin_12 stor[28], stor[28] ; angle, dest
cos_12 stor[29], stor[29] ; angle, dest
mov stor[25], stor[26] ; source, dest
shl 0xc, stor[25] ; shift, val
shl 0xc, stor[26] ; shift, val
mul_12 stor[28], stor[25] ; amount, operand
mul_12 stor[29], stor[26] ; amount, operand
add 0x800, stor[25] ; amount, operand
add 0x800, stor[26] ; amount, operand
shr 0xc, stor[25] ; shift, val
shr 0xc, stor[26] ; shift, val
call SMap::scriptCheckPlayerCollision, stor[25], 0x0, stor[26], stor[28] ; deltaX, deltaY, deltaZ, collidee
call SMap::scriptGetPlayerMovement, stor[29], stor[30], stor[31] ; x, y, z
call SMap::scriptSelfFacePoint, stor[29], stor[30], stor[31] ; x, y, z
jmp_cmp ==, stor[28], 0xffffffff, inl[:LABEL_26] ; operand, left, right, addr
mov 0x0, stor[27] ; source, dest
jmp inl[:LABEL_27] ; addr
LABEL_26:
call SMap::scriptMovePlayer, stor[25], 0x0, stor[26] ; x, y, z
LABEL_27:
call SMap::scriptSelfGetSobjAnimation, stor[28] ; animIndex
jmp_cmp ==, stor[28], stor[27], inl[:LABEL_28] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, stor[27] ; animIndex
LABEL_28:
return
LABEL_29:
data 0x1000
data 0x3000
data 0x2000
data 0x6000
data 0x4000
data 0xc000
data 0x8000
data 0x9000
data 0xffffffff
data 0xc90138
data 0x5
data 0xc90138
data 0x6
data 0x49
data 0x208
data 0x7001940
data 0x2000019
data 0x7d0538
data 0x2000019
data 0x200001b
data 0x200001b
data 0x200001b
data 0x200001c
data 0x40341
data 0x82
data 0x200001c
data 0x9000027

; SUBROUTINE
JMP_13bc_6:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x5, stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_30] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x6 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x5, 0x1011, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_30:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x100, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
jmp inl[:LABEL_32] ; addr

; SUBROUTINE
JMP_13bc_7:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, 0x6, stor[25] ; index, initialized
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_31] ; operand, left, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x5 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x6, 0x1011, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_31:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x100, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_179[:LABEL_179[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
LABEL_32:
return
data 0x10b0438
data 0x2000018
data 0x2000019
data 0x200001a
data 0x200001b
data 0x3040438
data 0x1
data 0x2000019
data 0x200001a
data 0x200001b
data 0x10c
data 0x30d1700
data 0x49
data 0x208
data 0x1
data 0x500007c
data 0x12f0438
data 0xf000040
data 0x1000000
data 0x80
data 0x1000000
data 0xdd
data 0x1000000
data 0xdd
data 0x30242
data 0x30d1700
data 0x9000013
data 0x208
data 0x1
data 0x30d1700
data 0xed0338
data 0x1000000
data 0x8
data 0x18
data 0x3
data 0xec0638
data 0x1000000
data 0x8
data 0x18
data 0x0
data 0x0
data 0x0
data 0x0
data 0x49
data 0x208
data 0x0
data 0x500007c
data 0x1300138
data 0xf000040
data 0x10c
data 0x30d1700
data 0x49

; SUBROUTINE
LABEL_35:
call 70, 0x0, 0x23;
call 70, 0x1, 0x3;
call 70, 0x2, 0x0;
call 70, 0x3, 0x0;
call 70, 0x4, 0x0;
call 70, 0x5, 0x0;
call 70, 0x6, 0x0;
call 70, 0x7, 0x0;
call 70, 0x8, 0x0;
call 72, 0x0;
return

; SUBROUTINE
LABEL_51:
jmp_cmp <=, 0x100, stor[24], inl[:LABEL_53] ; operand, left, right, addr
LABEL_52:
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[24], stor[26] ; flag, value
jmp_cmp ==, stor[25], stor[26], inl[:LABEL_54] ; operand, left, right, addr
yield
jmp inl[:LABEL_52] ; addr
LABEL_53:
call Scus94491BpeSegment::scriptReadIndicatorsDisabled, stor[24] ; disabled
jmp_cmp ==, stor[25], stor[24], inl[:LABEL_54] ; operand, left, right, addr
yield
jmp inl[:LABEL_53] ; addr
LABEL_54:
return

; SUBROUTINE
LABEL_55:
yield
call SMap::scriptSelfIsAnimationFinished, stor[25] ; value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_55] ; operand, left, right, addr
jmp_cmp !=, stor[24], 0xffffffff, inl[:LABEL_56] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x1 ; disabled
return
LABEL_56:
call SMap::scriptSelfLoadSobjAnimation, stor[24] ; animIndex
return

; SUBROUTINE
LABEL_57:
mov stor[27], stor[31] ; source, dest
jmp_cmp <=, 0x4, stor[26], inl[:LABEL_58] ; operand, left, right, addr
gosub_table stor[26], inl[:LABEL_61] ; index, table
return
LABEL_58:
jmp_cmp ==, 0x4, stor[26], inl[:LABEL_60] ; operand, left, right, addr
gosub_table stor[26], inl[:LABEL_61] ; index, table
call Scus94491BpeSegment_8002::scriptAddSelectionTextbox, stor[24], 0x1, stor[31] ; index, minSelectionIndex, maxSelectionIndex
LABEL_59:
yield
call Scus94491BpeSegment_8002::scriptGetTextboxSelectionIndex, stor[24], stor[25] ; index, selectionIndex
jmp_cmp ==, 0xffffffff, stor[25], inl[:LABEL_59] ; operand, left, right, addr
mov stor[25], stor[24] ; source, dest
return
LABEL_60:
gosub inl[:JMP_13bc_0] ; addr
decr stor[31] ; operand
call Scus94491BpeSegment_8002::scriptAddSelectionTextbox, stor[24], 0x0, stor[31] ; index, minSelectionIndex, maxSelectionIndex
jmp inl[:LABEL_59] ; addr

; SUBROUTINE TABLE
LABEL_61:
rel :JMP_13bc_0
rel :JMP_13bc_1
rel :JMP_13bc_2
rel :JMP_13bc_3
rel :JMP_13bc_0
rel :JMP_13bc_5
rel :JMP_13bc_6
rel :JMP_13bc_7

; SUBROUTINE
LABEL_62:
jmp_cmp >, 0x0, var[67], inl[:LABEL_65] ; operand, left, right, addr
mov 0x0, stor[24] ; source, dest
call SMap::scriptCheckSelfCollision, stor[25] ; collisionPrimitiveIndex
LABEL_63:
jmp_cmp ==, 0xffffffff, inl[:LABEL_184[stor[24]]], inl[:LABEL_65] ; operand, left, right, addr
jmp_cmp ==, stor[25], inl[:LABEL_184[stor[24]]], inl[:LABEL_64] ; operand, left, right, addr
add 0x2, stor[24] ; amount, operand
jmp inl[:LABEL_63] ; addr
LABEL_64:
incr stor[24] ; operand
mov inl[:LABEL_184[stor[24]]], stor[24] ; source, dest
call SMap::scriptGetCollisionPrimitivePos, stor[24], stor[24], stor[25], stor[26] ; collisionPrimitiveIndex, x, y, z
call SMap::scriptSelfFacePoint, stor[24], stor[25], stor[26] ; x, y, z
LABEL_65:
return

; SUBROUTINE
LABEL_66:
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
jmp_cmp >, 0x0, stor[24], inl[:LABEL_67] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, stor[24] ; animIndex
jmp inl[:LABEL_68] ; addr
LABEL_67:
neg stor[24] ; operand
call SMap::loadUninterpolatedSobjAnimation, stor[0], stor[24] ; sobjIndex, animIndex
LABEL_68:
yield
call SMap::scriptSelfIsAnimationFinished, stor[24] ; value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_68] ; operand, left, right, addr
jmp_cmp ==, stor[25], 0xffffffff, inl[:LABEL_69] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, stor[25] ; animIndex
return
LABEL_69:
call SMap::scriptSelfToggleAnimationDisabled, 0x1 ; disabled
return

; SUBROUTINE
LABEL_70:
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[30], stor[31] ; scriptIndex, x, y, z
sub stor[24], stor[29] ; amount, operand
sub stor[25], stor[30] ; amount, operand
sub stor[26], stor[31] ; amount, operand
mul stor[29], stor[29] ; amount, operand
mul stor[30], stor[30] ; amount, operand
mul stor[31], stor[31] ; amount, operand
add stor[29], stor[30] ; amount, operand
add stor[30], stor[31] ; amount, operand
sqrt stor[31], stor[31] ; val, dest
incr stor[27] ; operand
jmp_cmp >, stor[27], stor[31], inl[:LABEL_73] ; operand, left, right, addr
decr stor[27] ; operand
div stor[27], stor[31] ; amount, operand
call SMap::scriptSelfMoveToPosition, stor[24], stor[25], stor[26], stor[31] ; x, y, z, movementTicks
jmp_cmp ==, 0xffffffff, stor[28], inl[:LABEL_71] ; operand, left, right, addr
jmp_cmp ==, 0xfffffffe, stor[28], inl[:LABEL_72] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, stor[28] ; animIndex
call SMap::scriptSelfFacePoint, stor[24], stor[25], stor[26] ; x, y, z
wait stor[31] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
jmp inl[:LABEL_74] ; addr
LABEL_71:
mov stor[31], stor[24] ; source, dest
jmp inl[:LABEL_74] ; addr
LABEL_72:
call SMap::scriptSelfFacePoint, stor[24], stor[25], stor[26] ; x, y, z
wait stor[31] ; frames
jmp inl[:LABEL_74] ; addr
LABEL_73:
call SMap::scriptReadModelPosition, stor[0], stor[24], stor[25], stor[26] ; scriptIndex, x, y, z
call SMap::scriptSelfMoveToPosition, stor[24], stor[25], stor[26], 0x1 ; x, y, z, movementTicks
mov 0x0, stor[24] ; source, dest
jmp_cmp >, 0x0, stor[28], inl[:LABEL_74] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
jmp inl[:LABEL_74] ; addr
LABEL_74:
return

; SUBROUTINE
LABEL_75:
call SMap::scriptReadModelPosition, stor[0], stor[28], stor[30], stor[29] ; scriptIndex, x, y, z
sub stor[28], stor[24] ; amount, operand
sub stor[29], stor[25] ; amount, operand
atan2_12 stor[24], stor[25], stor[24] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[25], stor[28] ; scriptIndex, x, y, z
and 0xfff, stor[25] ; and, operand
sub stor[25], stor[24] ; amount, operand
add 0x800, stor[24] ; amount, operand
jmp_cmp >=, stor[24], 0xfffff800, inl[:LABEL_76] ; operand, left, right, addr
add 0x1000, stor[24] ; amount, operand
jmp inl[:LABEL_77] ; addr
LABEL_76:
jmp_cmp <, stor[24], 0x800, inl[:LABEL_77] ; operand, left, right, addr
sub 0x1000, stor[24] ; amount, operand
LABEL_77:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[24], 0x0, stor[26] ; scriptIndex, x, y, z, frames
jmp_cmp ==, 0xffffffff, stor[27], inl[:LABEL_78] ; operand, left, right, addr
jmp_cmp ==, 0xfffffffe, stor[27], inl[:LABEL_79] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, stor[27] ; animIndex
wait stor[26] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
jmp inl[:LABEL_80] ; addr
LABEL_78:
jmp inl[:LABEL_80] ; addr
LABEL_79:
wait stor[26] ; frames
jmp inl[:LABEL_80] ; addr
LABEL_80:
return

; SUBROUTINE
LABEL_81:
mov var[64][stor[24]], stor[24] ; source, dest
call SMap::scriptReadModelPosition, stor[24], stor[27], stor[24], stor[28] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[24], stor[30] ; scriptIndex, x, y, z
sub stor[29], stor[27] ; amount, operand
sub stor[30], stor[28] ; amount, operand
atan2_12 stor[27], stor[28], stor[24] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[27], stor[28] ; scriptIndex, x, y, z
and 0xfff, stor[27] ; and, operand
sub stor[27], stor[24] ; amount, operand
add 0x800, stor[24] ; amount, operand
jmp_cmp >=, stor[24], 0xfffff800, inl[:LABEL_82] ; operand, left, right, addr
add 0x1000, stor[24] ; amount, operand
jmp inl[:LABEL_83] ; addr
LABEL_82:
jmp_cmp <, stor[24], 0x800, inl[:LABEL_83] ; operand, left, right, addr
sub 0x1000, stor[24] ; amount, operand
LABEL_83:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[24], 0x0, stor[25] ; scriptIndex, x, y, z, frames
jmp_cmp !=, stor[26], 0xffffffff, inl[:LABEL_84] ; operand, left, right, addr
return
LABEL_84:
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, stor[26] ; animIndex
wait stor[25] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
return

; SUBROUTINE
LABEL_85:
call SMap::scriptReadModelRotate, stor[0], stor[28], stor[27], stor[28] ; scriptIndex, x, y, z
and 0xfff, stor[27] ; and, operand
and 0xfff, stor[24] ; and, operand
sub stor[27], stor[24] ; amount, operand
jmp_cmp >=, stor[24], 0xfffff800, inl[:LABEL_86] ; operand, left, right, addr
add 0x1000, stor[24] ; amount, operand
jmp inl[:LABEL_87] ; addr
LABEL_86:
jmp_cmp <, stor[24], 0x800, inl[:LABEL_87] ; operand, left, right, addr
sub 0x1000, stor[24] ; amount, operand
LABEL_87:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[24], 0x0, stor[25] ; scriptIndex, x, y, z, frames
jmp_cmp ==, 0xffffffff, stor[26], inl[:LABEL_88] ; operand, left, right, addr
jmp_cmp ==, 0xfffffffe, stor[26], inl[:LABEL_89] ; operand, left, right, addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, stor[26] ; animIndex
wait stor[25] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
jmp inl[:LABEL_90] ; addr
LABEL_88:
jmp inl[:LABEL_90] ; addr
LABEL_89:
wait stor[25] ; frames
jmp inl[:LABEL_90] ; addr
LABEL_90:
return

; SUBROUTINE
LABEL_91:
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptGetCameraOffset, stor[27], stor[28] ; x, y
LABEL_92:
jmp_cmp ==, stor[24], stor[27], inl[:LABEL_96] ; operand, left, right, addr
jmp_cmp <, stor[24], stor[27], inl[:LABEL_94] ; operand, left, right, addr
mov stor[24], stor[29] ; source, dest
sub stor[27], stor[29] ; amount, operand
jmp_cmp <, stor[26], stor[29], inl[:LABEL_93] ; operand, left, right, addr
mov stor[24], stor[27] ; source, dest
jmp inl[:LABEL_96] ; addr
LABEL_93:
add stor[26], stor[27] ; amount, operand
jmp inl[:LABEL_96] ; addr
LABEL_94:
mov stor[27], stor[29] ; source, dest
sub stor[24], stor[29] ; amount, operand
jmp_cmp <, stor[26], stor[29], inl[:LABEL_95] ; operand, left, right, addr
mov stor[24], stor[27] ; source, dest
jmp inl[:LABEL_96] ; addr
LABEL_95:
sub stor[26], stor[27] ; amount, operand
jmp inl[:LABEL_96] ; addr
LABEL_96:
jmp_cmp ==, stor[25], stor[28], inl[:LABEL_100] ; operand, left, right, addr
jmp_cmp <, stor[25], stor[28], inl[:LABEL_98] ; operand, left, right, addr
mov stor[25], stor[29] ; source, dest
sub stor[28], stor[29] ; amount, operand
jmp_cmp <, stor[26], stor[29], inl[:LABEL_97] ; operand, left, right, addr
mov stor[25], stor[28] ; source, dest
jmp inl[:LABEL_100] ; addr
LABEL_97:
add stor[26], stor[28] ; amount, operand
jmp inl[:LABEL_100] ; addr
LABEL_98:
mov stor[28], stor[29] ; source, dest
sub stor[25], stor[29] ; amount, operand
jmp_cmp <, stor[26], stor[29], inl[:LABEL_99] ; operand, left, right, addr
mov stor[25], stor[28] ; source, dest
jmp inl[:LABEL_100] ; addr
LABEL_99:
sub stor[26], stor[28] ; amount, operand
jmp inl[:LABEL_100] ; addr
LABEL_100:
call SMap::scriptSetModeParamForNextCallToScriptSetCameraOffsetOrHideSubmapForegroundObject, 0x2, 0x0, 0x0 ; mode, foregroundObjectIndex, out
call SMap::scriptSetCameraOffset, stor[27], stor[28] ; x, y
yield
jmp_cmp !=, stor[27], stor[24], inl[:LABEL_92] ; operand, left, right, addr
jmp_cmp !=, stor[28], stor[25], inl[:LABEL_92] ; operand, left, right, addr
return

; SUBROUTINE
LABEL_101:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_102] ; operand, left, right, addr
call SMap::scriptGetSobjCollidedWith2, stor[0], stor[24] ; sobjIndex, collided
jmp_cmp ==, 0xffffffff, stor[24], inl[:LABEL_102] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0x0, stor[25] ; source, dest
mov 0xff, stor[26] ; source, dest
mov 0x1, stor[27] ; source, dest
gosub inl[:LABEL_103] ; addr
LABEL_102:
return

; SUBROUTINE
LABEL_103:
mov stor[stor[stor[0], 23], 8], stor[31] ; source, dest
mul stor[stor[stor[0], 23], 31], stor[31] ; amount, operand
add stor[24], stor[31] ; amount, operand
shl 0x1, stor[31] ; shift, val
jmp_cmp ==, 0xffffffff, inl[:LABEL_181[stor[31]]], inl[:LABEL_111] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
mov var[64][stor[24]], stor[30] ; source, dest
call SMap::scriptReadModelPosition, stor[30], stor[28], stor[31], stor[31] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[29], stor[31], stor[31] ; scriptIndex, x, y, z
sub stor[29], stor[28] ; amount, operand
call SMap::scriptReadModelPosition, stor[30], stor[31], stor[31], stor[29] ; scriptIndex, x, y, z
call SMap::scriptReadModelPosition, stor[0], stor[31], stor[31], stor[30] ; scriptIndex, x, y, z
sub stor[30], stor[29] ; amount, operand
atan2_12 stor[28], stor[29], stor[28] ; y, x, dest
call SMap::scriptReadModelRotate, stor[0], stor[31], stor[29], stor[31] ; scriptIndex, x, y, z
and 0xfff, stor[29] ; and, operand
sub stor[29], stor[28] ; amount, operand
add 0x800, stor[28] ; amount, operand
jmp_cmp >=, stor[28], 0xfffff800, inl[:LABEL_104] ; operand, left, right, addr
add 0x1000, stor[28] ; amount, operand
jmp inl[:LABEL_105] ; addr
LABEL_104:
jmp_cmp <, stor[28], 0x800, inl[:LABEL_105] ; operand, left, right, addr
sub 0x1000, stor[28] ; amount, operand
LABEL_105:
call SMap::scriptRotateSobj, stor[0], 0x0, stor[28], 0x0, 0x4 ; scriptIndex, x, y, z, frames
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[26], 0x0 ; flag, value
mov var[64][stor[24]], stor[31] ; source, dest
fork_reenter stor[31], stor[27], stor[25] ; index, entrypoint, stor[32] value
mov stor[stor[stor[0], 23], 8], stor[31] ; source, dest
mul stor[stor[stor[0], 23], 31], stor[31] ; amount, operand
add stor[24], stor[31] ; amount, operand
shl 0x1, stor[31] ; shift, val
mov inl[:LABEL_181[stor[31]]], stor[30] ; source, dest
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[30], stor[29] ; flag, value
incr stor[31] ; operand
add inl[:LABEL_181[stor[31]]], stor[29] ; amount, operand
call Scus94491BpeSegment::scriptSetGlobalFlag1, stor[30], 0x1 ; flag, value
memcpy 0x2, inl[:LABEL_180[:LABEL_180[stor[29]]]], stor[27] ; size, src, dest
jmp_cmp <=, stor[27], 0x24, inl[:LABEL_106] ; operand, left, right, addr
mov 0x24, stor[27] ; source, dest
LABEL_106:
jmp_cmp <=, stor[28], 0x4, inl[:LABEL_107] ; operand, left, right, addr
mov 0x4, stor[28] ; source, dest
LABEL_107:
mov var[64][stor[24]], stor[24] ; source, dest
call SMap::scriptAddSobjTextbox, stor[25], stor[24], 0x121, stor[27], stor[28], inl[:LABEL_179[:LABEL_179[stor[29]]]] ; index, submapObjectIndex, packedData, width, height, text
LABEL_108:
call Scus94491BpeSegment::scriptReadGlobalFlag1, stor[26], stor[31] ; flag, value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_109] ; operand, left, right, addr
yield
jmp inl[:LABEL_108] ; addr
LABEL_109:
call Scus94491BpeSegment_8002::scriptIsTextboxInitialized, stor[25], stor[31] ; index, initialized
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_110] ; operand, left, right, addr
yield
jmp inl[:LABEL_109] ; addr
LABEL_110:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
LABEL_111:
return

; SUBROUTINE
LABEL_112:
jmp_cmp !&, 0x20, var[4], inl[:LABEL_116] ; operand, left, right, addr
mov 0x0, stor[24] ; source, dest
call SMap::scriptReadModelPosition, stor[0], stor[25], stor[26], stor[27] ; scriptIndex, x, y, z
call SMap::scriptReadModelRotate, stor[0], stor[31], stor[28], stor[31] ; scriptIndex, x, y, z
and 0xfff, stor[28] ; and, operand
add 0x800, stor[28] ; amount, operand
sin_12 stor[28], stor[29] ; angle, dest
cos_12 stor[28], stor[30] ; angle, dest
mov 0x28, stor[28] ; source, dest
mul_12 stor[28], stor[29] ; amount, operand
mul_12 stor[28], stor[30] ; amount, operand
add stor[29], stor[25] ; amount, operand
add stor[30], stor[27] ; amount, operand
LABEL_113:
mov stor[24], stor[28] ; source, dest
add 0x5, stor[28] ; amount, operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_182[stor[28]]], inl[:LABEL_116] ; operand, left, right, addr
decr stor[28] ; operand
jmp_cmp >, 0x1c3, inl[:LABEL_182[stor[28]]], inl[:LABEL_114] ; operand, left, right, addr
jmp_cmp <, 0x1f4, inl[:LABEL_182[stor[28]]], inl[:LABEL_114] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag2, inl[:LABEL_182[stor[28]]], stor[31] ; flag, value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_115] ; operand, left, right, addr
LABEL_114:
sub 0x3, stor[28] ; amount, operand
mov inl[:LABEL_182[stor[28]]], stor[31] ; source, dest
sub stor[26], stor[31] ; amount, operand
jmp_cmp <, 0x14, stor[31], inl[:LABEL_115] ; operand, left, right, addr
neg stor[31] ; operand
jmp_cmp <, 0x14, stor[31], inl[:LABEL_115] ; operand, left, right, addr
decr stor[28] ; operand
mov inl[:LABEL_182[stor[28]]], stor[30] ; source, dest
add 0x2, stor[28] ; amount, operand
mov inl[:LABEL_182[stor[28]]], stor[31] ; source, dest
sub stor[25], stor[30] ; amount, operand
sub stor[27], stor[31] ; amount, operand
mul stor[30], stor[30] ; amount, operand
mul stor[31], stor[31] ; amount, operand
add stor[30], stor[31] ; amount, operand
sqrt stor[31], stor[31] ; val, dest
incr stor[28] ; operand
jmp_cmp >=, inl[:LABEL_182[stor[28]]], stor[31], inl[:LABEL_117] ; operand, left, right, addr
LABEL_115:
add 0x6, stor[24] ; amount, operand
jmp inl[:LABEL_113] ; addr
LABEL_116:
return
LABEL_117:
gosub inl[:LABEL_118] ; addr
jmp inl[:LABEL_116] ; addr

; SUBROUTINE
LABEL_118:
mov stor[24], stor[28] ; source, dest
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
add 0x4, stor[28] ; amount, operand
jmp_cmp >, 0x1c3, inl[:LABEL_182[stor[28]]], inl[:LABEL_119] ; operand, left, right, addr
jmp_cmp <, 0x1f4, inl[:LABEL_182[stor[28]]], inl[:LABEL_119] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag2, inl[:LABEL_182[stor[28]]], stor[31] ; flag, value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_119] ; operand, left, right, addr
jmp inl[:LABEL_120] ; addr
LABEL_119:
incr stor[28] ; operand
mov inl[:LABEL_182[stor[28]]], stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:JMP_13bc_0] ; addr
gosub inl[:LABEL_5] ; addr
jmp inl[:LABEL_121] ; addr
LABEL_120:
call Scus94491BpeSegment::scriptSetGlobalFlag2, inl[:LABEL_182[stor[28]]], 0x1 ; flag, value
incr var[19] ; operand
incr stor[28] ; operand
mov inl[:LABEL_182[stor[28]]], stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:JMP_13bc_0] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, 0x1b, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
memcpy 0x2, inl[:LABEL_197], stor[27] ; size, src, dest
call SMap::scriptAddSobjTextbox, 0x0, var[64][0], 0x121, stor[27], stor[28], inl[:LABEL_196] ; index, submapObjectIndex, packedData, width, height, text
gosub inl[:LABEL_5] ; addr
jmp inl[:LABEL_121] ; addr
LABEL_121:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
return
data 0x660438
data 0x2000000
data 0x2000018
data 0x200001a
data 0x2000019
data 0x219
data 0x13010898
data 0x200001a
data 0x10341
data 0x14
data 0x200001a
data 0x9000021
data 0x11d
data 0x200001a
data 0x10341
data 0x14
data 0x200001a
data 0x900001b
data 0x219
data 0x1300088b
data 0x2000018
data 0x219
data 0x13020888
data 0x2000019
data 0x220
data 0x2000018
data 0x2000018
data 0x220
data 0x2000019
data 0x2000019
data 0x218
data 0x2000019
data 0x2000018
data 0x10341
data 0x640
data 0x2000018
data 0x9000008
data 0x148
data 0x900f956
data 0x140
data 0x9000006
data 0x148
data 0x900f971
data 0x140
data 0x9000002
data 0x49
data 0x3040438
data 0x1
data 0x1300086f
data 0x1301086f
data 0x1302086f
data 0x49

; SUBROUTINE
LABEL_122:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
call Scus94491BpeSegment::scriptReadGlobalFlag1, inl[:LABEL_185], stor[25] ; flag, value
mov 0x4, stor[26] ; source, dest
LABEL_123:
jmp_cmp ==, 0xffffffff, inl[:LABEL_185[stor[26]]], inl[:LABEL_125] ; operand, left, right, addr
jmp_cmp ==, stor[24], inl[:LABEL_185[stor[26]]], inl[:LABEL_124] ; operand, left, right, addr
incr stor[26] ; operand
jmp inl[:LABEL_123] ; addr
LABEL_124:
jmp_cmp &, 0x20, var[4], inl[:LABEL_126] ; operand, left, right, addr
jmp_cmp !=, 0x0, stor[25], inl[:LABEL_127] ; operand, left, right, addr
call SMap::scriptShowAlertIndicator, stor[0], inl[:LABEL_186] ; sobjIndex, y
call Scus94491BpeSegment::scriptPlaySound, 0x8, inl[:LABEL_187], 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_185], 0x1 ; flag, value
jmp inl[:LABEL_127] ; addr
LABEL_125:
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_127] ; operand, left, right, addr
call SMap::scriptHideAlertIndicator, stor[0] ; sobjIndex
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_185], 0x0 ; flag, value
jmp inl[:LABEL_127] ; addr
LABEL_126:
call SMap::scriptHideAlertIndicator, stor[0] ; sobjIndex
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_185], 0x0 ; flag, value
call Scus94491BpeSegment::scriptPlaySound, 0x8, inl[:LABEL_188], 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
sub 0x4, stor[26] ; amount, operand
gosub_table stor[26], inl[:LABEL_189] ; index, table
jmp inl[:LABEL_127] ; addr
LABEL_127:
return
data 0x49

; SUBROUTINE
LABEL_128:
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_185], 0x0 ; flag, value
call SMap::scriptHideAlertIndicator, stor[0] ; sobjIndex
return

; SUBROUTINE
LABEL_129:
jmp_cmp ==, 0xffffffff, inl[:LABEL_193], inl[:LABEL_139] ; operand, left, right, addr
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
mov 0x3, stor[25] ; source, dest
call Scus94491BpeSegment::scriptReadGlobalFlag1, inl[:LABEL_190], stor[31] ; flag, value
jmp_cmp !=, 0x0, stor[31], inl[:LABEL_135] ; operand, left, right, addr
LABEL_130:
jmp_cmp ==, stor[24], inl[:LABEL_190[stor[25]]], inl[:LABEL_132] ; operand, left, right, addr
add 0x3, stor[25] ; amount, operand
LABEL_131:
jmp_cmp !=, 0xffffffff, inl[:LABEL_190[stor[25]]], inl[:LABEL_130] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag1, inl[:LABEL_190], stor[31] ; flag, value
jmp_cmp ==, 0x0, stor[31], inl[:LABEL_139] ; operand, left, right, addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, inl[:LABEL_191], 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
jmp inl[:LABEL_139] ; addr
LABEL_132:
incr stor[25] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_190[stor[25]]], inl[:LABEL_133] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x400, 0x400, inl[:LABEL_190[stor[25]]] ; x, y, overlayIndex
LABEL_133:
incr stor[25] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_190[stor[25]]], inl[:LABEL_134] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x0, 0x0, inl[:LABEL_190[stor[25]]] ; x, y, overlayIndex
LABEL_134:
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_190], 0x1 ; flag, value
incr stor[25] ; operand
jmp inl[:LABEL_131] ; addr
LABEL_135:
jmp_cmp ==, stor[24], inl[:LABEL_190[stor[25]]], inl[:LABEL_139] ; operand, left, right, addr
add 0x3, stor[25] ; amount, operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_190[stor[25]]], inl[:LABEL_135] ; operand, left, right, addr
mov 0x3, stor[25] ; source, dest
LABEL_136:
incr stor[25] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_190[stor[25]]], inl[:LABEL_137] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x0, 0x0, inl[:LABEL_190[stor[25]]] ; x, y, overlayIndex
LABEL_137:
incr stor[25] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_190[stor[25]]], inl[:LABEL_138] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x400, 0x400, inl[:LABEL_190[stor[25]]] ; x, y, overlayIndex
LABEL_138:
incr stor[25] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_190[stor[25]]], inl[:LABEL_136] ; operand, left, right, addr
call Scus94491BpeSegment::scriptPlaySound, 0x8, inl[:LABEL_192], 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_190], 0x0 ; flag, value
jmp inl[:LABEL_139] ; addr
LABEL_139:
return

; SUBROUTINE
LABEL_140:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_190], 0x0 ; flag, value
mov 0x3, stor[25] ; source, dest
LABEL_141:
jmp_cmp ==, 0xffffffff, inl[:LABEL_190[stor[25]]], inl[:LABEL_143] ; operand, left, right, addr
add 0x2, stor[25] ; amount, operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_190[stor[25]]], inl[:LABEL_142] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x400, 0x400, inl[:LABEL_190[stor[25]]] ; x, y, overlayIndex
LABEL_142:
incr stor[25] ; operand
jmp inl[:LABEL_141] ; addr
LABEL_143:
mov 0x3, stor[25] ; source, dest
LABEL_144:
mov stor[25], stor[26] ; source, dest
jmp_cmp ==, 0xffffffff, inl[:LABEL_190[stor[26]]], inl[:LABEL_147] ; operand, left, right, addr
jmp_cmp !=, stor[24], inl[:LABEL_190[stor[26]]], inl[:LABEL_146] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, inl[:LABEL_190], 0x1 ; flag, value
incr stor[26] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_190[stor[26]]], inl[:LABEL_145] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x400, 0x400, inl[:LABEL_190[stor[26]]] ; x, y, overlayIndex
LABEL_145:
incr stor[26] ; operand
jmp_cmp ==, 0xffffffff, inl[:LABEL_190[stor[26]]], inl[:LABEL_146] ; operand, left, right, addr
call SMap::scriptSetEnvForegroundPosition, 0x0, 0x0, inl[:LABEL_190[stor[26]]] ; x, y, overlayIndex
LABEL_146:
add 0x3, stor[25] ; amount, operand
jmp inl[:LABEL_144] ; addr
LABEL_147:
return

; SUBROUTINE
LABEL_148:
gosub inl[:LABEL_149] ; addr
return

; SUBROUTINE
LABEL_149:
jmp_cmp ==, 0xffffffff, inl[:LABEL_194], inl[:LABEL_155] ; operand, left, right, addr
mov 0x0, stor[24] ; source, dest
call SMap::scriptCheckSelfCollision, stor[25] ; collisionPrimitiveIndex
LABEL_150:
mov inl[:LABEL_194[stor[24]]], stor[26] ; source, dest
incr stor[24] ; operand
mov inl[:LABEL_194[stor[24]]], stor[27] ; source, dest
incr stor[24] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_194[stor[24]]], inl[:LABEL_151] ; operand, left, right, addr
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, stor[26], stor[27], stor[31] ; mode, overlayIndex, z, out
jmp inl[:LABEL_154] ; addr
LABEL_151:
jmp_cmp ==, 0xffffffff, inl[:LABEL_194[stor[24]]], inl[:LABEL_154] ; operand, left, right, addr
jmp_cmp ==, stor[25], inl[:LABEL_194[stor[24]]], inl[:LABEL_152] ; operand, left, right, addr
incr stor[24] ; operand
jmp inl[:LABEL_151] ; addr
LABEL_152:
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, stor[26], stor[27], stor[31] ; mode, overlayIndex, z, out
LABEL_153:
incr stor[24] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_194[stor[24]]], inl[:LABEL_153] ; operand, left, right, addr
LABEL_154:
incr stor[24] ; operand
jmp_cmp !=, 0xffffffff, inl[:LABEL_194[stor[24]]], inl[:LABEL_150] ; operand, left, right, addr
LABEL_155:
return
ENTRYPOINT_0:
mov var[65], stor[23] ; source, dest
incr stor[stor[stor[0], 23], 8] ; operand
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call SMap::scriptSelfSetSobjHidden, 0x0 ; value
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call SMap::scriptSelfSetSobjFlag, 0x15, 0x1 ; bitIndex, value
call SMap::scriptSelfSetSobjFlag, 0x18, 0x1 ; bitIndex, value
call SMap::scriptSetSobjCollision2, stor[0], 0x14, 0x28, 0xa ; sobjIndex, horizontalSize, verticalSize, reach
call SMap::scriptSetSobjPlayerCollisionMetrics, stor[0], 0xa, 0x28, 0xa ; sobjIndex, horizontalSize, verticalSize, reach
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::scriptHideAlertIndicator, stor[0] ; sobjIndex
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call Scus94491BpeSegment::scriptStopSoundsAndSequences ; index
call SMap::scriptGetSetEncountersDisabled, 0x1, 0x1, stor[31] ; set, apply, value
mov 0x0, var[47] ; source, dest
gosub inl[:LABEL_128] ; addr
gosub inl[:LABEL_148] ; addr
gosub inl[:LABEL_140] ; addr
gosub inl[:LABEL_62] ; addr
jmp_cmp ==, 0x1, stor[stor[stor[0], 23], 31], inl[:LABEL_156] ; operand, left, right, addr
call SMap::scriptUnblockCollisionPrimitive, 0x20 ; collisionPrimitiveIndex
call SMap::FUN_800f1b64, inl[:LABEL_183] ; data
LABEL_156:
yield
jmp_table stor[stor[stor[0], 23], 31], inl[:LABEL_157] ; index, table

; SUBROUTINE TABLE
LABEL_157:
rel :JMP_2a8c_0
rel :JMP_2a8c_1
JMP_2a8c_0:
call Scus94491BpeSegment::scriptReadGlobalFlag2, 0x1d, stor[24] ; flag, value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_160] ; operand, left, right, addr
jmp_cmp !=, 0x1, var[67], inl[:LABEL_158] ; operand, left, right, addr
jmp_cmp ==, 0x67, var[68], inl[:LABEL_161] ; operand, left, right, addr
LABEL_158:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
jmp_cmp ==, 0x2, stor[24], inl[:LABEL_162] ; operand, left, right, addr
jmp_cmp ==, 0x1a, stor[24], inl[:LABEL_163] ; operand, left, right, addr
jmp_cmp ==, 0x20, stor[24], inl[:LABEL_164] ; operand, left, right, addr
LABEL_159:
gosub inl[:LABEL_129] ; addr
gosub inl[:LABEL_149] ; addr
gosub inl[:LABEL_122] ; addr
gosub inl[:LABEL_112] ; addr
gosub inl[:LABEL_101] ; addr
gosub inl[:LABEL_14] ; addr
yield
jmp inl[:LABEL_158] ; addr
LABEL_160:
gosub inl[:LABEL_171] ; addr
jmp inl[:LABEL_158] ; addr
LABEL_161:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, 0xb, 0x0, stor[24] ; mode, overlayIndex, z, out
call SMap::scriptSetModelPosition, stor[0], 0xffffffb1, 0xffffffb2, 0x20c ; scriptIndex, x, y, z
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x0, 0x0 ; scriptIndex, x, y, z
wait_cmp >=, 0x64, var[10] ; operator, left, right
mov 0xffffff72, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0x12b, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
jmp inl[:LABEL_158] ; addr
LABEL_162:
call Scus94491BpeSegment::scriptReadGlobalFlag2, 0x1e, stor[24] ; flag, value
jmp_cmp ==, 0x0, stor[24], inl[:LABEL_159] ; operand, left, right, addr
gosub inl[:LABEL_173] ; addr
jmp inl[:LABEL_159] ; addr
LABEL_163:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
mov 0xffffffb1, stor[24] ; source, dest
mov 0xffffffb2, stor[25] ; source, dest
mov 0x20c, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
call SMap::scriptMapTransition, 0x67, 0xb ; submapCut, submapScene
rewind
LABEL_164:
call SMap::scriptMapTransition, 0x63, 0x1 ; submapCut, submapScene
rewind
JMP_2a8c_1:
call SMap::scriptSetSobjPlayerCollisionMetrics, stor[0], 0x28, 0x28, 0x14 ; sobjIndex, horizontalSize, verticalSize, reach
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
jmp_cmp ==, 0x68, stor[24], inl[:LABEL_166] ; operand, left, right, addr
jmp_cmp ==, 0x69, stor[24], inl[:LABEL_166] ; operand, left, right, addr
jmp_cmp ==, 0x7e, stor[24], inl[:LABEL_166] ; operand, left, right, addr
jmp inl[:LABEL_165] ; addr
LABEL_165:
mov 0x3, stor[24] ; source, dest
gosub inl[:LABEL_35] ; addr
gosub inl[:LABEL_174] ; addr
mov var[64][1], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x2 ; index, entrypoint, stor[32] value
jmp inl[:LABEL_167] ; addr
LABEL_166:
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptSetModeParamForNextCallToScriptSetCameraOffsetOrHideSubmapForegroundObject, 0x2, 0x0, 0x0 ; mode, foregroundObjectIndex, out
call SMap::scriptSetCameraOffset, 0x70, 0x4e ; x, y
call SMap::scriptSetModelPosition, var[64][1], 0xffffff2a, 0xffffff10, 0x2a0 ; scriptIndex, x, y, z
call SMap::scriptSetModelRotate, var[64][1], 0x0, 0x880, 0x0 ; scriptIndex, x, y, z
mov var[64][1], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x3 ; index, entrypoint, stor[32] value
jmp inl[:LABEL_167] ; addr
LABEL_167:
call SMap::scriptCheckSelfCollision, stor[24] ; collisionPrimitiveIndex
jmp_cmp ==, stor[24], 0x72, inl[:LABEL_168] ; operand, left, right, addr
jmp_cmp ==, stor[24], 0x50, inl[:LABEL_168] ; operand, left, right, addr
gosub inl[:LABEL_101] ; addr
gosub inl[:LABEL_14] ; addr
yield
jmp inl[:LABEL_167] ; addr
LABEL_168:
gosub inl[:LABEL_178] ; addr
call Scus94491BpeSegment::scriptSetFlag, var[126], 0x9, 0x0 ; flags, flag, value
call Scus94491BpeSegment::scriptSetFlag, var[126], 0xa, 0x1 ; flags, flag, value
call SMap::scriptMapTransition, 0x60, 0x0 ; submapCut, submapScene
rewind

; SUBROUTINE
JMP_4534_0:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptDisableShadow, stor[0] ; sobjIndex
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
mov 0xa00, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_85] ; addr
mov 0x1c0, stor[24] ; source, dest
mov 0xffffff43, stor[25] ; source, dest
mov 0xffffff09, stor[26] ; source, dest
mov 0x2, stor[27] ; source, dest
mov 0xffffffff, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x1 ; animIndex
gosub inl[:LABEL_0] ; addr
mov var[64][1], stor[24] ; source, dest
fork stor[24], inl[:LABEL_169], 0x0 ; index, addr, stor[32] value
mov 0x1da, stor[24] ; source, dest
mov 0xfffffeba, stor[25] ; source, dest
mov 0xffffff39, stor[26] ; source, dest
mov 0x3, stor[27] ; source, dest
mov 0xffffffff, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x14 ; animIndex
gosub inl[:LABEL_0] ; addr
mov 0x1e9, stor[24] ; source, dest
mov 0xfffffeb6, stor[25] ; source, dest
mov 0xffffff44, stor[26] ; source, dest
mov 0x2, stor[27] ; source, dest
mov 0xffffffff, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x1 ; animIndex
gosub inl[:LABEL_0] ; addr
mov 0x201, stor[24] ; source, dest
mov 0xfffffeae, stor[25] ; source, dest
mov 0xffffff68, stor[26] ; source, dest
mov 0x3, stor[27] ; source, dest
mov 0xffffffff, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
gosub inl[:LABEL_0] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, 0x9, 0x0, stor[24] ; mode, overlayIndex, z, out
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
return

; FORK JMP
LABEL_169:
mov 0xffffff71, stor[24] ; source, dest
mov 0x4f, stor[25] ; source, dest
mov 0x2, stor[26] ; source, dest
gosub inl[:LABEL_91] ; addr
consume

; SUBROUTINE
JMP_4534_1:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, 0x9, 0x7d0, stor[24] ; mode, overlayIndex, z, out
mov 0xa00, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_85] ; addr
mov 0x1da, stor[24] ; source, dest
mov 0xfffffeba, stor[25] ; source, dest
mov 0xffffff39, stor[26] ; source, dest
mov 0x2, stor[27] ; source, dest
mov 0xffffffff, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x3 ; animIndex
gosub inl[:LABEL_0] ; addr
mov var[64][1], stor[24] ; source, dest
fork stor[24], inl[:LABEL_170], 0x0 ; index, addr, stor[32] value
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x15 ; animIndex
mov 0x1c0, stor[24] ; source, dest
mov 0xffffff43, stor[25] ; source, dest
mov 0xffffff09, stor[26] ; source, dest
mov 0x3, stor[27] ; source, dest
mov 0xffffffff, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
gosub inl[:LABEL_0] ; addr
mov 0x180, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_85] ; addr
mov 0x19d, stor[24] ; source, dest
mov 0xffffff60, stor[25] ; source, dest
mov 0xfffffeea, stor[26] ; source, dest
mov 0x2, stor[27] ; source, dest
mov 0xffffffff, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x1 ; animIndex
gosub inl[:LABEL_0] ; addr
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
return

; FORK JMP
LABEL_170:
mov 0xffffffa4, stor[24] ; source, dest
mov 0xfffffffd, stor[25] ; source, dest
mov 0x2, stor[26] ; source, dest
gosub inl[:LABEL_91] ; addr
consume

; SUBROUTINE
LABEL_171:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptSetModelPosition, stor[0], 0xfffffd90, 0x16, 0x1e8 ; scriptIndex, x, y, z
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x0, 0x0 ; scriptIndex, x, y, z
mov 0x32, stor[11] ; source, dest
cos_12 0x19, stor[12] ; angle, dest
sin_12 0x19, stor[13] ; angle, dest
mul_12 0x64, stor[12] ; amount, operand
mul_12 0xffffffd8, stor[13] ; amount, operand
sub 0x1e, stor[12] ; amount, operand
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptSetModeParamForNextCallToScriptSetCameraOffsetOrHideSubmapForegroundObject, 0x2, 0x0, 0x0 ; mode, foregroundObjectIndex, out
call SMap::scriptSetCameraOffset, stor[12], stor[13] ; x, y
wait_cmp >=, 0x64, var[10] ; operator, left, right
mov 0xfffffe92, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0xec, stor[26] ; source, dest
mov 0x5, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
mov var[64][1], stor[24] ; source, dest
mov var[64][2], stor[25] ; source, dest
fork_reenter stor[24], 0x2, 0x0 ; index, entrypoint, stor[32] value
fork_reenter stor[25], 0x2, 0x0 ; index, entrypoint, stor[32] value
mov 0x3, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
LABEL_172:
cos_12 stor[11], stor[12] ; angle, dest
sin_12 stor[11], stor[13] ; angle, dest
mul_12 0x64, stor[12] ; amount, operand
mul_12 0xffffffd8, stor[13] ; amount, operand
sub 0x1e, stor[12] ; amount, operand
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptSetModeParamForNextCallToScriptSetCameraOffsetOrHideSubmapForegroundObject, 0x2, 0x0, 0x0 ; mode, foregroundObjectIndex, out
call SMap::scriptSetCameraOffset, stor[12], stor[13] ; x, y
yield
add 0x19, stor[11] ; amount, operand
jmp_cmp >, 0x101d, stor[11], inl[:LABEL_172] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x4, 0x1 ; flag, value
mov 0x5, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x5 ; animIndex
mov 0x7, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x14, stor[24] ; source, dest
mov 0x2, stor[26] ; source, dest
gosub inl[:LABEL_57] ; addr
mov 0xffffffff, stor[24] ; source, dest
gosub inl[:LABEL_55] ; addr
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x6, 0x1 ; flag, value
mov 0x8, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x63, stor[25] ; source, dest
gosub inl[:LABEL_1] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag2, 0x1d, 0x1 ; flag, value
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
return

; SUBROUTINE
LABEL_173:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov var[64][2], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x1 ; index, entrypoint, stor[32] value
mov 0x3, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x2, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_81] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0xfffffffa, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_66] ; addr
mov 0x19, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
gosub inl[:LABEL_57] ; addr
mov 0x10, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_66] ; addr
gosub inl[:LABEL_5] ; addr
mov 0xfffffe54, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0x120, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x2, 0x1 ; flag, value
mov 0x3, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x0, stor[24] ; source, dest
mov 0x63, stor[25] ; source, dest
gosub inl[:LABEL_1] ; addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
return

; SUBROUTINE
LABEL_174:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call SMap::scriptSetModelPosition, stor[0], 0x89, 0x16, 0x192 ; scriptIndex, x, y, z
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x0, 0x0 ; scriptIndex, x, y, z
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptSetModeParamForNextCallToScriptSetCameraOffsetOrHideSubmapForegroundObject, 0x2, 0x0, 0x0 ; mode, foregroundObjectIndex, out
call SMap::scriptSetCameraOffset, 0xe, 0x9 ; x, y
call SMap::scriptSetEnvironmentOverlayDepthModeAndZ, 0x2, 0xb, 0x3e8, stor[31] ; mode, overlayIndex, z, out
call SMap::scriptSetEnvForegroundPosition, 0x400, 0x400, 0x3 ; x, y, overlayIndex
mov var[64][1], stor[24] ; source, dest
mov var[64][4], stor[25] ; source, dest
fork_reenter stor[24], 0x2, 0x1 ; index, entrypoint, stor[32] value
fork_reenter stor[25], 0x2, 0x0 ; index, entrypoint, stor[32] value
wait_cmp >=, 0xb4, var[10] ; operator, left, right
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x0, 0x1 ; flag, value
mov 0x31, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0xd2, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
mov 0x4, stor[24] ; source, dest
mov 0x8, stor[25] ; source, dest
mov 0x1, stor[26] ; source, dest
gosub inl[:LABEL_81] ; addr
mov 0x1, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x15, stor[24] ; source, dest
mov 0xd2, stor[25] ; source, dest
mov 0x8, stor[26] ; source, dest
mov 0x1, stor[27] ; source, dest
gosub inl[:LABEL_75] ; addr
mov 0xc, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x15, stor[24] ; source, dest
mov 0x16, stor[25] ; source, dest
mov 0xd2, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
mov 0xfffffff1, stor[24] ; source, dest
mov 0xffffffef, stor[25] ; source, dest
mov 0xee, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
mov 0x2, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
mov 0x78, stor[24] ; source, dest
LABEL_175:
jmp_cmp &, 0xf000, var[3], inl[:LABEL_176] ; operand, left, right, addr
yield
while stor[24], inl[:LABEL_175] ; counter, addr
LABEL_176:
jmp_cmp !=, 0x0, stor[24], inl[:LABEL_177] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
mov var[64][1], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x5 ; index, entrypoint, stor[32] value
mov 0x8, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x11 ; animIndex
mov 0x7, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x1, stor[24] ; source, dest
mov 0x7, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_81] ; addr
mov 0xb, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0xa, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
LABEL_177:
mov 0x0, stor[24] ; source, dest
mov 0x63, stor[25] ; source, dest
gosub inl[:LABEL_1] ; addr
return

; SUBROUTINE
LABEL_178:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
mov var[64][3], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x0 ; index, entrypoint, stor[32] value
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xa, 0x1 ; flag, value
mov 0xfffffd5c, stor[24] ; source, dest
mov 0xfffffebf, stor[25] ; source, dest
mov 0x23f, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
mov 0x3, stor[24] ; source, dest
mov 0x6, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
gosub inl[:LABEL_81] ; addr
mov 0x1e, stor[24] ; source, dest
mov 0x3, stor[26] ; source, dest
gosub inl[:LABEL_57] ; addr
mov 0x5, stor[24] ; source, dest
mov 0xffffffff, stor[25] ; source, dest
gosub inl[:LABEL_66] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xb, 0x1 ; flag, value
mov 0xc, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
mov 0x10, stor[24] ; source, dest
wait stor[24] ; frames
mov 0xfffffd03, stor[24] ; source, dest
mov 0xfffffebf, stor[25] ; source, dest
mov 0x1f9, stor[26] ; source, dest
mov 0x4, stor[27] ; source, dest
mov 0x1, stor[28] ; source, dest
gosub inl[:LABEL_70] ; addr
mov 0x1e, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
mov var[64][1], stor[24] ; source, dest
fork_reenter stor[24], 0x2, 0x4 ; index, entrypoint, stor[32] value
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x11 ; animIndex
mov 0x7, stor[24] ; source, dest
wait stor[24] ; frames
mov 0xa00, stor[24] ; source, dest
mov 0xa, stor[25] ; source, dest
mov 0xffffffff, stor[26] ; source, dest
gosub inl[:LABEL_85] ; addr
mov 0xa, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0xc, stor[24] ; source, dest
wait stor[24] ; frames
call SMap::scriptSelfToggleAnimationDisabled, 0x0 ; disabled
call SMap::scriptSelfLoadSobjAnimation, 0x5 ; animIndex
mov 0x7, stor[24] ; source, dest
wait stor[24] ; frames
mov 0x1f, stor[24] ; source, dest
mov 0x3, stor[26] ; source, dest
gosub inl[:LABEL_57] ; addr
mov 0xffffffff, stor[24] ; source, dest
gosub inl[:LABEL_55] ; addr
gosub inl[:LABEL_5] ; addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xd, 0x1 ; flag, value
mov 0xe, stor[24] ; source, dest
mov 0x1, stor[25] ; source, dest
gosub inl[:LABEL_51] ; addr
call Scus94491BpeSegment::scriptChangeSequenceVolumeOverTime, 0x3c, 0x0 ; fadeTime, volume
call Scus94491BpeSegment::scriptStartFadeEffect, 0x1, 0x3c ; type, frames
mov 0x3c, stor[24] ; source, dest
wait stor[24] ; frames
call Scus94491BpeSegment::scriptStopCurrentMusicSequence ; index
mov 0x0, stor[24] ; source, dest
mov 0x63, stor[25] ; source, dest
gosub inl[:LABEL_1] ; addr
return
LABEL_179:
rel :PTR_424c_0
rel :PTR_424c_1
rel :PTR_424c_2
rel :PTR_424c_3
rel :PTR_424c_4
rel :PTR_424c_5
rel :PTR_424c_6
rel :PTR_424c_7
rel :PTR_424c_0
rel :PTR_424c_0
rel :PTR_424c_10
rel :PTR_424c_10
rel :PTR_424c_10
rel :PTR_424c_10
rel :PTR_424c_10
rel :PTR_424c_10
rel :PTR_424c_10
rel :PTR_424c_10
rel :PTR_424c_10
rel :PTR_424c_10
rel :PTR_424c_20
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_25
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_30
rel :PTR_424c_31
rel :PTR_424c_32
rel :PTR_424c_32
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_21
rel :PTR_424c_21
LABEL_180:
rel :PTR_42ec_0
rel :PTR_42ec_1
rel :PTR_42ec_2
rel :PTR_42ec_3
rel :PTR_42ec_4
rel :PTR_42ec_5
rel :PTR_42ec_6
rel :PTR_42ec_7
rel :PTR_42ec_0
rel :PTR_42ec_0
rel :PTR_42ec_10
rel :PTR_42ec_10
rel :PTR_42ec_10
rel :PTR_42ec_10
rel :PTR_42ec_10
rel :PTR_42ec_10
rel :PTR_42ec_10
rel :PTR_42ec_10
rel :PTR_42ec_10
rel :PTR_42ec_10
rel :PTR_42ec_20
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_25
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_30
rel :PTR_42ec_31
rel :PTR_42ec_32
rel :PTR_42ec_32
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_21
rel :PTR_42ec_21
LABEL_181:
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xc9
data 0x0
data 0xffffffff
data 0xffffffff
data 0xca
data 0x2
data 0xcb
data 0x4
data 0xcc
data 0x6
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xc8
data 0x20
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
LABEL_182:
data 0xffffff17
data 0x16
data 0x12d
data 0x23
data 0x0
data 0xa
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
LABEL_183:
data 0x2
data 0x0
data 0xfffffff1
data 0xffffffef
data 0xa
data 0x0
data 0x0
data 0x0
data 0x12
data 0x0
data 0x0
data 0x0
data 0x13
data 0x0
data 0x3
data 0x0
data 0x19
data 0x2
data 0xfffffffd
data 0x0
data 0x1d
data 0x0
data 0x0
data 0x0
data 0x20
data 0x0
data 0x0
data 0x0
data 0x26
data 0x0
data 0x5
data 0x6
data 0xffffffff
LABEL_184:
data 0x2
data 0x3
data 0x19
data 0x18
data 0x6
data 0x21
data 0x1f
data 0x3d
data 0x11
data 0xd
data 0x25
data 0x24
data 0x1e
data 0x1c
data 0x16
data 0x15
data 0xffffffff
data 0xffffffff
LABEL_185:
data 0xfe
LABEL_186:
data 0xffffffba
LABEL_187:
data 0x12
LABEL_188:
data 0x13
data 0x28
data 0x7b
data 0xffffffff

; SUBROUTINE TABLE
LABEL_189:
rel :JMP_4534_0
rel :JMP_4534_1
LABEL_190:
data 0xfd
LABEL_191:
data 0x17
LABEL_192:
data 0x17
LABEL_193:
data 0x8
data 0x3
data 0xffffffff
data 0xa
data 0x3
data 0xffffffff
data 0x1f
data 0x2
data 0xffffffff
data 0x20
data 0x2
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffff4d
data 0xfffffefc
data 0x34b
LABEL_194:
data 0x14
data 0x22c
data 0xffffffff
data 0xb
data 0x0
data 0x18
data 0x19
data 0x1a
data 0xffffffff
data 0xb
data 0x3e8
data 0x4
data 0x17
data 0x2e
data 0x30
data 0x33
data 0x34
data 0x3a
data 0x5e
data 0xffffffff
data 0xf
data 0x23b
data 0x3b
data 0x4f
data 0x53
data 0x57
data 0x5c
data 0x2b
data 0x0
data 0x10
data 0xffffffff
data 0xf
data 0x28a
data 0x36
data 0x47
data 0xffffffff
data 0xffffffff
data 0xffffffff
data 0xffffffff
LABEL_195:
data 0x3d
data 0x3a
data 0x60
data 0x6c
data 0x72
data 0x50
data 0x75
data 0x54
data 0x35
data 0x52
data 0xffffffff
PTR_424c_21:
data str[Lavitz<line>Let's go to the HQ first.<line><colour=5>Kaiser<colour=0> of the Eighth Knighthood<line>must be waiting for us.]
PTR_42ec_21:
data 0x1f
data 0x4
data 0x400031
data 0x460039
data 0xa1ff0039
data 0x4b0027
data 0x4c0000
data 0x410040
data 0x4b
data 0x3d004a
data 0x440039
data 0x510044
data 0x390000
data 0x4c0000
data 0x4f0047
data 0x50046
data 0xa0ff
data 0x16
data 0x2
data 0x400031
data 0x460039
data 0xa1ff0039
data 0x4c0027
data 0x440000
data 0x470047
data 0x4b0043
data 0x440000
data 0x430041
data 0x3d
data 0x39
data 0x47003e
data 0x4c004a
data 0x3d004a
data 0x4b004b
data 0xa0ff0002
data 0x19
data 0x2
PTR_424c_20:
data str[Dart<line>The war changed it.]
PTR_42ec_20:
data 0x13
data 0x2
data 0x39002a
data 0x41004e
data 0x52004c
data 0x32a1ff
data 0x390040
data 0x9004c
data 0x4b
data 0x4a004c
data 0x3d004d
data 0x20002
data 0x20002
data 0x2ca1ff
data 0x3a0047
data 0x3c0047
data 0x51
data 0x39004f
data 0x4c0046
data 0x3c003d
data 0x410000
data 0x1004c
data 0x3a0000
data 0x4c004d
data 0x410000
data 0x4c
data 0x47003b
data 0x44004d
data 0x46003c
data 0x4c0009
data 0x3aa1ff
data 0x3d
data 0x4e0039
data 0x410047
data 0x3d003c
data 0x2003c
data 0x2aa1ff
data 0x4c003d
data 0x4b0009
data 0x3e0000
data 0x3b0047
data 0x4b004d
data 0x470000
data 0x46
data 0x4d0047
data 0x4a
data 0x3d003c
data 0x3d003e
data 0x4b0046
data 0x4b003d
data 0x460000
data 0x4f0047
data 0xa0ff0002
data 0x21
data 0x5
data 0x400031
data 0x460039
data 0xa1ff0039
data 0x27
data 0x47003c
data 0x90046
data 0x4c
data 0x40004c
data 0x460041
data 0x43
data 0x4c0041
data 0x4b0009
data 0x390000
data 0x3f0000
data 0x470047
data 0xa1ff003c
data 0x3c0041
data 0x39003d
data 0x4c0000
data 0x47
data 0x47003f
data 0x470000
data 0x4c004d
data 0x460000
data 0x4f0047
data 0xa0ff0002
data 0x19
data 0x3
PTR_424c_25:
data str[Dart<line>I agree.<line>The meeting can end any minute.]
PTR_42ec_25:
data 0x1f
data 0x3
data 0x390029
data 0x4b0041
data 0x4a003d
data 0x27a1ff
data 0x4f0000
data 0x460039
data 0x4c
data 0x47004c
data 0x390000
data 0x43004b
data 0x3a0000
data 0x4c0047
data 0x40
data 0x3e0047
data 0x510000
data 0x4d0047
data 0x4ca1ff
data 0x47
data 0x4d003f
data 0x4a0039
data 0x3c
data 0x40004c
data 0x3d
data 0x39003a
data 0x43003b
data 0x3f0000
data 0x4c0039
data 0x2003d
data 0x27a1ff
data 0x9004c
data 0x4b
data 0x4c0039
data 0x4c0000
data 0x3d0040
data 0x3d0000
data 0x3c0046
data 0x470000
data 0x3e
data 0x40004c
data 0x3d
data 0x4c004b
data 0x410039
data 0x4b004a
data 0xa0ff0002
data 0x1e
data 0x4
PTR_424c_30:
data str[Dart<line>I am here to replace you.<line>You can trust us.]
PTR_42ec_30:
data 0x19
data 0x3
data 0x470031
data 0x3c0044
data 0x3d0041
data 0xa1ff004a
data 0x3d0037
data 0x1004b
data 0x4b0000
data 0x4a0041
data 0xa0ff0002
data 0x9
data 0x2
PTR_424c_31:
data str[Dart<line>If Sandora attacks, it will be<line>a night raid.]
PTR_42ec_31:
data 0x1e
data 0x3
data 0x39002a
data 0x41004e
data 0x52004c
data 0x35a1ff
data 0x3d
data 0x39003b
data 0x460046
data 0x4c0047
data 0x4a0000
data 0x44003d
data 0x500039
data 0x4c0000
data 0x440041
data 0x44
data 0x470045
data 0x46004a
data 0x460041
data 0x2003f
data 0x30a1ff
data 0x4b003d
data 0x4c
data 0x40004f
data 0x440041
data 0x3d
data 0x4c0041
data 0x4b0009
data 0x4b0000
data 0x41004c
data 0x440044
data 0x440000
data 0x3f0041
data 0x4c0040
data 0xa0ff0002
data 0x1d
data 0x3
PTR_424c_32:
data str[<speed=0>Let's go quick and relieve the<line>guard.]
PTR_42ec_32:
data 0x1e
data 0x2
PTR_424c_0:
data str[<speed=0>A delay in the detection of the<line>enemy is equivalent to losing!<line>Guards cannot let their attention<line>stray even for a moment!]
PTR_42ec_0:
data 0x21
data 0x4
PTR_424c_1:
data str[<sauto=0>Everything is under control, sir!<line>I am continuing my duty!]
PTR_42ec_1:
data 0x21
data 0x2
PTR_424c_2:
data str[<speed=0>I heard that Sandora not only has<line>a Dragon, but it also has one of the<line>legendary <colour=5>Gigantos<colour=0>,<line>and I heard he is a pretty strong<line>warrior.]
PTR_42ec_2:
data 0x24
data 0x5
PTR_424c_3:
data str[<sauto=0>His name is <colour=5>Kongol<colour=0>.<line>Gigantos are powerful and tough.<line>They are a troublesome enemy.]
PTR_42ec_3:
data 0x20
data 0x3
PTR_424c_4:
data str[<speed=0>This pendant is an amulet that my<line>daughter gave to me.]
PTR_42ec_4:
data 0x21
data 0x2
PTR_424c_5:
data str[<sauto=0>With this, I will come back<line>alive.]
PTR_42ec_5:
data 0x1b
data 0x2
PTR_424c_6:
data str[<speed=0>Doel is a dominator who enjoys<line>manipulating his country and people!<line>We cannot hand over our Serdio to<line>him!]
PTR_42ec_6:
data 0x24
data 0x4
PTR_424c_7:
data str[<sauto=0>King Albert is a decent man and<line>should be the true king!]
PTR_42ec_7:
data 0x1f
data 0x2
PTR_424c_10:
data str[<sauto=0>"Silver Dragon Inn<line>for your relaxation"]
PTR_42ec_10:
data 0x14
data 0x2
LABEL_196:
data str[<sauto=0>Acquired <colour=5>Stardust<colour=0> ]
LABEL_197:
data 0x12
data 0x1
